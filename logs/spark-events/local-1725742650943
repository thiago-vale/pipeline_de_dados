{"Event":"SparkListenerLogStart","Spark Version":"3.5.2"}
{"Event":"SparkListenerResourceProfileAdded","Resource Profile Id":0,"Executor Resource Requests":{"cores":{"Resource Name":"cores","Amount":4,"Discovery Script":"","Vendor":""},"memory":{"Resource Name":"memory","Amount":12288,"Discovery Script":"","Vendor":""},"offHeap":{"Resource Name":"offHeap","Amount":4096,"Discovery Script":"","Vendor":""}},"Task Resource Requests":{"cpus":{"Resource Name":"cpus","Amount":1.0}}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1725742651131,"Executor ID":"driver","Executor Info":{"Host":"192.168.0.62","Total Cores":8,"Log Urls":{},"Attributes":{},"Resources":{},"Resource Profile Id":0}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Maximum Memory":6396942745,"Timestamp":1725742651144,"Maximum Onheap Memory":2101975449,"Maximum Offheap Memory":4294967296}
{"Event":"SparkListenerEnvironmentUpdate","JVM Information":{"Java Home":"/usr/lib/jvm/java-8-openjdk-amd64/jre","Java Version":"1.8.0_422 (Private Build)","Scala Version":"version 2.12.18"},"Spark Properties":{"spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.driver.host":"192.168.0.62","spark.serializer.objectStreamReset":"100","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.autoBroadcastJoinThreshold":"-1","spark.eventLog.enabled":"True","spark.executor.heartbeatInterval":"100000000","spark.driver.port":"35475","spark.rdd.compress":"True","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.sql.parquet.int96RebaseModeInRead":"LEGACY","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.scheduler.mode":"FIFO","spark.driver.memory":"4G","spark.executor.instances":"2","spark.logConf":"True","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.ui.showConsoleProgress":"True","spark.memory.offHeap.size":"4G","spark.sql.debug.maxToStringFields":"1000","spark.app.submitTime":"1725742650106","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.driver.bindAddress":"0.0.0.0","spark.default.parallelism":"2","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.app.startTime":"1725742650292","spark.executor.id":"driver","spark.sql.session.timeZone":"UTC","spark.eventLog.jsonFormat.enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.eventLog.logBlockUpdates.enabled":"true","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.submit.deployMode":"client","spark.sql.broadcastTimeout":"300000","spark.master":"local[*]","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.repl.eagerEval.enabled":"True","spark.history.retainedApplications":"50","spark.executor.memory":"12G","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.executor.cores":"4","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.parquet.compression.codec":"snappy","spark.app.id":"local-1725742650943"},"Hadoop Properties":{"hadoop.service.shutdown.timeout":"30s","yarn.resourcemanager.amlauncher.thread-count":"50","yarn.sharedcache.enabled":"false","fs.s3a.connection.maximum":"96","yarn.nodemanager.numa-awareness.numactl.cmd":"/usr/bin/numactl","fs.viewfs.overload.scheme.target.o3fs.impl":"org.apache.hadoop.fs.ozone.OzoneFileSystem","fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.app.mapreduce.am.scheduler.heartbeat.interval-ms":"1000","yarn.timeline-service.timeline-client.number-of-async-entities-to-merge":"10","hadoop.security.kms.client.timeout":"60","hadoop.http.authentication.kerberos.principal":"HTTP/_HOST@LOCALHOST","mapreduce.jobhistory.loadedjob.tasks.max":"-1","yarn.resourcemanager.application-tag-based-placement.enable":"false","mapreduce.framework.name":"local","yarn.sharedcache.uploader.server.thread-count":"50","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds.min":"3600","yarn.nodemanager.linux-container-executor.nonsecure-mode.user-pattern":"^[_.A-Za-z0-9][-@_.A-Za-z0-9]{0,255}?[$]?$","tfile.fs.output.buffer.size":"262144","yarn.app.mapreduce.am.job.task.listener.thread-count":"30","yarn.nodemanager.node-attributes.resync-interval-ms":"120000","yarn.nodemanager.container-log-monitor.interval-ms":"60000","hadoop.security.groups.cache.background.reload.threads":"3","yarn.resourcemanager.webapp.cross-origin.enabled":"false","fs.AbstractFileSystem.ftp.impl":"org.apache.hadoop.fs.ftp.FtpFs","fs.viewfs.overload.scheme.target.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","hadoop.registry.secure":"false","hadoop.shell.safely.delete.limit.num.files":"100","mapreduce.job.acl-view-job":" ","fs.s3a.s3guard.ddb.background.sleep":"25ms","fs.s3a.retry.limit":"7","mapreduce.jobhistory.loadedjobs.cache.size":"5","fs.s3a.s3guard.ddb.table.create":"false","fs.viewfs.overload.scheme.target.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.nodemanager.amrmproxy.enabled":"false","yarn.timeline-service.entity-group-fs-store.with-user-dir":"false","mapreduce.shuffle.pathcache.expire-after-access-minutes":"5","mapreduce.input.fileinputformat.split.minsize":"0","yarn.resourcemanager.container.liveness-monitor.interval-ms":"600000","yarn.resourcemanager.client.thread-count":"50","io.seqfile.compress.blocksize":"1000000","yarn.nodemanager.runtime.linux.docker.allowed-container-runtimes":"runc","fs.viewfs.overload.scheme.target.http.impl":"org.apache.hadoop.fs.http.HttpFileSystem","yarn.resourcemanager.nodemanagers.heartbeat-interval-slowdown-factor":"1.0","yarn.sharedcache.checksum.algo.impl":"org.apache.hadoop.yarn.sharedcache.ChecksumSHA256Impl","yarn.nodemanager.amrmproxy.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor","yarn.timeline-service.entity-group-fs-store.leveldb-cache-read-cache-size":"10485760","mapreduce.reduce.shuffle.fetch.retry.interval-ms":"1000","mapreduce.task.profile.maps":"0-2","yarn.scheduler.include-port-in-node-name":"false","yarn.nodemanager.admin-env":"MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX","yarn.resourcemanager.node-removal-untracked.timeout-ms":"60000","mapreduce.am.max-attempts":"2","hadoop.security.kms.client.failover.sleep.base.millis":"100","mapreduce.jobhistory.webapp.https.address":"0.0.0.0:19890","yarn.node-labels.fs-store.impl.class":"org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore","yarn.nodemanager.collector-service.address":"${yarn.nodemanager.hostname}:8048","fs.trash.checkpoint.interval":"0","mapreduce.job.map.output.collector.class":"org.apache.hadoop.mapred.MapTask$MapOutputBuffer","yarn.resourcemanager.node-ip-cache.expiry-interval-secs":"-1","hadoop.http.authentication.signature.secret.file":"*********(redacted)","hadoop.jetty.logs.serve.aliases":"true","yarn.resourcemanager.placement-constraints.handler":"disabled","yarn.timeline-service.handler-thread-count":"10","yarn.resourcemanager.max-completed-applications":"1000","yarn.nodemanager.aux-services.manifest.enabled":"false","yarn.resourcemanager.system-metrics-publisher.enabled":"false","yarn.resourcemanager.placement-constraints.algorithm.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.constraint.algorithm.DefaultPlacementAlgorithm","yarn.sharedcache.webapp.address":"0.0.0.0:8788","fs.s3a.select.input.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.renew-interval":"*********(redacted)","yarn.sharedcache.nm.uploader.replication.factor":"10","hadoop.security.groups.negative-cache.secs":"30","yarn.app.mapreduce.task.container.log.backups":"0","mapreduce.reduce.skip.proc-count.auto-incr":"true","fs.viewfs.overload.scheme.target.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","hadoop.security.group.mapping.ldap.posix.attr.gid.name":"gidNumber","ipc.client.fallback-to-simple-auth-allowed":"false","yarn.nodemanager.resource.memory.enforced":"true","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.enable-batch":"false","yarn.client.failover-proxy-provider":"org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider","yarn.timeline-service.http-authentication.simple.anonymous.allowed":"true","ha.health-monitor.check-interval.ms":"1000","yarn.nodemanager.runtime.linux.runc.host-pid-namespace.allowed":"false","hadoop.metrics.jvm.use-thread-mxbean":"false","ipc.[port_number].faircallqueue.multiplexer.weights":"8,4,2,1","yarn.acl.reservation-enable":"false","yarn.resourcemanager.store.class":"org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore","yarn.app.mapreduce.am.hard-kill-timeout-ms":"10000","fs.s3a.etag.checksum.enabled":"false","yarn.nodemanager.container-metrics.enable":"true","ha.health-monitor.rpc.connect.max.retries":"1","yarn.timeline-service.client.fd-clean-interval-secs":"60","yarn.resourcemanager.nodemanagers.heartbeat-interval-scaling-enable":"false","yarn.resourcemanager.nodemanagers.heartbeat-interval-ms":"1000","hadoop.common.configuration.version":"3.0.0","fs.s3a.s3guard.ddb.table.capacity.read":"0","yarn.nodemanager.remote-app-log-dir-suffix":"logs","yarn.nodemanager.container-log-monitor.dir-size-limit-bytes":"1000000000","yarn.nodemanager.windows-container.cpu-limit.enabled":"false","yarn.nodemanager.runtime.linux.docker.privileged-containers.allowed":"false","file.blocksize":"67108864","hadoop.http.idle_timeout.ms":"60000","hadoop.registry.zk.retry.ceiling.ms":"60000","yarn.scheduler.configuration.leveldb-store.path":"${hadoop.tmp.dir}/yarn/system/confstore","yarn.sharedcache.store.in-memory.initial-delay-mins":"10","mapreduce.jobhistory.principal":"jhs/_HOST@REALM.TLD","mapreduce.map.skip.proc-count.auto-incr":"true","fs.s3a.committer.name":"file","mapreduce.task.profile.reduces":"0-2","hadoop.zk.num-retries":"1000","yarn.webapp.xfs-filter.enabled":"true","fs.viewfs.overload.scheme.target.hdfs.impl":"org.apache.hadoop.hdfs.DistributedFileSystem","seq.io.sort.mb":"100","yarn.scheduler.configuration.max.version":"100","yarn.timeline-service.webapp.https.address":"${yarn.timeline-service.hostname}:8190","yarn.resourcemanager.scheduler.address":"${yarn.resourcemanager.hostname}:8030","yarn.node-labels.enabled":"false","yarn.resourcemanager.webapp.ui-actions.enabled":"true","mapreduce.task.timeout":"600000","yarn.sharedcache.client-server.thread-count":"50","hadoop.security.groups.shell.command.timeout":"0s","hadoop.security.crypto.cipher.suite":"AES/CTR/NoPadding","yarn.nodemanager.elastic-memory-control.oom-handler":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.DefaultOOMHandler","yarn.resourcemanager.connect.max-wait.ms":"900000","fs.defaultFS":"file:///","yarn.minicluster.use-rpc":"false","ipc.[port_number].decay-scheduler.decay-factor":"0.5","fs.har.impl.disable.cache":"true","yarn.webapp.ui2.enable":"false","io.compression.codec.bzip2.library":"system-native","yarn.webapp.filter-invalid-xml-chars":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-interval-secs":"600","fs.s3a.select.input.csv.record.delimiter":"\\n","fs.s3a.change.detection.source":"etag","ipc.[port_number].backoff.enable":"false","yarn.nodemanager.distributed-scheduling.enabled":"false","mapreduce.shuffle.connection-keep-alive.timeout":"5","yarn.resourcemanager.webapp.https.address":"${yarn.resourcemanager.hostname}:8090","yarn.webapp.enable-rest-app-submissions":"true","mapreduce.jobhistory.address":"0.0.0.0:10020","yarn.resourcemanager.nm-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.is.minicluster":"false","yarn.nodemanager.address":"${yarn.nodemanager.hostname}:0","fs.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","fs.AbstractFileSystem.s3a.impl":"org.apache.hadoop.fs.s3a.S3A","mapreduce.task.combine.progress.records":"10000","yarn.resourcemanager.epoch.range":"0","yarn.resourcemanager.am.max-attempts":"2","yarn.nodemanager.runtime.linux.runc.image-toplevel-dir":"/runc-root","yarn.nodemanager.linux-container-executor.cgroups.hierarchy":"/hadoop-yarn","fs.AbstractFileSystem.wasbs.impl":"org.apache.hadoop.fs.azure.Wasbs","yarn.timeline-service.entity-group-fs-store.cache-store-class":"org.apache.hadoop.yarn.server.timeline.MemoryTimelineStore","yarn.nodemanager.runtime.linux.runc.allowed-container-networks":"host,none,bridge","fs.ftp.transfer.mode":"BLOCK_TRANSFER_MODE","ipc.server.log.slow.rpc":"false","ipc.server.reuseaddr":"true","fs.ftp.timeout":"0","yarn.resourcemanager.node-labels.provider.fetch-interval-ms":"1800000","yarn.router.webapp.https.address":"0.0.0.0:8091","yarn.nodemanager.webapp.cross-origin.enabled":"false","fs.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","yarn.resourcemanager.auto-update.containers":"false","yarn.app.mapreduce.am.job.committer.cancel-timeout":"60000","yarn.scheduler.configuration.zk-store.parent-path":"/confstore","yarn.nodemanager.default-container-executor.log-dirs.permissions":"710","yarn.app.attempt.diagnostics.limit.kc":"64","fs.viewfs.overload.scheme.target.swebhdfs.impl":"org.apache.hadoop.hdfs.web.SWebHdfsFileSystem","yarn.client.failover-no-ha-proxy-provider":"org.apache.hadoop.yarn.client.DefaultNoHARMFailoverProxyProvider","fs.s3a.change.detection.mode":"server","ftp.bytes-per-checksum":"512","yarn.nodemanager.resource.memory-mb":"-1","fs.AbstractFileSystem.abfs.impl":"org.apache.hadoop.fs.azurebfs.Abfs","yarn.timeline-service.writer.flush-interval-seconds":"60","fs.s3a.fast.upload.active.blocks":"4","yarn.resourcemanager.submission-preprocessor.enabled":"false","hadoop.security.credential.clear-text-fallback":"true","yarn.nodemanager.collector-service.thread-count":"5","ipc.[port_number].scheduler.impl":"org.apache.hadoop.ipc.DefaultRpcScheduler","fs.azure.secure.mode":"false","mapreduce.jobhistory.joblist.cache.size":"20000","fs.ftp.host":"0.0.0.0","yarn.timeline-service.writer.async.queue.capacity":"100","yarn.resourcemanager.fs.state-store.num-retries":"0","yarn.resourcemanager.nodemanager-connect-retries":"10","yarn.nodemanager.log-aggregation.num-log-files-per-app":"30","hadoop.security.kms.client.encrypted.key.cache.low-watermark":"0.3f","fs.s3a.committer.magic.enabled":"true","yarn.timeline-service.client.max-retries":"30","dfs.ha.fencing.ssh.connect-timeout":"30000","yarn.log-aggregation-enable":"false","yarn.system-metrics-publisher.enabled":"false","mapreduce.reduce.markreset.buffer.percent":"0.0","fs.AbstractFileSystem.viewfs.impl":"org.apache.hadoop.fs.viewfs.ViewFs","yarn.resourcemanager.nodemanagers.heartbeat-interval-speedup-factor":"1.0","mapreduce.task.io.sort.factor":"10","yarn.nodemanager.amrmproxy.client.thread-count":"25","ha.failover-controller.new-active.rpc-timeout.ms":"60000","yarn.nodemanager.container-localizer.java.opts":"-Xmx256m","mapreduce.jobhistory.datestring.cache.size":"200000","mapreduce.job.acl-modify-job":" ","yarn.nodemanager.windows-container.memory-limit.enabled":"false","yarn.timeline-service.webapp.address":"${yarn.timeline-service.hostname}:8188","yarn.app.mapreduce.am.job.committer.commit-window":"10000","yarn.nodemanager.container-manager.thread-count":"20","yarn.minicluster.fixed.ports":"false","hadoop.tags.system":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.cluster.max-application-priority":"0","yarn.timeline-service.ttl-enable":"true","mapreduce.jobhistory.recovery.store.fs.uri":"${hadoop.tmp.dir}/mapred/history/recoverystore","hadoop.caller.context.signature.max.size":"40","ipc.[port_number].decay-scheduler.backoff.responsetime.enable":"false","yarn.client.load.resource-types.from-server":"false","ha.zookeeper.session-timeout.ms":"10000","ipc.[port_number].decay-scheduler.metrics.top.user.count":"10","tfile.io.chunk.size":"1048576","fs.s3a.s3guard.ddb.table.capacity.write":"0","yarn.dispatcher.print-events-info.threshold":"5000","mapreduce.job.speculative.slowtaskthreshold":"1.0","io.serializations":"org.apache.hadoop.io.serializer.WritableSerialization, org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization, org.apache.hadoop.io.serializer.avro.AvroReflectSerialization","hadoop.security.kms.client.failover.sleep.max.millis":"2000","hadoop.security.group.mapping.ldap.directory.search.timeout":"10000","yarn.scheduler.configuration.store.max-logs":"1000","yarn.nodemanager.node-attributes.provider.fetch-interval-ms":"600000","fs.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","yarn.nodemanager.local-cache.max-files-per-directory":"8192","hadoop.http.cross-origin.enabled":"false","hadoop.zk.acl":"world:anyone:rwcda","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.num-manifests-to-cache":"10","mapreduce.map.sort.spill.percent":"0.80","yarn.timeline-service.entity-group-fs-store.scan-interval-seconds":"60","yarn.node-attribute.fs-store.impl.class":"org.apache.hadoop.yarn.server.resourcemanager.nodelabels.FileSystemNodeAttributeStore","fs.s3a.retry.interval":"500ms","yarn.timeline-service.client.best-effort":"false","yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled":"*********(redacted)","hadoop.security.group.mapping.ldap.posix.attr.uid.name":"uidNumber","fs.AbstractFileSystem.swebhdfs.impl":"org.apache.hadoop.fs.SWebHdfs","yarn.nodemanager.elastic-memory-control.timeout-sec":"5","fs.s3a.select.enabled":"true","mapreduce.ifile.readahead":"true","yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms":"300000","yarn.timeline-service.reader.webapp.address":"${yarn.timeline-service.webapp.address}","yarn.resourcemanager.placement-constraints.algorithm.pool-size":"1","yarn.timeline-service.hbase.coprocessor.jar.hdfs.location":"/hbase/coprocessor/hadoop-yarn-server-timelineservice.jar","hadoop.security.kms.client.encrypted.key.cache.num.refill.threads":"2","yarn.resourcemanager.scheduler.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler","yarn.app.mapreduce.am.command-opts":"-Xmx1024m","fs.s3a.metadatastore.fail.on.write.error":"true","hadoop.http.sni.host.check.enabled":"false","mapreduce.cluster.local.dir":"${hadoop.tmp.dir}/mapred/local","io.mapfile.bloom.error.rate":"0.005","fs.client.resolve.topology.enabled":"false","yarn.nodemanager.runtime.linux.allowed-runtimes":"default","yarn.sharedcache.store.class":"org.apache.hadoop.yarn.server.sharedcachemanager.store.InMemorySCMStore","ha.failover-controller.graceful-fence.rpc-timeout.ms":"5000","ftp.replication":"3","fs.getspaceused.jitterMillis":"60000","hadoop.security.uid.cache.secs":"14400","mapreduce.job.maxtaskfailures.per.tracker":"3","fs.s3a.metadatastore.impl":"org.apache.hadoop.fs.s3a.s3guard.NullMetadataStore","io.skip.checksum.errors":"false","yarn.app.mapreduce.client-am.ipc.max-retries-on-timeouts":"3","yarn.timeline-service.webapp.xfs-filter.xframe-options":"SAMEORIGIN","fs.s3a.connection.timeout":"200000","yarn.app.mapreduce.am.webapp.https.enabled":"false","mapreduce.job.max.split.locations":"15","yarn.resourcemanager.nm-container-queuing.max-queue-length":"15","yarn.resourcemanager.delegation-token.always-cancel":"*********(redacted)","hadoop.registry.zk.session.timeout.ms":"60000","yarn.federation.cache-ttl.secs":"300","mapreduce.jvm.system-properties-to-log":"os.name,os.version,java.home,java.runtime.version,java.vendor,java.version,java.vm.name,java.class.path,java.io.tmpdir,user.dir,user.name","yarn.resourcemanager.opportunistic-container-allocation.nodes-used":"10","yarn.timeline-service.entity-group-fs-store.active-dir":"/tmp/entity-file-history/active","mapreduce.shuffle.transfer.buffer.size":"131072","yarn.timeline-service.client.retry-interval-ms":"1000","yarn.timeline-service.flowname.max-size":"0","yarn.http.policy":"HTTP_ONLY","fs.s3a.socket.send.buffer":"8192","fs.AbstractFileSystem.abfss.impl":"org.apache.hadoop.fs.azurebfs.Abfss","yarn.sharedcache.uploader.server.address":"0.0.0.0:8046","yarn.resourcemanager.delegation-token.max-conf-size-bytes":"*********(redacted)","hadoop.http.authentication.token.validity":"*********(redacted)","mapreduce.shuffle.max.connections":"0","yarn.minicluster.yarn.nodemanager.resource.memory-mb":"4096","mapreduce.job.emit-timeline-data":"false","yarn.nodemanager.resource.system-reserved-memory-mb":"-1","hadoop.kerberos.min.seconds.before.relogin":"60","mapreduce.jobhistory.move.thread-count":"3","yarn.resourcemanager.admin.client.thread-count":"1","yarn.dispatcher.drain-events.timeout":"300000","ipc.[port_number].decay-scheduler.backoff.responsetime.thresholds":"10s,20s,30s,40s","fs.s3a.buffer.dir":"${hadoop.tmp.dir}/s3a","hadoop.ssl.enabled.protocols":"TLSv1.2","mapreduce.jobhistory.admin.address":"0.0.0.0:10033","yarn.log-aggregation-status.time-out.ms":"600000","fs.s3a.accesspoint.required":"false","mapreduce.shuffle.port":"13562","yarn.resourcemanager.max-log-aggregation-diagnostics-in-memory":"10","yarn.nodemanager.health-checker.interval-ms":"600000","yarn.resourcemanager.proxy.connection.timeout":"60000","yarn.router.clientrm.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.clientrm.DefaultClientRequestInterceptor","yarn.resourcemanager.zk-appid-node.split-index":"0","ftp.blocksize":"67108864","yarn.nodemanager.runtime.linux.sandbox-mode.local-dirs.permissions":"read","yarn.router.rmadmin.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.rmadmin.DefaultRMAdminRequestInterceptor","yarn.nodemanager.log-container-debug-info.enabled":"true","yarn.resourcemanager.activities-manager.app-activities.max-queue-length":"100","yarn.resourcemanager.application-https.policy":"NONE","yarn.client.max-cached-nodemanagers-proxies":"0","yarn.nodemanager.linux-container-executor.cgroups.delete-delay-ms":"20","yarn.nodemanager.delete.debug-delay-sec":"0","yarn.nodemanager.pmem-check-enabled":"true","yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage":"90.0","mapreduce.app-submission.cross-platform":"false","yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms":"10000","yarn.nodemanager.container-retry-minimum-interval-ms":"1000","hadoop.security.groups.cache.secs":"300","yarn.federation.enabled":"false","yarn.workflow-id.tag-prefix":"workflowid:","fs.azure.local.sas.key.mode":"false","ipc.maximum.data.length":"134217728","fs.s3a.endpoint":"s3.amazonaws.com","mapreduce.shuffle.max.threads":"0","yarn.router.pipeline.cache-max-size":"25","yarn.resourcemanager.nm-container-queuing.load-comparator":"QUEUE_LENGTH","yarn.resourcemanager.resource-tracker.nm.ip-hostname-check":"false","hadoop.security.authorization":"false","mapreduce.job.complete.cancel.delegation.tokens":"*********(redacted)","fs.s3a.paging.maximum":"5000","nfs.exports.allowed.hosts":"* rw","yarn.nodemanager.amrmproxy.ha.enable":"false","fs.AbstractFileSystem.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","mapreduce.jobhistory.http.policy":"HTTP_ONLY","yarn.sharedcache.store.in-memory.check-period-mins":"720","hadoop.security.group.mapping.ldap.ssl":"false","fs.s3a.downgrade.syncable.exceptions":"true","yarn.client.application-client-protocol.poll-interval-ms":"200","yarn.scheduler.configuration.leveldb-store.compaction-interval-secs":"86400","yarn.timeline-service.writer.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineWriterImpl","ha.zookeeper.parent-znode":"/hadoop-ha","yarn.resourcemanager.submission-preprocessor.file-refresh-interval-ms":"60000","yarn.nodemanager.log-aggregation.policy.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AllContainerLogAggregationPolicy","mapreduce.reduce.shuffle.merge.percent":"0.66","hadoop.security.group.mapping.ldap.search.filter.group":"(objectClass=group)","yarn.resourcemanager.placement-constraints.scheduler.pool-size":"1","yarn.resourcemanager.activities-manager.cleanup-interval-ms":"5000","yarn.nodemanager.resourcemanager.minimum.version":"NONE","mapreduce.job.speculative.speculative-cap-running-tasks":"0.1","yarn.admin.acl":"*","ipc.[port_number].identity-provider.impl":"org.apache.hadoop.ipc.UserIdentityProvider","yarn.nodemanager.recovery.supervised":"false","yarn.sharedcache.admin.thread-count":"1","yarn.resourcemanager.ha.automatic-failover.enabled":"true","yarn.nodemanager.container-log-monitor.total-size-limit-bytes":"10000000000","mapreduce.reduce.skip.maxgroups":"0","mapreduce.reduce.shuffle.connect.timeout":"180000","yarn.nodemanager.health-checker.scripts":"script","yarn.resourcemanager.address":"${yarn.resourcemanager.hostname}:8032","ipc.client.ping":"true","mapreduce.task.local-fs.write-limit.bytes":"-1","fs.adl.oauth2.access.token.provider.type":"*********(redacted)","mapreduce.shuffle.ssl.file.buffer.size":"65536","yarn.resourcemanager.ha.automatic-failover.embedded":"true","yarn.nodemanager.resource-plugins.gpu.docker-plugin":"nvidia-docker-v1","fs.s3a.s3guard.consistency.retry.interval":"2s","fs.s3a.multipart.purge":"false","yarn.scheduler.configuration.store.class":"file","yarn.resourcemanager.nm-container-queuing.queue-limit-stdev":"1.0f","mapreduce.job.end-notification.max.attempts":"5","mapreduce.output.fileoutputformat.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","yarn.nodemanager.container-monitor.procfs-tree.smaps-based-rss.enabled":"false","ipc.client.bind.wildcard.addr":"false","yarn.resourcemanager.webapp.rest-csrf.enabled":"false","ha.health-monitor.connect-retry-interval.ms":"1000","yarn.nodemanager.keytab":"/etc/krb5.keytab","mapreduce.jobhistory.keytab":"/etc/security/keytab/jhs.service.keytab","fs.s3a.threads.max":"64","yarn.nodemanager.runtime.linux.docker.image-update":"false","mapreduce.reduce.shuffle.input.buffer.percent":"0.70","fs.viewfs.overload.scheme.target.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","yarn.dispatcher.cpu-monitor.samples-per-min":"60","hadoop.security.token.service.use_ip":"*********(redacted)","yarn.nodemanager.runtime.linux.docker.allowed-container-networks":"host,none,bridge","yarn.nodemanager.node-labels.resync-interval-ms":"120000","hadoop.tmp.dir":"/tmp/hadoop-${user.name}","mapreduce.job.maps":"2","mapreduce.jobhistory.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.job.end-notification.max.retry.interval":"5000","yarn.log-aggregation.retain-check-interval-seconds":"-1","yarn.resourcemanager.resource-tracker.client.thread-count":"50","yarn.nodemanager.containers-launcher.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainersLauncher","yarn.rm.system-metrics-publisher.emit-container-events":"false","yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size":"10000","yarn.resourcemanager.ha.automatic-failover.zk-base-path":"/yarn-leader-election","io.seqfile.local.dir":"${hadoop.tmp.dir}/io/local","fs.s3a.s3guard.ddb.throttle.retry.interval":"100ms","fs.AbstractFileSystem.wasb.impl":"org.apache.hadoop.fs.azure.Wasb","mapreduce.client.submit.file.replication":"10","mapreduce.jobhistory.minicluster.fixed.ports":"false","fs.s3a.multipart.threshold":"128M","yarn.resourcemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","mapreduce.jobhistory.done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done","ipc.server.purge.interval":"15","ipc.client.idlethreshold":"4000","yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage":"false","mapreduce.reduce.input.buffer.percent":"0.0","yarn.nodemanager.runtime.linux.docker.userremapping-gid-threshold":"1","yarn.nodemanager.webapp.rest-csrf.enabled":"false","fs.ftp.host.port":"21","ipc.ping.interval":"60000","yarn.resourcemanager.history-writer.multi-threaded-dispatcher.pool-size":"10","yarn.resourcemanager.admin.address":"${yarn.resourcemanager.hostname}:8033","file.client-write-packet-size":"65536","ipc.client.kill.max":"10","mapreduce.reduce.speculative":"true","hadoop.security.key.default.bitlength":"128","mapreduce.job.reducer.unconditional-preempt.delay.sec":"300","yarn.nodemanager.disk-health-checker.interval-ms":"120000","yarn.nodemanager.log.deletion-threads-count":"4","fs.s3a.committer.abort.pending.uploads":"true","yarn.webapp.filter-entity-list-by-user":"false","yarn.resourcemanager.activities-manager.app-activities.ttl-ms":"600000","ipc.client.connection.maxidletime":"10000","mapreduce.task.io.sort.mb":"100","yarn.nodemanager.localizer.client.thread-count":"5","io.erasurecode.codec.rs.rawcoders":"rs_native,rs_java","io.erasurecode.codec.rs-legacy.rawcoders":"rs-legacy_java","yarn.sharedcache.admin.address":"0.0.0.0:8047","yarn.resourcemanager.placement-constraints.algorithm.iterator":"SERIAL","yarn.nodemanager.localizer.cache.cleanup.interval-ms":"600000","hadoop.security.crypto.codec.classes.aes.ctr.nopadding":"org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec, org.apache.hadoop.crypto.JceAesCtrCryptoCodec","mapreduce.job.cache.limit.max-resources-mb":"0","fs.s3a.connection.ssl.enabled":"true","yarn.nodemanager.process-kill-wait.ms":"5000","mapreduce.job.hdfs-servers":"${fs.defaultFS}","yarn.app.mapreduce.am.webapp.https.client.auth":"false","hadoop.workaround.non.threadsafe.getpwuid":"true","fs.df.interval":"60000","ipc.[port_number].decay-scheduler.thresholds":"13,25,50","fs.s3a.multiobjectdelete.enable":"true","yarn.sharedcache.cleaner.resource-sleep-ms":"0","yarn.nodemanager.disk-health-checker.min-healthy-disks":"0.25","hadoop.shell.missing.defaultFs.warning":"false","io.file.buffer.size":"65536","fs.viewfs.overload.scheme.target.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","hadoop.security.group.mapping.ldap.search.attr.member":"member","hadoop.security.random.device.file.path":"/dev/urandom","hadoop.security.sensitive-config-keys":"*********(redacted)","fs.s3a.s3guard.ddb.max.retries":"9","fs.viewfs.overload.scheme.target.file.impl":"org.apache.hadoop.fs.LocalFileSystem","hadoop.rpc.socket.factory.class.default":"org.apache.hadoop.net.StandardSocketFactory","yarn.intermediate-data-encryption.enable":"false","yarn.resourcemanager.connect.retry-interval.ms":"30000","yarn.nodemanager.container.stderr.pattern":"{*stderr*,*STDERR*}","yarn.scheduler.minimum-allocation-mb":"1024","yarn.app.mapreduce.am.staging-dir":"/tmp/hadoop-yarn/staging","mapreduce.reduce.shuffle.read.timeout":"180000","hadoop.http.cross-origin.max-age":"1800","io.erasurecode.codec.xor.rawcoders":"xor_native,xor_java","fs.s3a.s3guard.consistency.retry.limit":"7","fs.s3a.connection.establish.timeout":"5000","mapreduce.job.running.map.limit":"0","yarn.minicluster.control-resource-monitoring":"false","hadoop.ssl.require.client.cert":"false","hadoop.kerberos.kinit.command":"kinit","yarn.federation.state-store.class":"org.apache.hadoop.yarn.server.federation.store.impl.MemoryFederationStateStore","mapreduce.reduce.log.level":"INFO","hadoop.security.dns.log-slow-lookups.threshold.ms":"1000","mapreduce.job.ubertask.enable":"false","adl.http.timeout":"-1","yarn.resourcemanager.placement-constraints.retry-attempts":"3","hadoop.caller.context.enabled":"false","hadoop.security.group.mapping.ldap.num.attempts":"3","yarn.nodemanager.vmem-pmem-ratio":"2.1","hadoop.rpc.protection":"authentication","ha.health-monitor.rpc-timeout.ms":"45000","yarn.nodemanager.remote-app-log-dir":"/tmp/logs","hadoop.zk.timeout-ms":"10000","fs.s3a.s3guard.cli.prune.age":"86400000","yarn.nodemanager.resource.pcores-vcores-multiplier":"1.0","yarn.nodemanager.runtime.linux.sandbox-mode":"disabled","yarn.app.mapreduce.am.containerlauncher.threadpool-initial-size":"10","fs.viewfs.overload.scheme.target.webhdfs.impl":"org.apache.hadoop.hdfs.web.WebHdfsFileSystem","fs.s3a.committer.threads":"8","hadoop.zk.retry-interval-ms":"1000","hadoop.security.crypto.buffer.size":"8192","yarn.nodemanager.node-labels.provider.fetch-interval-ms":"600000","mapreduce.jobhistory.recovery.store.leveldb.path":"${hadoop.tmp.dir}/mapred/history/recoverystore","yarn.client.failover-retries-on-socket-timeouts":"0","fs.s3a.ssl.channel.mode":"default_jsse","yarn.nodemanager.resource.memory.enabled":"false","fs.azure.authorization.caching.enable":"true","hadoop.security.instrumentation.requires.admin":"false","yarn.nodemanager.delete.thread-count":"4","mapreduce.job.finish-when-all-reducers-done":"true","hadoop.registry.jaas.context":"Client","yarn.timeline-service.leveldb-timeline-store.path":"${hadoop.tmp.dir}/yarn/timeline","io.map.index.interval":"128","yarn.resourcemanager.nm-container-queuing.max-queue-wait-time-ms":"100","fs.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","mapreduce.job.counters.max":"120","mapreduce.jobhistory.webapp.rest-csrf.enabled":"false","yarn.timeline-service.store-class":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.jobhistory.move.interval-ms":"180000","fs.s3a.change.detection.version.required":"true","yarn.nodemanager.localizer.fetch.thread-count":"4","yarn.resourcemanager.scheduler.client.thread-count":"50","hadoop.ssl.hostname.verifier":"DEFAULT","yarn.timeline-service.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/timeline","mapreduce.job.classloader":"false","mapreduce.task.profile.map.params":"${mapreduce.task.profile.params}","ipc.client.connect.timeout":"20000","hadoop.security.auth_to_local.mechanism":"hadoop","yarn.timeline-service.app-collector.linger-period.ms":"60000","yarn.nm.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.reservation-system.planfollower.time-step":"1000","yarn.resourcemanager.proxy.timeout.enabled":"true","yarn.resourcemanager.activities-manager.scheduler-activities.ttl-ms":"600000","yarn.nodemanager.runtime.linux.docker.enable-userremapping.allowed":"true","yarn.webapp.api-service.enable":"false","yarn.nodemanager.recovery.enabled":"false","mapreduce.job.end-notification.retry.interval":"1000","fs.du.interval":"600000","fs.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","yarn.nodemanager.container.stderr.tail.bytes":"4096","yarn.nodemanager.disk-health-checker.disk-free-space-threshold.enabled":"true","hadoop.security.group.mapping.ldap.read.timeout.ms":"60000","hadoop.security.groups.cache.warn.after.ms":"5000","file.bytes-per-checksum":"512","mapreduce.outputcommitter.factory.scheme.s3a":"org.apache.hadoop.fs.s3a.commit.S3ACommitterFactory","hadoop.security.groups.cache.background.reload":"false","yarn.nodemanager.container-monitor.enabled":"true","yarn.nodemanager.elastic-memory-control.enabled":"false","net.topology.script.number.args":"100","mapreduce.task.merge.progress.records":"10000","yarn.nodemanager.localizer.address":"${yarn.nodemanager.hostname}:8040","yarn.timeline-service.keytab":"/etc/krb5.keytab","mapreduce.reduce.shuffle.fetch.retry.timeout-ms":"30000","yarn.resourcemanager.rm.container-allocation.expiry-interval-ms":"600000","yarn.nodemanager.container-executor.exit-code-file.timeout-ms":"2000","mapreduce.fileoutputcommitter.algorithm.version":"1","yarn.resourcemanager.work-preserving-recovery.enabled":"true","mapreduce.map.skip.maxrecords":"0","yarn.sharedcache.root-dir":"/sharedcache","fs.s3a.retry.throttle.limit":"20","hadoop.http.authentication.type":"simple","fs.viewfs.overload.scheme.target.oss.impl":"org.apache.hadoop.fs.aliyun.oss.AliyunOSSFileSystem","mapreduce.job.cache.limit.max-resources":"0","mapreduce.task.userlog.limit.kb":"0","ipc.[port_number].weighted-cost.handler":"1","yarn.resourcemanager.scheduler.monitor.enable":"false","ipc.client.connect.max.retries":"10","hadoop.registry.zk.retry.times":"5","yarn.nodemanager.resource-monitor.interval-ms":"3000","yarn.nodemanager.resource-plugins.gpu.allowed-gpu-devices":"auto","mapreduce.job.sharedcache.mode":"disabled","yarn.nodemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.shuffle.listen.queue.size":"128","yarn.scheduler.configuration.mutation.acl-policy.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.DefaultConfigurationMutationACLPolicy","mapreduce.map.cpu.vcores":"1","yarn.log-aggregation.file-formats":"TFile","yarn.timeline-service.client.fd-retain-secs":"300","fs.s3a.select.output.csv.field.delimiter":",","yarn.nodemanager.health-checker.timeout-ms":"1200000","hadoop.user.group.static.mapping.overrides":"dr.who=;","fs.azure.sas.expiry.period":"90d","fs.s3a.select.output.csv.record.delimiter":"\\n","mapreduce.jobhistory.recovery.store.class":"org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService","fs.viewfs.overload.scheme.target.https.impl":"org.apache.hadoop.fs.http.HttpsFileSystem","fs.s3a.s3guard.ddb.table.sse.enabled":"false","yarn.resourcemanager.fail-fast":"${yarn.fail-fast}","yarn.resourcemanager.proxy-user-privileges.enabled":"false","yarn.router.webapp.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.webapp.DefaultRequestInterceptorREST","yarn.nodemanager.resource.memory.cgroups.soft-limit-percentage":"90.0","mapreduce.job.reducer.preempt.delay.sec":"0","hadoop.util.hash.type":"murmur","yarn.nodemanager.disk-validator":"basic","yarn.app.mapreduce.client.job.max-retries":"3","fs.viewfs.overload.scheme.target.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","mapreduce.reduce.shuffle.retry-delay.max.ms":"60000","hadoop.security.group.mapping.ldap.connection.timeout.ms":"60000","mapreduce.task.profile.params":"-agentlib:hprof=cpu=samples,heap=sites,force=n,thread=y,verbose=n,file=%s","yarn.app.mapreduce.shuffle.log.backups":"0","yarn.nodemanager.container-diagnostics-maximum-size":"10000","hadoop.registry.zk.retry.interval.ms":"1000","yarn.nodemanager.linux-container-executor.cgroups.delete-timeout-ms":"1000","fs.AbstractFileSystem.file.impl":"org.apache.hadoop.fs.local.LocalFs","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds":"-1","mapreduce.jobhistory.cleaner.interval-ms":"86400000","hadoop.registry.zk.quorum":"localhost:2181","yarn.nodemanager.runtime.linux.runc.allowed-container-runtimes":"runc","mapreduce.output.fileoutputformat.compress":"false","yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs":"*********(redacted)","fs.s3a.assumed.role.session.duration":"30m","hadoop.security.group.mapping.ldap.conversion.rule":"none","hadoop.ssl.server.conf":"ssl-server.xml","fs.s3a.retry.throttle.interval":"100ms","seq.io.sort.factor":"100","fs.viewfs.overload.scheme.target.ofs.impl":"org.apache.hadoop.fs.ozone.RootedOzoneFileSystem","yarn.sharedcache.cleaner.initial-delay-mins":"10","mapreduce.client.completion.pollinterval":"5000","hadoop.ssl.keystores.factory.class":"org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory","yarn.app.mapreduce.am.resource.cpu-vcores":"1","yarn.timeline-service.enabled":"false","yarn.nodemanager.runtime.linux.docker.capabilities":"CHOWN,DAC_OVERRIDE,FSETID,FOWNER,MKNOD,NET_RAW,SETGID,SETUID,SETFCAP,SETPCAP,NET_BIND_SERVICE,SYS_CHROOT,KILL,AUDIT_WRITE","yarn.acl.enable":"false","yarn.timeline-service.entity-group-fs-store.done-dir":"/tmp/entity-file-history/done/","hadoop.security.group.mapping.ldap.num.attempts.before.failover":"3","mapreduce.task.profile":"false","hadoop.prometheus.endpoint.enabled":"false","yarn.resourcemanager.fs.state-store.uri":"${hadoop.tmp.dir}/yarn/system/rmstore","mapreduce.jobhistory.always-scan-user-dir":"false","fs.s3a.metadatastore.metadata.ttl":"15m","yarn.nodemanager.opportunistic-containers-use-pause-for-preemption":"false","yarn.nodemanager.linux-container-executor.nonsecure-mode.local-user":"nobody","yarn.timeline-service.reader.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineReaderImpl","yarn.resourcemanager.configuration.provider-class":"org.apache.hadoop.yarn.LocalConfigurationProvider","yarn.nodemanager.runtime.linux.docker.userremapping-uid-threshold":"1","yarn.resourcemanager.configuration.file-system-based-store":"/yarn/conf","mapreduce.job.cache.limit.max-single-resource-mb":"0","yarn.nodemanager.runtime.linux.docker.stop.grace-period":"10","yarn.resourcemanager.resource-profiles.source-file":"resource-profiles.json","mapreduce.job.dfs.storage.capacity.kill-limit-exceed":"false","yarn.nodemanager.resource.percentage-physical-cpu-limit":"100","mapreduce.jobhistory.client.thread-count":"10","tfile.fs.input.buffer.size":"262144","mapreduce.client.progressmonitor.pollinterval":"1000","yarn.nodemanager.log-dirs":"${yarn.log.dir}/userlogs","yarn.resourcemanager.opportunistic.max.container-allocation.per.am.heartbeat":"-1","fs.automatic.close":"true","yarn.resourcemanager.delegation-token-renewer.thread-retry-interval":"*********(redacted)","fs.s3a.select.input.csv.quote.character":"\"","yarn.nodemanager.hostname":"0.0.0.0","ipc.[port_number].cost-provider.impl":"org.apache.hadoop.ipc.DefaultCostProvider","yarn.nodemanager.runtime.linux.runc.manifest-to-resources-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.HdfsManifestToResourcesPlugin","yarn.nodemanager.remote-app-log-dir-include-older":"true","yarn.nodemanager.resource.memory.cgroups.swappiness":"0","ftp.stream-buffer-size":"4096","yarn.fail-fast":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-to-keep":"100","yarn.timeline-service.app-aggregation-interval-secs":"15","hadoop.security.group.mapping.ldap.search.filter.user":"(&(objectClass=user)(sAMAccountName={0}))","ipc.[port_number].weighted-cost.lockshared":"10","yarn.nodemanager.container-localizer.log.level":"INFO","yarn.timeline-service.address":"${yarn.timeline-service.hostname}:10200","mapreduce.job.ubertask.maxmaps":"9","fs.s3a.threads.keepalivetime":"60","mapreduce.jobhistory.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.task.files.preserve.failedtasks":"false","yarn.app.mapreduce.client.job.retry-interval":"2000","ha.failover-controller.graceful-fence.connection.retries":"1","fs.s3a.select.output.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.max-lifetime":"*********(redacted)","hadoop.kerberos.keytab.login.autorenewal.enabled":"false","yarn.timeline-service.client.drain-entities.timeout.ms":"2000","yarn.nodemanager.resource-plugins.fpga.vendor-plugin.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin","yarn.resourcemanager.nodemanagers.heartbeat-interval-min-ms":"1000","yarn.timeline-service.entity-group-fs-store.summary-store":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.reduce.cpu.vcores":"1","mapreduce.job.encrypted-intermediate-data.buffer.kb":"128","fs.client.resolve.remote.symlinks":"true","yarn.nodemanager.webapp.https.address":"0.0.0.0:8044","hadoop.http.cross-origin.allowed-origins":"*","mapreduce.job.encrypted-intermediate-data":"false","yarn.nodemanager.disk-health-checker.disk-utilization-threshold.enabled":"true","fs.s3a.executor.capacity":"16","yarn.timeline-service.entity-group-fs-store.retain-seconds":"604800","yarn.resourcemanager.metrics.runtime.buckets":"60,300,1440","yarn.timeline-service.generic-application-history.max-applications":"10000","yarn.nodemanager.local-dirs":"${hadoop.tmp.dir}/nm-local-dir","mapreduce.shuffle.connection-keep-alive.enable":"false","yarn.node-labels.configuration-type":"centralized","fs.s3a.path.style.access":"false","yarn.nodemanager.aux-services.mapreduce_shuffle.class":"org.apache.hadoop.mapred.ShuffleHandler","yarn.sharedcache.store.in-memory.staleness-period-mins":"10080","fs.adl.impl":"org.apache.hadoop.fs.adl.AdlFileSystem","yarn.resourcemanager.application.max-tags":"10","hadoop.domainname.resolver.impl":"org.apache.hadoop.net.DNSDomainNameResolver","yarn.resourcemanager.nodemanager.minimum.version":"NONE","mapreduce.jobhistory.webapp.xfs-filter.xframe-options":"SAMEORIGIN","yarn.app.mapreduce.am.staging-dir.erasurecoding.enabled":"false","net.topology.impl":"org.apache.hadoop.net.NetworkTopology","io.map.index.skip":"0","yarn.timeline-service.reader.webapp.https.address":"${yarn.timeline-service.webapp.https.address}","fs.ftp.data.connection.mode":"ACTIVE_LOCAL_DATA_CONNECTION_MODE","mapreduce.job.local-fs.single-disk-limit.check.kill-limit-exceed":"true","fs.azure.buffer.dir":"${hadoop.tmp.dir}/abfs","yarn.scheduler.maximum-allocation-vcores":"4","hadoop.http.cross-origin.allowed-headers":"X-Requested-With,Content-Type,Accept,Origin","yarn.nodemanager.log-aggregation.compression-type":"none","yarn.timeline-service.version":"1.0f","yarn.ipc.rpc.class":"org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC","mapreduce.reduce.maxattempts":"4","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.batch-size":"1000","hadoop.security.dns.log-slow-lookups.enabled":"false","mapreduce.job.committer.setup.cleanup.needed":"true","hadoop.security.secure.random.impl":"org.apache.hadoop.crypto.random.OpensslSecureRandom","mapreduce.job.running.reduce.limit":"0","fs.s3a.select.errors.include.sql":"false","fs.s3a.connection.request.timeout":"0","ipc.maximum.response.length":"134217728","yarn.resourcemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.job.token.tracking.ids.enabled":"*********(redacted)","hadoop.caller.context.max.size":"128","yarn.nodemanager.runtime.linux.docker.host-pid-namespace.allowed":"false","yarn.nodemanager.runtime.linux.docker.delayed-removal.allowed":"false","hadoop.registry.system.acls":"sasl:yarn@, sasl:mapred@, sasl:hdfs@","yarn.nodemanager.recovery.dir":"${hadoop.tmp.dir}/yarn-nm-recovery","fs.s3a.fast.upload.buffer":"disk","mapreduce.jobhistory.intermediate-done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done_intermediate","yarn.app.mapreduce.shuffle.log.separate":"true","yarn.log-aggregation.debug.filesize":"104857600","fs.s3a.max.total.tasks":"32","fs.s3a.readahead.range":"64K","hadoop.http.authentication.simple.anonymous.allowed":"true","fs.s3a.attempts.maximum":"20","hadoop.registry.zk.connection.timeout.ms":"15000","yarn.resourcemanager.delegation-token-renewer.thread-count":"*********(redacted)","yarn.resourcemanager.delegation-token-renewer.thread-timeout":"*********(redacted)","yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size":"10000","yarn.nodemanager.aux-services.manifest.reload-ms":"0","yarn.nodemanager.emit-container-events":"true","yarn.resourcemanager.resource-profiles.enabled":"false","yarn.timeline-service.hbase-schema.prefix":"prod.","fs.azure.authorization":"false","mapreduce.map.log.level":"INFO","ha.failover-controller.active-standby-elector.zk.op.retries":"3","yarn.resourcemanager.decommissioning-nodes-watcher.poll-interval-secs":"20","mapreduce.output.fileoutputformat.compress.type":"RECORD","yarn.resourcemanager.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/system/rmstore","yarn.timeline-service.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.ifile.readahead.bytes":"4194304","yarn.sharedcache.app-checker.class":"org.apache.hadoop.yarn.server.sharedcachemanager.RemoteAppChecker","yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users":"true","yarn.nodemanager.resource.detect-hardware-capabilities":"false","mapreduce.cluster.acls.enabled":"false","mapreduce.job.speculative.retry-after-no-speculate":"1000","fs.viewfs.overload.scheme.target.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","hadoop.security.group.mapping.ldap.search.group.hierarchy.levels":"0","yarn.resourcemanager.fs.state-store.retry-interval-ms":"1000","file.stream-buffer-size":"4096","yarn.resourcemanager.application-timeouts.monitor.interval-ms":"3000","mapreduce.map.output.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","mapreduce.map.speculative":"true","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.hdfs-hash-file":"/runc-root/image-tag-to-hash","mapreduce.job.speculative.retry-after-speculate":"15000","yarn.nodemanager.linux-container-executor.cgroups.mount":"false","yarn.app.mapreduce.am.container.log.backups":"0","yarn.app.mapreduce.am.log.level":"INFO","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.ImageTagToManifestPlugin","io.bytes.per.checksum":"512","mapreduce.job.reduce.slowstart.completedmaps":"0.05","yarn.timeline-service.http-authentication.type":"simple","hadoop.security.group.mapping.ldap.search.attr.group.name":"cn","yarn.nodemanager.resource-plugins.fpga.allowed-fpga-devices":"auto","yarn.timeline-service.client.internal-timers-ttl-secs":"420","fs.s3a.select.output.csv.quote.character":"\"","hadoop.http.logs.enabled":"true","fs.s3a.block.size":"32M","yarn.sharedcache.client-server.address":"0.0.0.0:8045","yarn.nodemanager.logaggregation.threadpool-size-max":"100","yarn.resourcemanager.hostname":"0.0.0.0","yarn.resourcemanager.delegation.key.update-interval":"86400000","mapreduce.reduce.shuffle.fetch.retry.enabled":"${yarn.nodemanager.recovery.enabled}","mapreduce.map.memory.mb":"-1","mapreduce.task.skip.start.attempts":"2","fs.AbstractFileSystem.hdfs.impl":"org.apache.hadoop.fs.Hdfs","yarn.nodemanager.disk-health-checker.enable":"true","fs.s3a.select.output.csv.quote.fields":"always","ipc.client.tcpnodelay":"true","ipc.client.rpc-timeout.ms":"0","yarn.nodemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","yarn.resourcemanager.delegation-token-renewer.thread-retry-max-attempts":"*********(redacted)","ipc.client.low-latency":"false","mapreduce.input.lineinputformat.linespermap":"1","yarn.router.interceptor.user.threadpool-size":"5","ipc.client.connect.max.retries.on.timeouts":"45","yarn.timeline-service.leveldb-timeline-store.read-cache-size":"104857600","fs.AbstractFileSystem.har.impl":"org.apache.hadoop.fs.HarFs","mapreduce.job.split.metainfo.maxsize":"10000000","yarn.am.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.timeline-service.entity-group-fs-store.app-cache-size":"10","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-timeout-interval-secs":"360","fs.s3a.socket.recv.buffer":"8192","rpc.metrics.timeunit":"MILLISECONDS","yarn.resourcemanager.resource-tracker.address":"${yarn.resourcemanager.hostname}:8031","yarn.nodemanager.node-labels.provider.fetch-timeout-ms":"1200000","mapreduce.job.heap.memory-mb.ratio":"0.8","yarn.resourcemanager.leveldb-state-store.compaction-interval-secs":"3600","yarn.resourcemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","yarn.nodemanager.pluggable-device-framework.enabled":"false","yarn.scheduler.configuration.fs.path":"file://${hadoop.tmp.dir}/yarn/system/schedconf","mapreduce.client.output.filter":"FAILED","hadoop.http.filter.initializers":"org.apache.hadoop.http.lib.StaticUserWebFilter","mapreduce.reduce.memory.mb":"-1","yarn.timeline-service.hostname":"0.0.0.0","file.replication":"1","yarn.nodemanager.container-metrics.unregister-delay-ms":"10000","yarn.nodemanager.container-metrics.period-ms":"-1","mapreduce.fileoutputcommitter.task.cleanup.enabled":"false","yarn.nodemanager.log.retain-seconds":"10800","yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds":"3600","ipc.[port_number].callqueue.impl":"java.util.concurrent.LinkedBlockingQueue","yarn.resourcemanager.keytab":"/etc/krb5.keytab","hadoop.security.group.mapping.providers.combined":"true","mapreduce.reduce.merge.inmem.threshold":"1000","yarn.timeline-service.recovery.enabled":"false","fs.azure.saskey.usecontainersaskeyforallaccess":"true","yarn.sharedcache.nm.uploader.thread-count":"20","yarn.resourcemanager.nodemanager-graceful-decommission-timeout-secs":"3600","ipc.[port_number].weighted-cost.lockfree":"1","mapreduce.shuffle.ssl.enabled":"false","yarn.timeline-service.hbase.coprocessor.app-final-value-retention-milliseconds":"259200000","yarn.nodemanager.opportunistic-containers-max-queue-length":"0","yarn.resourcemanager.state-store.max-completed-applications":"${yarn.resourcemanager.max-completed-applications}","mapreduce.job.speculative.minimum-allowed-tasks":"10","fs.s3a.aws.credentials.provider":"\n    org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider,\n    org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider,\n    com.amazonaws.auth.EnvironmentVariableCredentialsProvider,\n    org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider\n  ","yarn.log-aggregation.retain-seconds":"-1","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb":"0","mapreduce.jobhistory.max-age-ms":"604800000","hadoop.http.cross-origin.allowed-methods":"GET,POST,HEAD","yarn.resourcemanager.opportunistic-container-allocation.enabled":"false","mapreduce.jobhistory.webapp.address":"0.0.0.0:19888","hadoop.system.tags":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.log-aggregation.file-controller.TFile.class":"org.apache.hadoop.yarn.logaggregation.filecontroller.tfile.LogAggregationTFileController","yarn.client.nodemanager-connect.max-wait-ms":"180000","yarn.resourcemanager.webapp.address":"${yarn.resourcemanager.hostname}:8088","mapreduce.jobhistory.recovery.enable":"false","mapreduce.reduce.shuffle.parallelcopies":"5","fs.AbstractFileSystem.webhdfs.impl":"org.apache.hadoop.fs.WebHdfs","fs.trash.interval":"0","yarn.app.mapreduce.client.max-retries":"3","hadoop.security.authentication":"simple","mapreduce.task.profile.reduce.params":"${mapreduce.task.profile.params}","yarn.app.mapreduce.am.resource.mb":"1536","mapreduce.input.fileinputformat.list-status.num-threads":"1","yarn.nodemanager.container-executor.class":"org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor","io.mapfile.bloom.size":"1048576","yarn.timeline-service.ttl-ms":"604800000","yarn.resourcemanager.nm-container-queuing.min-queue-length":"5","yarn.nodemanager.resource.cpu-vcores":"-1","mapreduce.job.reduces":"1","fs.s3a.multipart.size":"64M","fs.s3a.select.input.csv.comment.marker":"#","yarn.scheduler.minimum-allocation-vcores":"1","mapreduce.job.speculative.speculative-cap-total-tasks":"0.01","hadoop.ssl.client.conf":"ssl-client.xml","mapreduce.job.queuename":"default","mapreduce.job.encrypted-intermediate-data-key-size-bits":"128","fs.s3a.metadatastore.authoritative":"false","ipc.[port_number].weighted-cost.response":"1","yarn.nodemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","ha.health-monitor.sleep-after-disconnect.ms":"1000","yarn.app.mapreduce.shuffle.log.limit.kb":"0","hadoop.security.group.mapping":"org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback","yarn.client.application-client-protocol.poll-timeout-ms":"-1","mapreduce.jobhistory.jhist.format":"binary","mapreduce.task.stuck.timeout-ms":"600000","yarn.resourcemanager.application.max-tag.length":"100","yarn.resourcemanager.ha.enabled":"false","dfs.client.ignore.namenode.default.kms.uri":"false","hadoop.http.staticuser.user":"dr.who","mapreduce.task.exit.timeout.check-interval-ms":"20000","mapreduce.jobhistory.intermediate-user-done-dir.permissions":"770","mapreduce.task.exit.timeout":"60000","yarn.nodemanager.linux-container-executor.resources-handler.class":"org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler","mapreduce.reduce.shuffle.memory.limit.percent":"0.25","yarn.resourcemanager.reservation-system.enable":"false","mapreduce.map.output.compress":"false","ha.zookeeper.acl":"world:anyone:rwcda","ipc.server.max.connections":"0","yarn.nodemanager.runtime.linux.docker.default-container-network":"host","yarn.router.webapp.address":"0.0.0.0:8089","yarn.scheduler.maximum-allocation-mb":"8192","yarn.resourcemanager.scheduler.monitor.policies":"org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy","yarn.sharedcache.cleaner.period-mins":"1440","yarn.nodemanager.resource-plugins.gpu.docker-plugin.nvidia-docker-v1.endpoint":"http://localhost:3476/v1.0/docker/cli","yarn.app.mapreduce.am.container.log.limit.kb":"0","ipc.client.connect.retry.interval":"1000","yarn.timeline-service.http-cross-origin.enabled":"false","fs.wasbs.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem$Secure","yarn.resourcemanager.nodemanagers.heartbeat-interval-max-ms":"1000","yarn.federation.subcluster-resolver.class":"org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl","yarn.resourcemanager.zk-state-store.parent-path":"/rmstore","fs.s3a.select.input.csv.field.delimiter":",","mapreduce.jobhistory.cleaner.enable":"true","yarn.timeline-service.client.fd-flush-interval-secs":"10","hadoop.security.kms.client.encrypted.key.cache.expiry":"43200000","yarn.client.nodemanager-client-async.thread-pool-max-size":"500","mapreduce.map.maxattempts":"4","yarn.resourcemanager.nm-container-queuing.sorting-nodes-interval-ms":"1000","fs.s3a.committer.staging.tmp.path":"tmp/staging","yarn.nodemanager.sleep-delay-before-sigkill.ms":"250","yarn.resourcemanager.nm-container-queuing.min-queue-wait-time-ms":"10","mapreduce.job.end-notification.retry.attempts":"0","yarn.nodemanager.resource.count-logical-processors-as-cores":"false","hadoop.registry.zk.root":"/registry","adl.feature.ownerandgroup.enableupn":"false","yarn.resourcemanager.zk-max-znode-size.bytes":"1048576","mapreduce.job.reduce.shuffle.consumer.plugin.class":"org.apache.hadoop.mapreduce.task.reduce.Shuffle","yarn.resourcemanager.delayed.delegation-token.removal-interval-ms":"*********(redacted)","yarn.nodemanager.localizer.cache.target-size-mb":"10240","fs.s3a.committer.staging.conflict-mode":"append","mapreduce.client.libjars.wildcard":"true","fs.s3a.committer.staging.unique-filenames":"true","yarn.nodemanager.node-attributes.provider.fetch-timeout-ms":"1200000","fs.s3a.list.version":"2","ftp.client-write-packet-size":"65536","ipc.[port_number].weighted-cost.lockexclusive":"100","fs.AbstractFileSystem.adl.impl":"org.apache.hadoop.fs.adl.Adl","yarn.nodemanager.container-log-monitor.enable":"false","hadoop.security.key.default.cipher":"AES/CTR/NoPadding","yarn.client.failover-retries":"0","fs.s3a.multipart.purge.age":"86400","mapreduce.job.local-fs.single-disk-limit.check.interval-ms":"5000","net.topology.node.switch.mapping.impl":"org.apache.hadoop.net.ScriptBasedMapping","yarn.nodemanager.amrmproxy.address":"0.0.0.0:8049","ipc.server.listen.queue.size":"256","ipc.[port_number].decay-scheduler.period-ms":"5000","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.cache-refresh-interval-secs":"60","map.sort.class":"org.apache.hadoop.util.QuickSort","fs.viewfs.rename.strategy":"SAME_MOUNTPOINT","hadoop.security.kms.client.authentication.retry-count":"1","fs.permissions.umask-mode":"022","fs.s3a.assumed.role.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","yarn.nodemanager.runtime.linux.runc.privileged-containers.allowed":"false","yarn.nodemanager.vmem-check-enabled":"true","yarn.nodemanager.numa-awareness.enabled":"false","yarn.nodemanager.recovery.compaction-interval-secs":"3600","yarn.app.mapreduce.client-am.ipc.max-retries":"3","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.interval-seconds":"60","yarn.federation.registry.base-dir":"yarnfederation/","yarn.nodemanager.health-checker.run-before-startup":"false","mapreduce.job.max.map":"-1","mapreduce.job.local-fs.single-disk-limit.bytes":"-1","mapreduce.shuffle.pathcache.concurrency-level":"16","mapreduce.job.ubertask.maxreduces":"1","mapreduce.shuffle.pathcache.max-weight":"10485760","hadoop.security.kms.client.encrypted.key.cache.size":"500","hadoop.security.java.secure.random.algorithm":"SHA1PRNG","ha.failover-controller.cli-check.rpc-timeout.ms":"20000","mapreduce.jobhistory.jobname.limit":"50","fs.s3a.select.input.compression":"none","yarn.client.nodemanager-connect.retry-interval-ms":"10000","ipc.[port_number].scheduler.priority.levels":"4","yarn.timeline-service.state-store-class":"org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore","yarn.nodemanager.env-whitelist":"JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_HOME,PATH,LANG,TZ","yarn.sharedcache.nested-level":"3","yarn.timeline-service.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","fs.azure.user.agent.prefix":"unknown","yarn.resourcemanager.zk-delegation-token-node.split-index":"*********(redacted)","yarn.nodemanager.numa-awareness.read-topology":"false","yarn.nodemanager.webapp.address":"${yarn.nodemanager.hostname}:8042","rpc.metrics.quantile.enable":"false","yarn.registry.class":"org.apache.hadoop.registry.client.impl.FSRegistryOperationsService","mapreduce.jobhistory.admin.acl":"*","yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size":"10","yarn.scheduler.queue-placement-rules":"user-group","hadoop.http.authentication.kerberos.keytab":"${user.home}/hadoop.keytab","yarn.resourcemanager.recovery.enabled":"false","fs.s3a.select.input.csv.header":"none","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-size":"500","yarn.timeline-service.webapp.rest-csrf.enabled":"false","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-watermark-high-mb":"0"},"System Properties":{"java.io.tmpdir":"/tmp","line.separator":"\n","path.separator":":","sun.management.compiler":"HotSpot 64-Bit Tiered Compilers","SPARK_SUBMIT":"true","sun.cpu.endian":"little","java.specification.maintenance.version":"5","java.specification.version":"1.8","java.vm.specification.name":"Java Virtual Machine Specification","java.vendor":"Private Build","java.vm.specification.version":"1.8","user.home":"/home/thiago","file.encoding.pkg":"sun.io","sun.arch.data.model":"64","sun.boot.library.path":"/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64","user.dir":"/home/thiago","java.library.path":"/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib","sun.cpu.isalist":"","sun.desktop":"gnome","os.arch":"amd64","java.vm.version":"25.422-b05","jetty.git.hash":"cef3fbd6d736a21e7d541a5db490381d95a2047d","java.endorsed.dirs":"/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed","java.runtime.version":"1.8.0_422-8u422-b05-1~22.04-b05","java.vm.info":"mixed mode","java.ext.dirs":"/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext","java.runtime.name":"OpenJDK Runtime Environment","file.separator":"/","java.class.version":"52.0","java.specification.name":"Java Platform API Specification","sun.boot.class.path":"/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes","file.encoding":"UTF-8","jdk.reflect.useDirectMethodHandle":"false","user.timezone":"America/Sao_Paulo","java.specification.vendor":"Oracle Corporation","sun.java.launcher":"SUN_STANDARD","os.version":"6.8.0-40-generic","sun.os.patch.level":"unknown","java.vm.specification.vendor":"Oracle Corporation","user.country":"BR","sun.jnu.encoding":"UTF-8","user.language":"pt","java.vendor.url":"http://java.oracle.com/","java.awt.printerjob":"sun.print.PSPrinterJob","java.awt.graphicsenv":"sun.awt.X11GraphicsEnvironment","awt.toolkit":"sun.awt.X11.XToolkit","os.name":"Linux","java.vm.vendor":"Private Build","java.vendor.url.bug":"http://bugreport.sun.com/bugreport/","user.name":"thiago","java.vm.name":"OpenJDK 64-Bit Server VM","sun.java.command":"org.apache.spark.deploy.SparkSubmit --conf spark.delta.logStore.class=org.apache.spark.sql.delta.storage.S3SingleDriverLogStore --conf spark.memory.offHeap.size=4G --conf spark.eventLog.logBlockUpdates.enabled=true --conf spark.sql.catalog.spark_catalog=org.apache.spark.sql.delta.catalog.DeltaCatalog --conf spark.network.timeout=100000000 --conf spark.driver.bindAddress=0.0.0.0 --conf spark.sql.broadcastTimeout=300000 --conf spark.memory.offHeap.enabled=true --conf spark.sql.parquet.int96RebaseModeInWrite=LEGACY --conf spark.eventLog.jsonFormat.enabled=true --conf spark.sql.extensions=io.delta.sql.DeltaSparkSessionExtension --conf spark.default.parallelism=2 --conf spark.serializer=org.apache.spark.serializer.KryoSerializer --conf spark.eventLog.dir=/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events --conf spark.executor.instances=2 --conf spark.sql.execution.arrow.pyspark.enabled=True --conf spark.executor.memory=12G --conf spark.logConf=True --conf spark.sql.parquet.datetimeRebaseModeInWrite=LEGACY --conf spark.driver.memory=4G --conf spark.kryoserializer.buffer.max=2047 --conf spark.master=local[*] --conf spark.jars.packages=io.delta:delta-spark_2.12:3.2.0 --conf spark.executor.heartbeatInterval=100000000 --conf spark.executor.cores=4 --conf spark.app.name=bronze_to_silver_store_sales --conf spark.sql.repl.eagerEval.enabled=True --conf spark.sql.parquet.int96RebaseModeInRead=LEGACY --conf spark.sql.parquet.datetimeRebaseModeInRead=LEGACY --conf spark.sql.debug.maxToStringFields=1000 --conf spark.sql.session.timeZone=UTC --conf spark.sql.legacy.timeParserPolicy=LEGACY --conf spark.sql.parquet.compression.codec=snappy --conf spark.sql.autoBroadcastJoinThreshold=-1 --conf spark.eventLog.enabled=True --conf spark.jars=\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n             --conf spark.ui.showConsoleProgress=True pyspark-shell","java.home":"/usr/lib/jvm/java-8-openjdk-amd64/jre","java.version":"1.8.0_422","sun.io.unicode.encoding":"UnicodeLittle"},"Metrics Properties":{"*.sink.servlet.class":"org.apache.spark.metrics.sink.MetricsServlet","*.sink.servlet.path":"/metrics/json","applications.sink.servlet.path":"/metrics/applications/json","master.sink.servlet.path":"/metrics/master/json"},"Classpath Entries":{"/opt/spark/jars/netty-transport-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/netty-transport-native-epoll-4.1.96.Final-linux-x86_64.jar":"System Classpath","/opt/spark/jars/kubernetes-model-common-6.7.2.jar":"System Classpath","/opt/spark/jars/spark-network-shuffle_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/logging-interceptor-3.12.12.jar":"System Classpath","/opt/spark/jars/paranamer-2.8.jar":"System Classpath","/opt/spark/jars/breeze_2.12-2.1.0.jar":"System Classpath","/opt/spark/jars/scala-compiler-2.12.18.jar":"System Classpath","/opt/spark/jars/bonecp-0.8.0.RELEASE.jar":"System Classpath","/opt/spark/jars/hadoop-yarn-server-web-proxy-3.3.4.jar":"System Classpath","/opt/spark/jars/hadoop-client-api-3.3.4.jar":"System Classpath","spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar":"Added By User","/opt/spark/jars/netty-handler-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/jersey-hk2-2.40.jar":"System Classpath","/opt/spark/jars/netty-buffer-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/leveldbjni-all-1.8.jar":"System Classpath","/opt/spark/jars/kubernetes-model-gatewayapi-6.7.2.jar":"System Classpath","/opt/spark/jars/spark-common-utils_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/commons-compress-1.23.0.jar":"System Classpath","/opt/spark/jars/log4j-api-2.20.0.jar":"System Classpath","/opt/spark/jars/super-csv-2.2.0.jar":"System Classpath","/opt/spark/jars/javolution-5.5.1.jar":"System Classpath","/opt/spark/jars/hive-shims-scheduler-2.3.9.jar":"System Classpath","/opt/spark/jars/spire-util_2.12-0.17.0.jar":"System Classpath","/opt/spark/jars/netty-transport-classes-epoll-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/gson-2.2.4.jar":"System Classpath","/opt/spark/jars/spark-streaming_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/kubernetes-client-6.7.2.jar":"System Classpath","/opt/spark/jars/parquet-format-structures-1.13.1.jar":"System Classpath","/opt/spark/jars/parquet-column-1.13.1.jar":"System Classpath","/opt/spark/jars/tink-1.9.0.jar":"System Classpath","/opt/spark/jars/istack-commons-runtime-3.0.8.jar":"System Classpath","/opt/spark/jars/antlr-runtime-3.5.2.jar":"System Classpath","/opt/spark/jars/arrow-memory-core-12.0.1.jar":"System Classpath","/opt/spark/jars/commons-dbcp-1.4.jar":"System Classpath","/opt/spark/jars/chill_2.12-0.10.0.jar":"System Classpath","/opt/spark/jars/log4j-core-2.20.0.jar":"System Classpath","/opt/spark/jars/algebra_2.12-2.0.1.jar":"System Classpath","/opt/spark/jars/xz-1.9.jar":"System Classpath","/opt/spark/jars/kubernetes-model-metrics-6.7.2.jar":"System Classpath","/opt/spark/jars/antlr4-runtime-4.9.3.jar":"System Classpath","/opt/spark/jars/hive-service-rpc-3.1.3.jar":"System Classpath","/opt/spark/jars/activation-1.1.1.jar":"System Classpath","/opt/spark/jars/objenesis-3.3.jar":"System Classpath","/opt/spark/jars/joda-time-2.12.5.jar":"System Classpath","spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar":"Added By User","/opt/spark/jars/netty-codec-http-4.1.96.Final.jar":"System Classpath","spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar":"Added By User","/opt/spark/jars/spark-yarn_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/netty-transport-native-epoll-4.1.96.Final-linux-aarch_64.jar":"System Classpath","/opt/spark/jars/hive-storage-api-2.8.1.jar":"System Classpath","/opt/spark/jars/jackson-databind-2.15.2.jar":"System Classpath","/opt/spark/jars/kubernetes-model-policy-6.7.2.jar":"System Classpath","/opt/spark/jars/cats-kernel_2.12-2.1.1.jar":"System Classpath","/opt/spark/jars/spark-tags_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/aopalliance-repackaged-2.6.1.jar":"System Classpath","/opt/spark/jars/lapack-3.0.3.jar":"System Classpath","/opt/spark/jars/xbean-asm9-shaded-4.23.jar":"System Classpath","/opt/spark/jars/hadoop-client-runtime-3.3.4.jar":"System Classpath","/opt/spark/jars/JTransforms-3.1.jar":"System Classpath","/opt/spark/jars/jakarta.servlet-api-4.0.3.jar":"System Classpath","/opt/spark/jars/jul-to-slf4j-2.0.7.jar":"System Classpath","/opt/spark/jars/commons-collections-3.2.2.jar":"System Classpath","/opt/spark/jars/oro-2.0.8.jar":"System Classpath","/opt/spark/jars/datanucleus-api-jdo-4.2.4.jar":"System Classpath","/opt/spark/jars/derby-10.14.2.0.jar":"System Classpath","/opt/spark/jars/kubernetes-model-coordination-6.7.2.jar":"System Classpath","/opt/spark/jars/javassist-3.29.2-GA.jar":"System Classpath","/opt/spark/jars/kubernetes-model-scheduling-6.7.2.jar":"System Classpath","/opt/spark/jars/netty-common-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/metrics-jvm-4.2.19.jar":"System Classpath","/opt/spark/jars/commons-pool-1.5.4.jar":"System Classpath","/opt/spark/jars/commons-codec-1.16.1.jar":"System Classpath","/opt/spark/jars/breeze-macros_2.12-2.1.0.jar":"System Classpath","/opt/spark/jars/kubernetes-model-networking-6.7.2.jar":"System Classpath","file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar":"Added By User","/opt/spark/jars/py4j-0.10.9.7.jar":"System Classpath","file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar":"Added By User","/opt/spark/jars/annotations-17.0.0.jar":"System Classpath","/opt/spark/jars/jaxb-runtime-2.3.2.jar":"System Classpath","/opt/spark/jars/blas-3.0.3.jar":"System Classpath","/opt/spark/jars/json4s-ast_2.12-3.7.0-M11.jar":"System Classpath","/opt/spark/jars/scala-collection-compat_2.12-2.7.0.jar":"System Classpath","/opt/spark/jars/commons-lang-2.6.jar":"System Classpath","/opt/spark/jars/spark-hive_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/compress-lzf-1.1.2.jar":"System Classpath","/opt/spark/jars/spark-network-common_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/zookeeper-jute-3.6.3.jar":"System Classpath","/opt/spark/jars/metrics-graphite-4.2.19.jar":"System Classpath","/opt/spark/jars/spark-mllib_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/spark-catalyst_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/snakeyaml-engine-2.6.jar":"System Classpath","/opt/spark/jars/json4s-jackson_2.12-3.7.0-M11.jar":"System Classpath","/opt/spark/jars/kubernetes-model-discovery-6.7.2.jar":"System Classpath","/opt/spark/jars/jta-1.1.jar":"System Classpath","/opt/spark/jars/jersey-server-2.40.jar":"System Classpath","/opt/spark/jars/orc-core-1.9.4-shaded-protobuf.jar":"System Classpath","/opt/spark/jars/jersey-common-2.40.jar":"System Classpath","/opt/spark/jars/libthrift-0.12.0.jar":"System Classpath","/opt/spark/jars/metrics-json-4.2.19.jar":"System Classpath","/opt/spark/jars/hive-serde-2.3.9.jar":"System Classpath","/opt/spark/jars/RoaringBitmap-0.9.45.jar":"System Classpath","/opt/spark/jars/metrics-core-4.2.19.jar":"System Classpath","/opt/spark/jars/parquet-encoding-1.13.1.jar":"System Classpath","/opt/spark/jars/hive-common-2.3.9.jar":"System Classpath","/opt/spark/jars/hk2-api-2.6.1.jar":"System Classpath","/opt/spark/jars/kubernetes-model-admissionregistration-6.7.2.jar":"System Classpath","/opt/spark/jars/snakeyaml-2.0.jar":"System Classpath","/opt/spark/jars/guava-14.0.1.jar":"System Classpath","/opt/spark/jars/spark-repl_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/slf4j-api-2.0.7.jar":"System Classpath","/opt/spark/jars/hive-metastore-2.3.9.jar":"System Classpath","/opt/spark/jars/spark-unsafe_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/spark-mllib-local_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/jcl-over-slf4j-2.0.7.jar":"System Classpath","/opt/spark/jars/json4s-core_2.12-3.7.0-M11.jar":"System Classpath","/opt/spark/jars/kubernetes-model-autoscaling-6.7.2.jar":"System Classpath","/opt/spark/jars/univocity-parsers-2.9.1.jar":"System Classpath","/opt/spark/jars/commons-text-1.10.0.jar":"System Classpath","/opt/spark/jars/kubernetes-model-apiextensions-6.7.2.jar":"System Classpath","/opt/spark/jars/netty-transport-classes-kqueue-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/orc-shims-1.9.4.jar":"System Classpath","/opt/spark/jars/jersey-client-2.40.jar":"System Classpath","/opt/spark/jars/netty-codec-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/curator-client-2.13.0.jar":"System Classpath","/opt/spark/jars/jackson-mapper-asl-1.9.13.jar":"System Classpath","/opt/spark/jars/jsr305-3.0.0.jar":"System Classpath","/opt/spark/jars/spark-sql-api_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/spark-mesos_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/spire_2.12-0.17.0.jar":"System Classpath","/opt/spark/jars/orc-mapreduce-1.9.4-shaded-protobuf.jar":"System Classpath","/opt/spark/jars/jdo-api-3.0.1.jar":"System Classpath","/opt/spark/jars/hive-exec-2.3.9-core.jar":"System Classpath","/opt/spark/jars/spark-launcher_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/jakarta.annotation-api-1.3.5.jar":"System Classpath","/opt/spark/jars/scala-library-2.12.18.jar":"System Classpath","/opt/spark/jars/ivy-2.5.1.jar":"System Classpath","/opt/spark/jars/minlog-1.3.0.jar":"System Classpath","/opt/spark/jars/shims-0.9.45.jar":"System Classpath","/opt/spark/jars/netty-handler-proxy-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/jackson-annotations-2.15.2.jar":"System Classpath","/opt/spark/jars/kubernetes-model-core-6.7.2.jar":"System Classpath","/opt/spark/jars/kubernetes-model-certificates-6.7.2.jar":"System Classpath","/opt/spark/jars/mesos-1.4.3-shaded-protobuf.jar":"System Classpath","/opt/spark/jars/netty-all-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/scala-reflect-2.12.18.jar":"System Classpath","/opt/spark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-x86_64.jar":"System Classpath","/opt/spark/conf/":"System Classpath","/opt/spark/jars/curator-recipes-2.13.0.jar":"System Classpath","/opt/spark/jars/jakarta.validation-api-2.0.2.jar":"System Classpath","/opt/spark/jars/parquet-common-1.13.1.jar":"System Classpath","/opt/spark/jars/log4j-slf4j2-impl-2.20.0.jar":"System Classpath","/opt/spark/jars/kubernetes-model-batch-6.7.2.jar":"System Classpath","/opt/spark/jars/kubernetes-httpclient-okhttp-6.7.2.jar":"System Classpath","/opt/spark/jars/spire-macros_2.12-0.17.0.jar":"System Classpath","/opt/spark/jars/datasketches-java-3.3.0.jar":"System Classpath","spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar":"Added By User","/opt/spark/jars/metrics-jmx-4.2.19.jar":"System Classpath","/opt/spark/jars/hk2-locator-2.6.1.jar":"System Classpath","/opt/spark/jars/lz4-java-1.8.0.jar":"System Classpath","/opt/spark/jars/scala-xml_2.12-2.1.0.jar":"System Classpath","/opt/spark/jars/hive-shims-0.23-2.3.9.jar":"System Classpath","/opt/spark/jars/spire-platform_2.12-0.17.0.jar":"System Classpath","/opt/spark/jars/jakarta.xml.bind-api-2.3.2.jar":"System Classpath","/opt/spark/jars/commons-lang3-3.12.0.jar":"System Classpath","/opt/spark/jars/JLargeArrays-1.5.jar":"System Classpath","/opt/spark/jars/kubernetes-model-rbac-6.7.2.jar":"System Classpath","/opt/spark/jars/jakarta.inject-2.6.1.jar":"System Classpath","/opt/spark/jars/hive-shims-2.3.9.jar":"System Classpath","/opt/spark/jars/parquet-jackson-1.13.1.jar":"System Classpath","/opt/spark/jars/spark-graphx_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/httpcore-4.4.16.jar":"System Classpath","/opt/spark/jars/jodd-core-3.5.2.jar":"System Classpath","/opt/spark/jars/avro-mapred-1.11.2.jar":"System Classpath","/opt/spark/jars/jackson-core-2.15.2.jar":"System Classpath","/opt/spark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-aarch_64.jar":"System Classpath","/opt/spark/jars/json-1.8.jar":"System Classpath","file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar":"Added By User","/opt/spark/jars/commons-crypto-1.1.0.jar":"System Classpath","/opt/spark/jars/arrow-vector-12.0.1.jar":"System Classpath","/opt/spark/jars/stax-api-1.0.1.jar":"System Classpath","/opt/spark/jars/hive-beeline-2.3.9.jar":"System Classpath","/opt/spark/jars/spark-kubernetes_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/spark-kvstore_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/datanucleus-rdbms-4.1.19.jar":"System Classpath","/opt/spark/jars/httpclient-4.5.14.jar":"System Classpath","/opt/spark/jars/commons-io-2.16.1.jar":"System Classpath","/opt/spark/jars/okhttp-3.12.12.jar":"System Classpath","/opt/spark/jars/commons-logging-1.1.3.jar":"System Classpath","/opt/spark/jars/datanucleus-core-4.1.17.jar":"System Classpath","/opt/spark/jars/jline-2.14.6.jar":"System Classpath","/opt/spark/jars/kryo-shaded-4.0.2.jar":"System Classpath","/opt/spark/jars/spark-sql_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/commons-cli-1.5.0.jar":"System Classpath","/opt/spark/jars/jackson-module-scala_2.12-2.15.2.jar":"System Classpath","/opt/spark/jars/spark-sketch_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/HikariCP-2.5.1.jar":"System Classpath","/opt/spark/jars/dropwizard-metrics-hadoop-metrics2-reporter-0.1.2.jar":"System Classpath","/opt/spark/jars/json4s-scalap_2.12-3.7.0-M11.jar":"System Classpath","/opt/spark/jars/chill-java-0.10.0.jar":"System Classpath","/opt/spark/jars/arpack_combined_all-0.1.jar":"System Classpath","/opt/spark/jars/scala-parser-combinators_2.12-2.3.0.jar":"System Classpath","/opt/spark/jars/zookeeper-3.6.3.jar":"System Classpath","/opt/spark/jars/hive-llap-common-2.3.9.jar":"System Classpath","/opt/spark/jars/okio-1.15.0.jar":"System Classpath","/opt/spark/jars/hive-jdbc-2.3.9.jar":"System Classpath","/opt/spark/jars/netty-resolver-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/jpam-1.1.jar":"System Classpath","/opt/spark/jars/avro-1.11.2.jar":"System Classpath","/opt/spark/jars/opencsv-2.3.jar":"System Classpath","/opt/spark/jars/netty-transport-native-unix-common-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/parquet-hadoop-1.13.1.jar":"System Classpath","/opt/spark/jars/curator-framework-2.13.0.jar":"System Classpath","/opt/spark/jars/jackson-core-asl-1.9.13.jar":"System Classpath","/opt/spark/jars/jackson-dataformat-yaml-2.15.2.jar":"System Classpath","/opt/spark/jars/arrow-memory-netty-12.0.1.jar":"System Classpath","/opt/spark/jars/stream-2.9.6.jar":"System Classpath","/opt/spark/jars/hive-cli-2.3.9.jar":"System Classpath","/opt/spark/jars/kubernetes-model-events-6.7.2.jar":"System Classpath","/opt/spark/jars/jackson-datatype-jsr310-2.15.2.jar":"System Classpath","/opt/spark/jars/avro-ipc-1.11.2.jar":"System Classpath","/opt/spark/jars/rocksdbjni-8.3.2.jar":"System Classpath","/opt/spark/jars/kubernetes-model-node-6.7.2.jar":"System Classpath","/opt/spark/jars/commons-compiler-3.1.9.jar":"System Classpath","/opt/spark/jars/ST4-4.0.4.jar":"System Classpath","/opt/spark/jars/log4j-1.2-api-2.20.0.jar":"System Classpath","/opt/spark/jars/datasketches-memory-2.1.0.jar":"System Classpath","/opt/spark/jars/kubernetes-client-api-6.7.2.jar":"System Classpath","/opt/spark/jars/spark-hive-thriftserver_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/arrow-format-12.0.1.jar":"System Classpath","/opt/spark/jars/arpack-3.0.3.jar":"System Classpath","/opt/spark/jars/kubernetes-model-resource-6.7.2.jar":"System Classpath","/opt/spark/jars/osgi-resource-locator-1.0.3.jar":"System Classpath","/opt/spark/jars/zstd-jni-1.5.5-4.jar":"System Classpath","/opt/spark/jars/jakarta.ws.rs-api-2.1.6.jar":"System Classpath","/opt/spark/jars/hadoop-shaded-guava-1.1.1.jar":"System Classpath","/opt/spark/jars/hk2-utils-2.6.1.jar":"System Classpath","/opt/spark/jars/audience-annotations-0.5.0.jar":"System Classpath","/opt/spark/jars/flatbuffers-java-1.12.0.jar":"System Classpath","/opt/spark/jars/janino-3.1.9.jar":"System Classpath","/opt/spark/jars/aircompressor-0.27.jar":"System Classpath","/opt/spark/jars/commons-math3-3.6.1.jar":"System Classpath","/opt/spark/jars/transaction-api-1.1.jar":"System Classpath","/opt/spark/jars/kubernetes-model-storageclass-6.7.2.jar":"System Classpath","/opt/spark/jars/libfb303-0.9.3.jar":"System Classpath","/opt/spark/jars/spark-measure_2.12-0.24.jar":"System Classpath","/opt/spark/jars/snappy-java-1.1.10.5.jar":"System Classpath","/opt/spark/jars/hive-shims-common-2.3.9.jar":"System Classpath","/opt/spark/jars/jersey-container-servlet-core-2.40.jar":"System Classpath","/opt/spark/jars/netty-codec-http2-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/pickle-1.3.jar":"System Classpath","/opt/spark/jars/kubernetes-model-flowcontrol-6.7.2.jar":"System Classpath","/opt/spark/jars/threeten-extra-1.7.1.jar":"System Classpath","/opt/spark/jars/kubernetes-model-apps-6.7.2.jar":"System Classpath","/opt/spark/jars/javax.jdo-3.2.0-m3.jar":"System Classpath","/opt/spark/jars/kubernetes-model-extensions-6.7.2.jar":"System Classpath","/opt/spark/jars/netty-codec-socks-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/jersey-container-servlet-2.40.jar":"System Classpath","/opt/spark/jars/zjsonpatch-0.3.0.jar":"System Classpath","/opt/spark/jars/spark-core_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/commons-collections4-4.4.jar":"System Classpath"}}
{"Event":"SparkListenerApplicationStart","App Name":"bronze_to_silver_store_sales","App ID":"local-1725742650943","Timestamp":1725742650292,"User":"thiago"}
{"Event":"SparkListenerJobStart","Job ID":0,"Submission Time":1725742655264,"Stage Infos":[{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[0],"Properties":{"spark.rdd.scope":"{\"id\":\"2\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742655281,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.rdd.scope":"{\"id\":\"2\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_0_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":40405,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":0,"Stage Attempt ID":0,"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742655624,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":0,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742655624,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725742660335,"Failed":false,"Killed":false,"Accumulables":[{"ID":1,"Name":"internal.metrics.executorDeserializeTime","Update":157,"Value":157,"Internal":true,"Count Failed Values":true},{"ID":2,"Name":"internal.metrics.executorDeserializeCpuTime","Update":154990209,"Value":154990209,"Internal":true,"Count Failed Values":true},{"ID":3,"Name":"internal.metrics.executorRunTime","Update":4505,"Value":4505,"Internal":true,"Count Failed Values":true},{"ID":4,"Name":"internal.metrics.executorCpuTime","Update":41294100,"Value":41294100,"Internal":true,"Count Failed Values":true},{"ID":5,"Name":"internal.metrics.resultSize","Update":1154,"Value":1154,"Internal":true,"Count Failed Values":true},{"ID":6,"Name":"internal.metrics.jvmGCTime","Update":78,"Value":78,"Internal":true,"Count Failed Values":true},{"ID":7,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":157,"Executor Deserialize CPU Time":154990209,"Executor Run Time":4505,"Executor CPU Time":41294100,"Peak Execution Memory":0,"Result Size":1154,"JVM GC Time":78,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742655281,"Completion Time":1725742660341,"Accumulables":[{"ID":1,"Name":"internal.metrics.executorDeserializeTime","Value":157,"Internal":true,"Count Failed Values":true},{"ID":2,"Name":"internal.metrics.executorDeserializeCpuTime","Value":154990209,"Internal":true,"Count Failed Values":true},{"ID":3,"Name":"internal.metrics.executorRunTime","Value":4505,"Internal":true,"Count Failed Values":true},{"ID":4,"Name":"internal.metrics.executorCpuTime","Value":41294100,"Internal":true,"Count Failed Values":true},{"ID":5,"Name":"internal.metrics.resultSize","Value":1154,"Internal":true,"Count Failed Values":true},{"ID":6,"Name":"internal.metrics.jvmGCTime","Value":78,"Internal":true,"Count Failed Values":true},{"ID":7,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":0,"Completion Time":1725742660343,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerJobStart","Job ID":1,"Submission Time":1725742662989,"Stage Infos":[{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"5\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[1],"Properties":{"spark.rdd.scope":"{\"id\":\"7\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"5\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742662991,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.rdd.scope":"{\"id\":\"7\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_1_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":40379,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742663005,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742663005,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725742664084,"Failed":false,"Killed":false,"Accumulables":[{"ID":36,"Name":"internal.metrics.executorDeserializeTime","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":37,"Name":"internal.metrics.executorDeserializeCpuTime","Update":7638457,"Value":7638457,"Internal":true,"Count Failed Values":true},{"ID":38,"Name":"internal.metrics.executorRunTime","Update":1066,"Value":1066,"Internal":true,"Count Failed Values":true},{"ID":39,"Name":"internal.metrics.executorCpuTime","Update":3225966,"Value":3225966,"Internal":true,"Count Failed Values":true},{"ID":40,"Name":"internal.metrics.resultSize","Update":1162,"Value":1162,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":7,"Executor Deserialize CPU Time":7638457,"Executor Run Time":1066,"Executor CPU Time":3225966,"Peak Execution Memory":0,"Result Size":1162,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"5\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742662991,"Completion Time":1725742664085,"Accumulables":[{"ID":36,"Name":"internal.metrics.executorDeserializeTime","Value":7,"Internal":true,"Count Failed Values":true},{"ID":37,"Name":"internal.metrics.executorDeserializeCpuTime","Value":7638457,"Internal":true,"Count Failed Values":true},{"ID":38,"Name":"internal.metrics.executorRunTime","Value":1066,"Internal":true,"Count Failed Values":true},{"ID":39,"Name":"internal.metrics.executorCpuTime","Value":3225966,"Internal":true,"Count Failed Values":true},{"ID":40,"Name":"internal.metrics.resultSize","Value":1162,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":1,"Completion Time":1725742664085,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_1_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":40379,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":0,"rootExecutionId":0,"description":"save at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","physicalPlanDescription":"== Physical Plan ==\nExecute SaveIntoDataSourceCommand (1)\n   +- SaveIntoDataSourceCommand (2)\n         +- Project (49)\n            +- Project (48)\n               +- Project (47)\n                  +- Project (46)\n                     +- Project (45)\n                        +- Project (44)\n                           +- Project (43)\n                              +- Project (42)\n                                 +- Project (41)\n                                    +- Project (40)\n                                       +- Project (39)\n                                          +- Project (38)\n                                             +- Project (37)\n                                                +- Project (36)\n                                                   +- Project (35)\n                                                      +- Project (34)\n                                                         +- Project (33)\n                                                            +- Project (32)\n                                                               +- Project (31)\n                                                                  +- Project (30)\n                                                                     +- Project (29)\n                                                                        +- Project (28)\n                                                                           +- Project (27)\n                                                                              +- Project (26)\n                                                                                 +- Project (25)\n                                                                                    +- Project (24)\n                                                                                       +- Project (23)\n                                                                                          +- Project (22)\n                                                                                             +- Project (21)\n                                                                                                +- Project (20)\n                                                                                                   +- Project (19)\n                                                                                                      +- Project (18)\n                                                                                                         +- Project (17)\n                                                                                                            +- Project (16)\n                                                                                                               +- Project (15)\n                                                                                                                  +- Project (14)\n                                                                                                                     +- Project (13)\n                                                                                                                        +- Project (12)\n                                                                                                                           +- Project (11)\n                                                                                                                              +- Project (10)\n                                                                                                                                 +- Project (9)\n                                                                                                                                    +- Project (8)\n                                                                                                                                       +- Deduplicate (7)\n                                                                                                                                          +- Project (6)\n                                                                                                                                             +- Join (5)\n                                                                                                                                                :- LogicalRelation (3)\n                                                                                                                                                +- LogicalRelation (4)\n\n\n(1) Execute SaveIntoDataSourceCommand\nOutput: []\n\n(2) SaveIntoDataSourceCommand\nArguments: org.apache.spark.sql.delta.sources.DeltaDataSource@7ee0d7bb, [path=s3a://datalake-test-thiago/02-silver/delta/store_sales/], Overwrite\n\n(3) LogicalRelation\nArguments: parquet, [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8], false\n\n(4) LogicalRelation\nArguments: parquet, [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27], false\n\n(5) Join\nArguments: LeftOuter, (Store#0 = Store#18)\n\n(6) Project\nArguments: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(7) Deduplicate\nArguments: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\n\n(8) Project\nArguments: [Store#0 AS store#58, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(9) Project\nArguments: [store#58, DayOfWeek#1 AS day_of_week#77, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(10) Project\nArguments: [store#58, day_of_week#77, Date#2 AS date#96, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(11) Project\nArguments: [store#58, day_of_week#77, date#96, Sales#3 AS sales#115, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(12) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, Customers#4 AS customers#134, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(13) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, Open#5 AS open#153, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(14) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, Promo#6 AS promo#172, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(15) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, StateHoliday#7 AS state_holiday#191, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(16) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, SchoolHoliday#8 AS school_holiday#210, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(17) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, StoreType#19 AS store_type#229, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(18) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, Assortment#20 AS assortment#248, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(19) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, CompetitionDistance#21 AS competition_distance#267, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(20) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#267, CompetitionOpenSinceMonth#22 AS competition_open_since_month#286, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(21) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#267, competition_open_since_month#286, CompetitionOpenSinceYear#23 AS competition_open_since_year#305, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(22) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#267, competition_open_since_month#286, competition_open_since_year#305, Promo2#24 AS promo2#324, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(23) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#267, competition_open_since_month#286, competition_open_since_year#305, promo2#324, Promo2SinceWeek#25 AS promo2_since_week#343, Promo2SinceYear#26, PromoInterval#27]\n\n(24) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#267, competition_open_since_month#286, competition_open_since_year#305, promo2#324, promo2_since_week#343, Promo2SinceYear#26 AS promo2_since_year#362, PromoInterval#27]\n\n(25) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#267, competition_open_since_month#286, competition_open_since_year#305, promo2#324, promo2_since_week#343, promo2_since_year#362, PromoInterval#27 AS promo_interval#381]\n\n(26) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, CASE WHEN isnan(cast(competition_distance#267 as double)) THEN 200000.0 ELSE cast(competition_distance#267 as double) END AS competition_distance#400, competition_open_since_month#286, competition_open_since_year#305, promo2#324, promo2_since_week#343, promo2_since_year#362, promo_interval#381]\n\n(27) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, CASE WHEN isnan(cast(competition_open_since_month#286 as double)) THEN month(cast(date#96 as date)) ELSE competition_open_since_month#286 END AS competition_open_since_month#419, competition_open_since_year#305, promo2#324, promo2_since_week#343, promo2_since_year#362, promo_interval#381]\n\n(28) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, CASE WHEN isnan(cast(competition_open_since_year#305 as double)) THEN year(cast(date#96 as date)) ELSE competition_open_since_year#305 END AS competition_open_since_year#438, promo2#324, promo2_since_week#343, promo2_since_year#362, promo_interval#381]\n\n(29) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, CASE WHEN isnan(cast(promo2_since_week#343 as double)) THEN weekofyear(cast(date#96 as date)) ELSE promo2_since_week#343 END AS promo2_since_week#457, promo2_since_year#362, promo_interval#381]\n\n(30) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, CASE WHEN isnan(cast(promo2_since_year#362 as double)) THEN year(cast(date#96 as date)) ELSE promo2_since_year#362 END AS promo2_since_year#476, promo_interval#381]\n\n(31) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#381, CASE WHEN (month(cast(date#96 as date)) = 12) THEN Dec ELSE CASE WHEN (month(cast(date#96 as date)) = 11) THEN Nov ELSE CASE WHEN (month(cast(date#96 as date)) = 10) THEN Out ELSE CASE WHEN (month(cast(date#96 as date)) = 9) THEN Sep ELSE CASE WHEN (month(cast(date#96 as date)) = 8) THEN Aug ELSE CASE WHEN (month(cast(date#96 as date)) = 7) THEN Jul ELSE CASE WHEN (month(cast(date#96 as date)) = 6) THEN Jun ELSE CASE WHEN (month(cast(date#96 as date)) = 5) THEN May ELSE CASE WHEN (month(cast(date#96 as date)) = 4) THEN Apr ELSE CASE WHEN (month(cast(date#96 as date)) = 3) THEN Mar ELSE CASE WHEN (month(cast(date#96 as date)) = 2) THEN Fev ELSE CASE WHEN (month(cast(date#96 as date)) = 1) THEN Jan ELSE cast(cast(CASE WHEN isnotnull(date#96) THEN cast(date#96 as date) END as int) as string) END END END END END END END END END END END END AS month_map#495]\n\n(32) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, CASE WHEN isnull(promo_interval#381) THEN  ELSE promo_interval#381 END AS promo_interval#515, month_map#495]\n\n(33) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]\n\n(34) Project\nArguments: [store#58, day_of_week#77, to_date(date#96, Some(yyyy-MM-dd), Some(UTC), false) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(35) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, cast(competition_open_since_month#419 as int) AS competition_open_since_month#577, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(36) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, cast(competition_open_since_year#438 as int) AS competition_open_since_year#598, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(37) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, cast(promo2_since_week#457 as int) AS promo2_since_week#619, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(38) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, cast(promo2_since_year#476 as int) AS promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535]\n\n(39) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661]\n\n(40) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month(date#556) AS month#683]\n\n(41) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, dayofmonth(date#556) AS day#706]\n\n(42) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, weekofyear(date#556) AS week_of_year#730]\n\n(43) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755]\n\n(44) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, make_date(competition_open_since_year#598, competition_open_since_month#577, 1, false) AS competition_since#781]\n\n(45) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / cast(30 as double)) as int) AS competition_time_month#808]\n\n(46) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, date_add(make_date(promo2_since_year#640, 1, 1, false), (((promo2_since_week#619 - 1) * 7) - 1)) AS promo_since#836]\n\n(47) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / cast(7 as double)) as int) AS promo_time_week#865]\n\n(48) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, promo_time_week#865]\n\n(49) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, assortment#895, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, promo_time_week#865]\n\n","sparkPlanInfo":{"nodeName":"Execute SaveIntoDataSourceCommand","simpleString":"Execute SaveIntoDataSourceCommand","children":[],"metadata":{},"metrics":[]},"time":1725742665480,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":1,"rootExecutionId":0,"description":"save at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (16)\n+- Project (15)\n   +- Project (14)\n      +- Project (13)\n         +- Project (12)\n            +- HashAggregate (11)\n               +- HashAggregate (10)\n                  +- Project (9)\n                     +- SortMergeJoin LeftOuter (8)\n                        :- Sort (3)\n                        :  +- Exchange (2)\n                        :     +- Scan parquet  (1)\n                        +- Sort (7)\n                           +- Exchange (6)\n                              +- Filter (5)\n                                 +- Scan parquet  (4)\n\n\n(1) Scan parquet \nOutput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nBatched: true\nLocation: InMemoryFileIndex [s3a://datalake-test-thiago/01-bronze/spark/train]\nReadSchema: struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHoliday:string,SchoolHoliday:int>\n\n(2) Exchange\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=55]\n\n(3) Sort\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: [Store#0 ASC NULLS FIRST], false, 0\n\n(4) Scan parquet \nOutput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nBatched: true\nLocation: InMemoryFileIndex [s3a://datalake-test-thiago/01-bronze/spark/store]\nPushedFilters: [IsNotNull(Store)]\nReadSchema: struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceMonth:int,CompetitionOpenSinceYear:int,Promo2:int,Promo2SinceWeek:int,Promo2SinceYear:int,PromoInterval:string>\n\n(5) Filter\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nCondition : isnotnull(Store#18)\n\n(6) Exchange\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=56]\n\n(7) Sort\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: [Store#18 ASC NULLS FIRST], false, 0\n\n(8) SortMergeJoin\nLeft keys [1]: [Store#0]\nRight keys [1]: [Store#18]\nJoin type: LeftOuter\nJoin condition: None\n\n(9) Project\nOutput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nInput [19]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(10) HashAggregate\nInput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\n\n(11) HashAggregate\nInput [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [19]: [Store#0 AS store#58, DayOfWeek#1 AS day_of_week#77, Date#2 AS date#96, Sales#3 AS sales#115, Customers#4 AS customers#134, Open#5 AS open#153, Promo#6 AS promo#172, StateHoliday#7 AS state_holiday#191, SchoolHoliday#8 AS school_holiday#210, StoreType#19 AS store_type#229, Assortment#20 AS assortment#248, CASE WHEN isnan(cast(CompetitionDistance#21 as double)) THEN 200000.0 ELSE cast(CompetitionDistance#21 as double) END AS competition_distance#400, CASE WHEN isnan(cast(CompetitionOpenSinceMonth#22 as double)) THEN month(cast(Date#2 as date)) ELSE CompetitionOpenSinceMonth#22 END AS competition_open_since_month#419, CASE WHEN isnan(cast(CompetitionOpenSinceYear#23 as double)) THEN year(cast(Date#2 as date)) ELSE CompetitionOpenSinceYear#23 END AS competition_open_since_year#438, Promo2#24 AS promo2#324, CASE WHEN isnan(cast(Promo2SinceWeek#25 as double)) THEN weekofyear(cast(Date#2 as date)) ELSE Promo2SinceWeek#25 END AS promo2_since_week#457, CASE WHEN isnan(cast(Promo2SinceYear#26 as double)) THEN year(cast(Date#2 as date)) ELSE Promo2SinceYear#26 END AS promo2_since_year#476, CASE WHEN isnull(PromoInterval#27) THEN  ELSE PromoInterval#27 END AS promo_interval#515, CASE WHEN (month(cast(Date#2 as date)) = 12) THEN Dec ELSE CASE WHEN (month(cast(Date#2 as date)) = 11) THEN Nov ELSE CASE WHEN (month(cast(Date#2 as date)) = 10) THEN Out ELSE CASE WHEN (month(cast(Date#2 as date)) = 9) THEN Sep ELSE CASE WHEN (month(cast(Date#2 as date)) = 8) THEN Aug ELSE CASE WHEN (month(cast(Date#2 as date)) = 7) THEN Jul ELSE CASE WHEN (month(cast(Date#2 as date)) = 6) THEN Jun ELSE CASE WHEN (month(cast(Date#2 as date)) = 5) THEN May ELSE CASE WHEN (month(cast(Date#2 as date)) = 4) THEN Apr ELSE CASE WHEN (month(cast(Date#2 as date)) = 3) THEN Mar ELSE CASE WHEN (month(cast(Date#2 as date)) = 2) THEN Fev ELSE CASE WHEN (month(cast(Date#2 as date)) = 1) THEN Jan ELSE CASE WHEN isnotnull(Date#2) THEN cast(cast(cast(Date#2 as date) as int) as string) END END END END END END END END END END END END END AS month_map#495]\n\n(12) Project\nOutput [20]: [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]\nInput [19]: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495]\n\n(13) Project\nOutput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]\nInput [20]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(14) Project\nOutput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]\nInput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781]\n\n(15) Project\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]\nInput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836]\n\n(16) AdaptiveSparkPlan\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#925, school_holiday#210, store_type#229, assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, promo_time_week#865]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0], functions=[])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0], functions=[])","children":[{"nodeName":"Project","simpleString":"Project [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]","children":[{"nodeName":"SortMergeJoin","simpleString":"SortMergeJoin [Store#0], [Store#18], LeftOuter","children":[{"nodeName":"Sort","simpleString":"Sort [Store#0 ASC NULLS FIRST], false, 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=55]","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [Store#0,DayOfWeek#1,Date#2,Sales#3,Customers#4,Open#5,Promo#6,StateHoliday#7,SchoolHoliday#8] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/train], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHolida...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/train]","ReadSchema":"struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHoliday:string,SchoolHoliday:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":112,"metricType":"sum"},{"name":"scan time","accumulatorId":111,"metricType":"timing"},{"name":"metadata time","accumulatorId":113,"metricType":"timing"},{"name":"size of files read","accumulatorId":114,"metricType":"size"},{"name":"number of output rows","accumulatorId":110,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":108,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":102,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":109,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":103,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":100,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":97,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":106,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":99,"metricType":"sum"},{"name":"records read","accumulatorId":96,"metricType":"sum"},{"name":"local bytes read","accumulatorId":94,"metricType":"size"},{"name":"fetch wait time","accumulatorId":95,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":92,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":98,"metricType":"sum"},{"name":"local blocks read","accumulatorId":91,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":101,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":90,"metricType":"sum"},{"name":"data size","accumulatorId":88,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":104,"metricType":"size"},{"name":"number of partitions","accumulatorId":89,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":105,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":93,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":107,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":85,"metricType":"timing"},{"name":"peak memory","accumulatorId":86,"metricType":"size"},{"name":"spill size","accumulatorId":87,"metricType":"size"}]},{"nodeName":"Sort","simpleString":"Sort [Store#18 ASC NULLS FIRST], false, 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=56]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(Store#18)","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [Store#18,StoreType#19,Assortment#20,CompetitionDistance#21,CompetitionOpenSinceMonth#22,CompetitionOpenSinceYear#23,Promo2#24,Promo2SinceWeek#25,Promo2SinceYear#26,PromoInterval#27] Batched: true, DataFilters: [isnotnull(Store#18)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/store], PartitionFilters: [], PushedFilters: [IsNotNull(Store)], ReadSchema: struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceM...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/store]","ReadSchema":"struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceMonth:int,CompetitionOpenSinceYear:int,Promo2:int,Promo2SinceWeek:int,Promo2SinceYear:int,PromoInterval:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(Store)]","DataFilters":"[isnotnull(Store#18)]"},"metrics":[{"name":"number of files read","accumulatorId":143,"metricType":"sum"},{"name":"scan time","accumulatorId":142,"metricType":"timing"},{"name":"metadata time","accumulatorId":144,"metricType":"timing"},{"name":"size of files read","accumulatorId":145,"metricType":"size"},{"name":"number of output rows","accumulatorId":141,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":140,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":138,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":132,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":139,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":133,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":130,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":127,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":136,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":129,"metricType":"sum"},{"name":"records read","accumulatorId":126,"metricType":"sum"},{"name":"local bytes read","accumulatorId":124,"metricType":"size"},{"name":"fetch wait time","accumulatorId":125,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":122,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":128,"metricType":"sum"},{"name":"local blocks read","accumulatorId":121,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":131,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":120,"metricType":"sum"},{"name":"data size","accumulatorId":118,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":134,"metricType":"size"},{"name":"number of partitions","accumulatorId":119,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":135,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":123,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":137,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":115,"metricType":"timing"},{"name":"peak memory","accumulatorId":116,"metricType":"size"},{"name":"spill size","accumulatorId":117,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":83,"metricType":"sum"},{"name":"spill size","accumulatorId":84,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":79,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":80,"metricType":"timing"},{"name":"peak memory","accumulatorId":78,"metricType":"size"},{"name":"number of output rows","accumulatorId":77,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":82,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":81,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":73,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":74,"metricType":"timing"},{"name":"peak memory","accumulatorId":72,"metricType":"size"},{"name":"number of output rows","accumulatorId":71,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":76,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":75,"metricType":"average"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]},"time":1725742671663,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":1,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (33)\n+- == Current Plan ==\n   Project (19)\n   +- Project (18)\n      +- Project (17)\n         +- Project (16)\n            +- HashAggregate (15)\n               +- HashAggregate (14)\n                  +- Project (13)\n                     +- SortMergeJoin LeftOuter (12)\n                        :- Sort (5)\n                        :  +- ShuffleQueryStage (4)\n                        :     +- Exchange (3)\n                        :        +- * ColumnarToRow (2)\n                        :           +- Scan parquet  (1)\n                        +- Sort (11)\n                           +- ShuffleQueryStage (10)\n                              +- Exchange (9)\n                                 +- * Filter (8)\n                                    +- * ColumnarToRow (7)\n                                       +- Scan parquet  (6)\n+- == Initial Plan ==\n   Project (32)\n   +- Project (31)\n      +- Project (30)\n         +- Project (29)\n            +- HashAggregate (28)\n               +- HashAggregate (27)\n                  +- Project (26)\n                     +- SortMergeJoin LeftOuter (25)\n                        :- Sort (21)\n                        :  +- Exchange (20)\n                        :     +- Scan parquet  (1)\n                        +- Sort (24)\n                           +- Exchange (23)\n                              +- Filter (22)\n                                 +- Scan parquet  (6)\n\n\n(1) Scan parquet \nOutput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nBatched: true\nLocation: InMemoryFileIndex [s3a://datalake-test-thiago/01-bronze/spark/train]\nReadSchema: struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHoliday:string,SchoolHoliday:int>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\n\n(3) Exchange\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=76]\n\n(4) ShuffleQueryStage\nOutput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: 0\n\n(5) Sort\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: [Store#0 ASC NULLS FIRST], false, 0\n\n(6) Scan parquet \nOutput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nBatched: true\nLocation: InMemoryFileIndex [s3a://datalake-test-thiago/01-bronze/spark/store]\nPushedFilters: [IsNotNull(Store)]\nReadSchema: struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceMonth:int,CompetitionOpenSinceYear:int,Promo2:int,Promo2SinceWeek:int,Promo2SinceYear:int,PromoInterval:string>\n\n(7) ColumnarToRow [codegen id : 2]\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(8) Filter [codegen id : 2]\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nCondition : isnotnull(Store#18)\n\n(9) Exchange\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=96]\n\n(10) ShuffleQueryStage\nOutput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: 1\n\n(11) Sort\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: [Store#18 ASC NULLS FIRST], false, 0\n\n(12) SortMergeJoin\nLeft keys [1]: [Store#0]\nRight keys [1]: [Store#18]\nJoin type: LeftOuter\nJoin condition: None\n\n(13) Project\nOutput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nInput [19]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(14) HashAggregate\nInput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\n\n(15) HashAggregate\nInput [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [19]: [Store#0 AS store#58, DayOfWeek#1 AS day_of_week#77, Date#2 AS date#96, Sales#3 AS sales#115, Customers#4 AS customers#134, Open#5 AS open#153, Promo#6 AS promo#172, StateHoliday#7 AS state_holiday#191, SchoolHoliday#8 AS school_holiday#210, StoreType#19 AS store_type#229, Assortment#20 AS assortment#248, CASE WHEN isnan(cast(CompetitionDistance#21 as double)) THEN 200000.0 ELSE cast(CompetitionDistance#21 as double) END AS competition_distance#400, CASE WHEN isnan(cast(CompetitionOpenSinceMonth#22 as double)) THEN month(cast(Date#2 as date)) ELSE CompetitionOpenSinceMonth#22 END AS competition_open_since_month#419, CASE WHEN isnan(cast(CompetitionOpenSinceYear#23 as double)) THEN year(cast(Date#2 as date)) ELSE CompetitionOpenSinceYear#23 END AS competition_open_since_year#438, Promo2#24 AS promo2#324, CASE WHEN isnan(cast(Promo2SinceWeek#25 as double)) THEN weekofyear(cast(Date#2 as date)) ELSE Promo2SinceWeek#25 END AS promo2_since_week#457, CASE WHEN isnan(cast(Promo2SinceYear#26 as double)) THEN year(cast(Date#2 as date)) ELSE Promo2SinceYear#26 END AS promo2_since_year#476, CASE WHEN isnull(PromoInterval#27) THEN  ELSE PromoInterval#27 END AS promo_interval#515, CASE WHEN (month(cast(Date#2 as date)) = 12) THEN Dec ELSE CASE WHEN (month(cast(Date#2 as date)) = 11) THEN Nov ELSE CASE WHEN (month(cast(Date#2 as date)) = 10) THEN Out ELSE CASE WHEN (month(cast(Date#2 as date)) = 9) THEN Sep ELSE CASE WHEN (month(cast(Date#2 as date)) = 8) THEN Aug ELSE CASE WHEN (month(cast(Date#2 as date)) = 7) THEN Jul ELSE CASE WHEN (month(cast(Date#2 as date)) = 6) THEN Jun ELSE CASE WHEN (month(cast(Date#2 as date)) = 5) THEN May ELSE CASE WHEN (month(cast(Date#2 as date)) = 4) THEN Apr ELSE CASE WHEN (month(cast(Date#2 as date)) = 3) THEN Mar ELSE CASE WHEN (month(cast(Date#2 as date)) = 2) THEN Fev ELSE CASE WHEN (month(cast(Date#2 as date)) = 1) THEN Jan ELSE CASE WHEN isnotnull(Date#2) THEN cast(cast(cast(Date#2 as date) as int) as string) END END END END END END END END END END END END END AS month_map#495]\n\n(16) Project\nOutput [20]: [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]\nInput [19]: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495]\n\n(17) Project\nOutput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]\nInput [20]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(18) Project\nOutput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]\nInput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781]\n\n(19) Project\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]\nInput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836]\n\n(20) Exchange\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=55]\n\n(21) Sort\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: [Store#0 ASC NULLS FIRST], false, 0\n\n(22) Filter\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nCondition : isnotnull(Store#18)\n\n(23) Exchange\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=56]\n\n(24) Sort\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: [Store#18 ASC NULLS FIRST], false, 0\n\n(25) SortMergeJoin\nLeft keys [1]: [Store#0]\nRight keys [1]: [Store#18]\nJoin type: LeftOuter\nJoin condition: None\n\n(26) Project\nOutput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nInput [19]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(27) HashAggregate\nInput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\n\n(28) HashAggregate\nInput [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [19]: [Store#0 AS store#58, DayOfWeek#1 AS day_of_week#77, Date#2 AS date#96, Sales#3 AS sales#115, Customers#4 AS customers#134, Open#5 AS open#153, Promo#6 AS promo#172, StateHoliday#7 AS state_holiday#191, SchoolHoliday#8 AS school_holiday#210, StoreType#19 AS store_type#229, Assortment#20 AS assortment#248, CASE WHEN isnan(cast(CompetitionDistance#21 as double)) THEN 200000.0 ELSE cast(CompetitionDistance#21 as double) END AS competition_distance#400, CASE WHEN isnan(cast(CompetitionOpenSinceMonth#22 as double)) THEN month(cast(Date#2 as date)) ELSE CompetitionOpenSinceMonth#22 END AS competition_open_since_month#419, CASE WHEN isnan(cast(CompetitionOpenSinceYear#23 as double)) THEN year(cast(Date#2 as date)) ELSE CompetitionOpenSinceYear#23 END AS competition_open_since_year#438, Promo2#24 AS promo2#324, CASE WHEN isnan(cast(Promo2SinceWeek#25 as double)) THEN weekofyear(cast(Date#2 as date)) ELSE Promo2SinceWeek#25 END AS promo2_since_week#457, CASE WHEN isnan(cast(Promo2SinceYear#26 as double)) THEN year(cast(Date#2 as date)) ELSE Promo2SinceYear#26 END AS promo2_since_year#476, CASE WHEN isnull(PromoInterval#27) THEN  ELSE PromoInterval#27 END AS promo_interval#515, CASE WHEN (month(cast(Date#2 as date)) = 12) THEN Dec ELSE CASE WHEN (month(cast(Date#2 as date)) = 11) THEN Nov ELSE CASE WHEN (month(cast(Date#2 as date)) = 10) THEN Out ELSE CASE WHEN (month(cast(Date#2 as date)) = 9) THEN Sep ELSE CASE WHEN (month(cast(Date#2 as date)) = 8) THEN Aug ELSE CASE WHEN (month(cast(Date#2 as date)) = 7) THEN Jul ELSE CASE WHEN (month(cast(Date#2 as date)) = 6) THEN Jun ELSE CASE WHEN (month(cast(Date#2 as date)) = 5) THEN May ELSE CASE WHEN (month(cast(Date#2 as date)) = 4) THEN Apr ELSE CASE WHEN (month(cast(Date#2 as date)) = 3) THEN Mar ELSE CASE WHEN (month(cast(Date#2 as date)) = 2) THEN Fev ELSE CASE WHEN (month(cast(Date#2 as date)) = 1) THEN Jan ELSE CASE WHEN isnotnull(Date#2) THEN cast(cast(cast(Date#2 as date) as int) as string) END END END END END END END END END END END END END AS month_map#495]\n\n(29) Project\nOutput [20]: [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]\nInput [19]: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495]\n\n(30) Project\nOutput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]\nInput [20]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(31) Project\nOutput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]\nInput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781]\n\n(32) Project\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]\nInput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836]\n\n(33) AdaptiveSparkPlan\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#925, school_holiday#210, store_type#229, assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, promo_time_week#865]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0], functions=[])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0], functions=[])","children":[{"nodeName":"Project","simpleString":"Project [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]","children":[{"nodeName":"SortMergeJoin","simpleString":"SortMergeJoin [Store#0], [Store#18], LeftOuter","children":[{"nodeName":"Sort","simpleString":"Sort [Store#0 ASC NULLS FIRST], false, 0","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=76]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [Store#0,DayOfWeek#1,Date#2,Sales#3,Customers#4,Open#5,Promo#6,StateHoliday#7,SchoolHoliday#8] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/train], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHolida...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/train]","ReadSchema":"struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHoliday:string,SchoolHoliday:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":112,"metricType":"sum"},{"name":"scan time","accumulatorId":111,"metricType":"timing"},{"name":"metadata time","accumulatorId":113,"metricType":"timing"},{"name":"size of files read","accumulatorId":114,"metricType":"size"},{"name":"number of output rows","accumulatorId":110,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":192,"metricType":"sum"},{"name":"number of input batches","accumulatorId":193,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":191,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":189,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":183,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":190,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":184,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":181,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":178,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":187,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":180,"metricType":"sum"},{"name":"records read","accumulatorId":177,"metricType":"sum"},{"name":"local bytes read","accumulatorId":175,"metricType":"size"},{"name":"fetch wait time","accumulatorId":176,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":173,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":179,"metricType":"sum"},{"name":"local blocks read","accumulatorId":172,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":182,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":171,"metricType":"sum"},{"name":"data size","accumulatorId":169,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":185,"metricType":"size"},{"name":"number of partitions","accumulatorId":170,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":186,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":174,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":188,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":166,"metricType":"timing"},{"name":"peak memory","accumulatorId":167,"metricType":"size"},{"name":"spill size","accumulatorId":168,"metricType":"size"}]},{"nodeName":"Sort","simpleString":"Sort [Store#18 ASC NULLS FIRST], false, 0","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 1","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=96]","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(Store#18)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [Store#18,StoreType#19,Assortment#20,CompetitionDistance#21,CompetitionOpenSinceMonth#22,CompetitionOpenSinceYear#23,Promo2#24,Promo2SinceWeek#25,Promo2SinceYear#26,PromoInterval#27] Batched: true, DataFilters: [isnotnull(Store#18)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/store], PartitionFilters: [], PushedFilters: [IsNotNull(Store)], ReadSchema: struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceM...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/store]","ReadSchema":"struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceMonth:int,CompetitionOpenSinceYear:int,Promo2:int,Promo2SinceWeek:int,Promo2SinceYear:int,PromoInterval:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(Store)]","DataFilters":"[isnotnull(Store#18)]"},"metrics":[{"name":"number of files read","accumulatorId":143,"metricType":"sum"},{"name":"scan time","accumulatorId":142,"metricType":"timing"},{"name":"metadata time","accumulatorId":144,"metricType":"timing"},{"name":"size of files read","accumulatorId":145,"metricType":"size"},{"name":"number of output rows","accumulatorId":141,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":221,"metricType":"sum"},{"name":"number of input batches","accumulatorId":222,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":220,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":219,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":217,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":211,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":218,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":212,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":209,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":206,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":215,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":208,"metricType":"sum"},{"name":"records read","accumulatorId":205,"metricType":"sum"},{"name":"local bytes read","accumulatorId":203,"metricType":"size"},{"name":"fetch wait time","accumulatorId":204,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":201,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":207,"metricType":"sum"},{"name":"local blocks read","accumulatorId":200,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":210,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":199,"metricType":"sum"},{"name":"data size","accumulatorId":197,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":213,"metricType":"size"},{"name":"number of partitions","accumulatorId":198,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":214,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":202,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":216,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":194,"metricType":"timing"},{"name":"peak memory","accumulatorId":195,"metricType":"size"},{"name":"spill size","accumulatorId":196,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":164,"metricType":"sum"},{"name":"spill size","accumulatorId":165,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":160,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":161,"metricType":"timing"},{"name":"peak memory","accumulatorId":159,"metricType":"size"},{"name":"number of output rows","accumulatorId":158,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":163,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":162,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":154,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":155,"metricType":"timing"},{"name":"peak memory","accumulatorId":153,"metricType":"size"},{"name":"number of output rows","accumulatorId":152,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":157,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":156,"metricType":"average"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_2_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":38358,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[112,2],[113,5],[114,4600551]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[170,200]]}
{"Event":"SparkListenerJobStart","Job ID":2,"Submission Time":1725742672024,"Stage Infos":[{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"14\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"14\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[2],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"1","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"10\",\"name\":\"Exchange\"}","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"14\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"14\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742672030,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"1","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"10\",\"name\":\"Exchange\"}","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_3_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":38408,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_4_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":8753,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[143,1],[144,0],[145,15182]]}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742672076,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[198,200]]}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":3,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725742672081,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerJobStart","Job ID":3,"Submission Time":1725742672084,"Stage Infos":[{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"15\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"16\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"FileScanRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[3],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"1","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"15\",\"name\":\"Exchange\"}","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"15\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"16\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"FileScanRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742672085,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"1","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"15\",\"name\":\"Exchange\"}","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_5_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":8927,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":4,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742672101,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_0_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":40405,"Disk Size":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":4,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742672101,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725742674955,"Failed":false,"Killed":false,"Accumulables":[{"ID":141,"Name":"number of output rows","Update":"1115","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":142,"Name":"scan time","Update":"2692","Value":"2692","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":197,"Name":"data size","Update":"125096","Value":"125096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":216,"Name":"shuffle bytes written","Update":"64867","Value":"64867","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":217,"Name":"shuffle records written","Update":"1115","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"shuffle write time","Update":"23283670","Value":"23283670","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"duration","Update":"2765","Value":"2765","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"number of output rows","Update":"1115","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":221,"Name":"number of output rows","Update":"1115","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":222,"Name":"number of input batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":258,"Name":"internal.metrics.executorDeserializeTime","Update":22,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":259,"Name":"internal.metrics.executorDeserializeCpuTime","Update":15841665,"Value":15841665,"Internal":true,"Count Failed Values":true},{"ID":260,"Name":"internal.metrics.executorRunTime","Update":2826,"Value":2826,"Internal":true,"Count Failed Values":true},{"ID":261,"Name":"internal.metrics.executorCpuTime","Update":457234945,"Value":457234945,"Internal":true,"Count Failed Values":true},{"ID":262,"Name":"internal.metrics.resultSize","Update":2226,"Value":2226,"Internal":true,"Count Failed Values":true},{"ID":263,"Name":"internal.metrics.jvmGCTime","Update":135,"Value":135,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":64867,"Value":64867,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1115,"Value":1115,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.write.writeTime","Update":23283670,"Value":23283670,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.input.bytesRead","Update":22726,"Value":22726,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.input.recordsRead","Update":1115,"Value":1115,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":22,"Executor Deserialize CPU Time":15841665,"Executor Run Time":2826,"Executor CPU Time":457234945,"Peak Execution Memory":0,"Result Size":2226,"JVM GC Time":135,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":64867,"Shuffle Write Time":23283670,"Shuffle Records Written":1115},"Input Metrics":{"Bytes Read":22726,"Records Read":1115},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"15\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"16\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"FileScanRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742672085,"Completion Time":1725742674957,"Accumulables":[{"ID":141,"Name":"number of output rows","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":142,"Name":"scan time","Value":"2692","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":197,"Name":"data size","Value":"125096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":216,"Name":"shuffle bytes written","Value":"64867","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":217,"Name":"shuffle records written","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"shuffle write time","Value":"23283670","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"duration","Value":"2765","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"number of output rows","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":221,"Name":"number of output rows","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":222,"Name":"number of input batches","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":258,"Name":"internal.metrics.executorDeserializeTime","Value":22,"Internal":true,"Count Failed Values":true},{"ID":259,"Name":"internal.metrics.executorDeserializeCpuTime","Value":15841665,"Internal":true,"Count Failed Values":true},{"ID":260,"Name":"internal.metrics.executorRunTime","Value":2826,"Internal":true,"Count Failed Values":true},{"ID":261,"Name":"internal.metrics.executorCpuTime","Value":457234945,"Internal":true,"Count Failed Values":true},{"ID":262,"Name":"internal.metrics.resultSize","Value":2226,"Internal":true,"Count Failed Values":true},{"ID":263,"Name":"internal.metrics.jvmGCTime","Value":135,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":64867,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":1115,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.write.writeTime","Value":23283670,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.input.bytesRead","Value":22726,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.input.recordsRead","Value":1115,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":3,"Completion Time":1725742674960,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":3,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725742672081,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725742680570,"Failed":false,"Killed":false,"Accumulables":[{"ID":110,"Name":"number of output rows","Update":"452680","Value":"452680","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":111,"Name":"scan time","Update":"8112","Value":"8112","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":169,"Name":"data size","Update":"47078720","Value":"47078720","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":188,"Name":"shuffle bytes written","Update":"9894156","Value":"9894156","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":189,"Name":"shuffle records written","Update":"452680","Value":"452680","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":190,"Name":"shuffle write time","Update":"21729085","Value":"21729085","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":191,"Name":"duration","Update":"8380","Value":"8380","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":192,"Name":"number of output rows","Update":"452680","Value":"452680","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":193,"Name":"number of input batches","Update":"111","Value":"111","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":223,"Name":"internal.metrics.executorDeserializeTime","Update":42,"Value":42,"Internal":true,"Count Failed Values":true},{"ID":224,"Name":"internal.metrics.executorDeserializeCpuTime","Update":26973152,"Value":26973152,"Internal":true,"Count Failed Values":true},{"ID":225,"Name":"internal.metrics.executorRunTime","Update":8443,"Value":8443,"Internal":true,"Count Failed Values":true},{"ID":226,"Name":"internal.metrics.executorCpuTime","Update":530905803,"Value":530905803,"Internal":true,"Count Failed Values":true},{"ID":227,"Name":"internal.metrics.resultSize","Update":2170,"Value":2170,"Internal":true,"Count Failed Values":true},{"ID":228,"Name":"internal.metrics.jvmGCTime","Update":135,"Value":135,"Internal":true,"Count Failed Values":true},{"ID":251,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":9894156,"Value":9894156,"Internal":true,"Count Failed Values":true},{"ID":252,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":452680,"Value":452680,"Internal":true,"Count Failed Values":true},{"ID":253,"Name":"internal.metrics.shuffle.write.writeTime","Update":21729085,"Value":21729085,"Internal":true,"Count Failed Values":true},{"ID":254,"Name":"internal.metrics.input.bytesRead","Update":2053924,"Value":2053924,"Internal":true,"Count Failed Values":true},{"ID":255,"Name":"internal.metrics.input.recordsRead","Update":452680,"Value":452680,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":42,"Executor Deserialize CPU Time":26973152,"Executor Run Time":8443,"Executor CPU Time":530905803,"Peak Execution Memory":0,"Result Size":2170,"JVM GC Time":135,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":9894156,"Shuffle Write Time":21729085,"Shuffle Records Written":452680},"Input Metrics":{"Bytes Read":2053924,"Records Read":452680},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742672076,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725742684844,"Failed":false,"Killed":false,"Accumulables":[{"ID":110,"Name":"number of output rows","Update":"564529","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":111,"Name":"scan time","Update":"12398","Value":"20510","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":169,"Name":"data size","Update":"58711016","Value":"105789736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":188,"Name":"shuffle bytes written","Update":"12305214","Value":"22199370","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":189,"Name":"shuffle records written","Update":"564529","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":190,"Name":"shuffle write time","Update":"21866249","Value":"43595334","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":191,"Name":"duration","Update":"12657","Value":"21037","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":192,"Name":"number of output rows","Update":"564529","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":193,"Name":"number of input batches","Update":"138","Value":"249","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":223,"Name":"internal.metrics.executorDeserializeTime","Update":41,"Value":83,"Internal":true,"Count Failed Values":true},{"ID":224,"Name":"internal.metrics.executorDeserializeCpuTime","Update":25959152,"Value":52932304,"Internal":true,"Count Failed Values":true},{"ID":225,"Name":"internal.metrics.executorRunTime","Update":12719,"Value":21162,"Internal":true,"Count Failed Values":true},{"ID":226,"Name":"internal.metrics.executorCpuTime","Update":545260638,"Value":1076166441,"Internal":true,"Count Failed Values":true},{"ID":227,"Name":"internal.metrics.resultSize","Update":2170,"Value":4340,"Internal":true,"Count Failed Values":true},{"ID":228,"Name":"internal.metrics.jvmGCTime","Update":135,"Value":270,"Internal":true,"Count Failed Values":true},{"ID":251,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":12305214,"Value":22199370,"Internal":true,"Count Failed Values":true},{"ID":252,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":564529,"Value":1017209,"Internal":true,"Count Failed Values":true},{"ID":253,"Name":"internal.metrics.shuffle.write.writeTime","Update":21866249,"Value":43595334,"Internal":true,"Count Failed Values":true},{"ID":254,"Name":"internal.metrics.input.bytesRead","Update":2541347,"Value":4595271,"Internal":true,"Count Failed Values":true},{"ID":255,"Name":"internal.metrics.input.recordsRead","Update":564529,"Value":1017209,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":41,"Executor Deserialize CPU Time":25959152,"Executor Run Time":12719,"Executor CPU Time":545260638,"Peak Execution Memory":0,"Result Size":2170,"JVM GC Time":135,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":12305214,"Shuffle Write Time":21866249,"Shuffle Records Written":564529},"Input Metrics":{"Bytes Read":2541347,"Records Read":564529},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"14\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"14\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742672030,"Completion Time":1725742684845,"Accumulables":[{"ID":110,"Name":"number of output rows","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":111,"Name":"scan time","Value":"20510","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":169,"Name":"data size","Value":"105789736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":188,"Name":"shuffle bytes written","Value":"22199370","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":189,"Name":"shuffle records written","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":190,"Name":"shuffle write time","Value":"43595334","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":191,"Name":"duration","Value":"21037","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":192,"Name":"number of output rows","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":193,"Name":"number of input batches","Value":"249","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":223,"Name":"internal.metrics.executorDeserializeTime","Value":83,"Internal":true,"Count Failed Values":true},{"ID":224,"Name":"internal.metrics.executorDeserializeCpuTime","Value":52932304,"Internal":true,"Count Failed Values":true},{"ID":225,"Name":"internal.metrics.executorRunTime","Value":21162,"Internal":true,"Count Failed Values":true},{"ID":226,"Name":"internal.metrics.executorCpuTime","Value":1076166441,"Internal":true,"Count Failed Values":true},{"ID":227,"Name":"internal.metrics.resultSize","Value":4340,"Internal":true,"Count Failed Values":true},{"ID":228,"Name":"internal.metrics.jvmGCTime","Value":270,"Internal":true,"Count Failed Values":true},{"ID":251,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":22199370,"Internal":true,"Count Failed Values":true},{"ID":252,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":1017209,"Internal":true,"Count Failed Values":true},{"ID":253,"Name":"internal.metrics.shuffle.write.writeTime","Value":43595334,"Internal":true,"Count Failed Values":true},{"ID":254,"Name":"internal.metrics.input.bytesRead","Value":4595271,"Internal":true,"Count Failed Values":true},{"ID":255,"Name":"internal.metrics.input.recordsRead","Value":1017209,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":2,"Completion Time":1725742684846,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":1,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (35)\n+- == Final Plan ==\n   * Project (21)\n   +- * Project (20)\n      +- * Project (19)\n         +- * Project (18)\n            +- * HashAggregate (17)\n               +- * HashAggregate (16)\n                  +- * Project (15)\n                     +- * SortMergeJoin LeftOuter (14)\n                        :- * Sort (6)\n                        :  +- AQEShuffleRead (5)\n                        :     +- ShuffleQueryStage (4), Statistics(sizeInBytes=100.9 MiB, rowCount=1.02E+6)\n                        :        +- Exchange (3)\n                        :           +- * ColumnarToRow (2)\n                        :              +- Scan parquet  (1)\n                        +- * Sort (13)\n                           +- AQEShuffleRead (12)\n                              +- ShuffleQueryStage (11), Statistics(sizeInBytes=122.2 KiB, rowCount=1.12E+3)\n                                 +- Exchange (10)\n                                    +- * Filter (9)\n                                       +- * ColumnarToRow (8)\n                                          +- Scan parquet  (7)\n+- == Initial Plan ==\n   Project (34)\n   +- Project (33)\n      +- Project (32)\n         +- Project (31)\n            +- HashAggregate (30)\n               +- HashAggregate (29)\n                  +- Project (28)\n                     +- SortMergeJoin LeftOuter (27)\n                        :- Sort (23)\n                        :  +- Exchange (22)\n                        :     +- Scan parquet  (1)\n                        +- Sort (26)\n                           +- Exchange (25)\n                              +- Filter (24)\n                                 +- Scan parquet  (7)\n\n\n(1) Scan parquet \nOutput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nBatched: true\nLocation: InMemoryFileIndex [s3a://datalake-test-thiago/01-bronze/spark/train]\nReadSchema: struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHoliday:string,SchoolHoliday:int>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\n\n(3) Exchange\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=76]\n\n(4) ShuffleQueryStage\nOutput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: 0\n\n(5) AQEShuffleRead\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: coalesced\n\n(6) Sort [codegen id : 3]\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: [Store#0 ASC NULLS FIRST], false, 0\n\n(7) Scan parquet \nOutput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nBatched: true\nLocation: InMemoryFileIndex [s3a://datalake-test-thiago/01-bronze/spark/store]\nPushedFilters: [IsNotNull(Store)]\nReadSchema: struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceMonth:int,CompetitionOpenSinceYear:int,Promo2:int,Promo2SinceWeek:int,Promo2SinceYear:int,PromoInterval:string>\n\n(8) ColumnarToRow [codegen id : 2]\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(9) Filter [codegen id : 2]\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nCondition : isnotnull(Store#18)\n\n(10) Exchange\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=96]\n\n(11) ShuffleQueryStage\nOutput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: 1\n\n(12) AQEShuffleRead\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: coalesced\n\n(13) Sort [codegen id : 4]\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: [Store#18 ASC NULLS FIRST], false, 0\n\n(14) SortMergeJoin [codegen id : 5]\nLeft keys [1]: [Store#0]\nRight keys [1]: [Store#18]\nJoin type: LeftOuter\nJoin condition: None\n\n(15) Project [codegen id : 5]\nOutput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nInput [19]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(16) HashAggregate [codegen id : 5]\nInput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\n\n(17) HashAggregate [codegen id : 5]\nInput [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [19]: [Store#0 AS store#58, DayOfWeek#1 AS day_of_week#77, Date#2 AS date#96, Sales#3 AS sales#115, Customers#4 AS customers#134, Open#5 AS open#153, Promo#6 AS promo#172, StateHoliday#7 AS state_holiday#191, SchoolHoliday#8 AS school_holiday#210, StoreType#19 AS store_type#229, Assortment#20 AS assortment#248, CASE WHEN isnan(cast(CompetitionDistance#21 as double)) THEN 200000.0 ELSE cast(CompetitionDistance#21 as double) END AS competition_distance#400, CASE WHEN isnan(cast(CompetitionOpenSinceMonth#22 as double)) THEN month(cast(Date#2 as date)) ELSE CompetitionOpenSinceMonth#22 END AS competition_open_since_month#419, CASE WHEN isnan(cast(CompetitionOpenSinceYear#23 as double)) THEN year(cast(Date#2 as date)) ELSE CompetitionOpenSinceYear#23 END AS competition_open_since_year#438, Promo2#24 AS promo2#324, CASE WHEN isnan(cast(Promo2SinceWeek#25 as double)) THEN weekofyear(cast(Date#2 as date)) ELSE Promo2SinceWeek#25 END AS promo2_since_week#457, CASE WHEN isnan(cast(Promo2SinceYear#26 as double)) THEN year(cast(Date#2 as date)) ELSE Promo2SinceYear#26 END AS promo2_since_year#476, CASE WHEN isnull(PromoInterval#27) THEN  ELSE PromoInterval#27 END AS promo_interval#515, CASE WHEN (month(cast(Date#2 as date)) = 12) THEN Dec ELSE CASE WHEN (month(cast(Date#2 as date)) = 11) THEN Nov ELSE CASE WHEN (month(cast(Date#2 as date)) = 10) THEN Out ELSE CASE WHEN (month(cast(Date#2 as date)) = 9) THEN Sep ELSE CASE WHEN (month(cast(Date#2 as date)) = 8) THEN Aug ELSE CASE WHEN (month(cast(Date#2 as date)) = 7) THEN Jul ELSE CASE WHEN (month(cast(Date#2 as date)) = 6) THEN Jun ELSE CASE WHEN (month(cast(Date#2 as date)) = 5) THEN May ELSE CASE WHEN (month(cast(Date#2 as date)) = 4) THEN Apr ELSE CASE WHEN (month(cast(Date#2 as date)) = 3) THEN Mar ELSE CASE WHEN (month(cast(Date#2 as date)) = 2) THEN Fev ELSE CASE WHEN (month(cast(Date#2 as date)) = 1) THEN Jan ELSE CASE WHEN isnotnull(Date#2) THEN cast(cast(cast(Date#2 as date) as int) as string) END END END END END END END END END END END END END AS month_map#495]\n\n(18) Project [codegen id : 5]\nOutput [20]: [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]\nInput [19]: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495]\n\n(19) Project [codegen id : 5]\nOutput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]\nInput [20]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(20) Project [codegen id : 5]\nOutput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]\nInput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781]\n\n(21) Project [codegen id : 5]\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]\nInput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836]\n\n(22) Exchange\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=55]\n\n(23) Sort\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: [Store#0 ASC NULLS FIRST], false, 0\n\n(24) Filter\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nCondition : isnotnull(Store#18)\n\n(25) Exchange\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=56]\n\n(26) Sort\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: [Store#18 ASC NULLS FIRST], false, 0\n\n(27) SortMergeJoin\nLeft keys [1]: [Store#0]\nRight keys [1]: [Store#18]\nJoin type: LeftOuter\nJoin condition: None\n\n(28) Project\nOutput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nInput [19]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(29) HashAggregate\nInput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\n\n(30) HashAggregate\nInput [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [19]: [Store#0 AS store#58, DayOfWeek#1 AS day_of_week#77, Date#2 AS date#96, Sales#3 AS sales#115, Customers#4 AS customers#134, Open#5 AS open#153, Promo#6 AS promo#172, StateHoliday#7 AS state_holiday#191, SchoolHoliday#8 AS school_holiday#210, StoreType#19 AS store_type#229, Assortment#20 AS assortment#248, CASE WHEN isnan(cast(CompetitionDistance#21 as double)) THEN 200000.0 ELSE cast(CompetitionDistance#21 as double) END AS competition_distance#400, CASE WHEN isnan(cast(CompetitionOpenSinceMonth#22 as double)) THEN month(cast(Date#2 as date)) ELSE CompetitionOpenSinceMonth#22 END AS competition_open_since_month#419, CASE WHEN isnan(cast(CompetitionOpenSinceYear#23 as double)) THEN year(cast(Date#2 as date)) ELSE CompetitionOpenSinceYear#23 END AS competition_open_since_year#438, Promo2#24 AS promo2#324, CASE WHEN isnan(cast(Promo2SinceWeek#25 as double)) THEN weekofyear(cast(Date#2 as date)) ELSE Promo2SinceWeek#25 END AS promo2_since_week#457, CASE WHEN isnan(cast(Promo2SinceYear#26 as double)) THEN year(cast(Date#2 as date)) ELSE Promo2SinceYear#26 END AS promo2_since_year#476, CASE WHEN isnull(PromoInterval#27) THEN  ELSE PromoInterval#27 END AS promo_interval#515, CASE WHEN (month(cast(Date#2 as date)) = 12) THEN Dec ELSE CASE WHEN (month(cast(Date#2 as date)) = 11) THEN Nov ELSE CASE WHEN (month(cast(Date#2 as date)) = 10) THEN Out ELSE CASE WHEN (month(cast(Date#2 as date)) = 9) THEN Sep ELSE CASE WHEN (month(cast(Date#2 as date)) = 8) THEN Aug ELSE CASE WHEN (month(cast(Date#2 as date)) = 7) THEN Jul ELSE CASE WHEN (month(cast(Date#2 as date)) = 6) THEN Jun ELSE CASE WHEN (month(cast(Date#2 as date)) = 5) THEN May ELSE CASE WHEN (month(cast(Date#2 as date)) = 4) THEN Apr ELSE CASE WHEN (month(cast(Date#2 as date)) = 3) THEN Mar ELSE CASE WHEN (month(cast(Date#2 as date)) = 2) THEN Fev ELSE CASE WHEN (month(cast(Date#2 as date)) = 1) THEN Jan ELSE CASE WHEN isnotnull(Date#2) THEN cast(cast(cast(Date#2 as date) as int) as string) END END END END END END END END END END END END END AS month_map#495]\n\n(31) Project\nOutput [20]: [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]\nInput [19]: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495]\n\n(32) Project\nOutput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]\nInput [20]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(33) Project\nOutput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]\nInput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781]\n\n(34) Project\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]\nInput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836]\n\n(35) AdaptiveSparkPlan\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#925, school_holiday#210, store_type#229, assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, promo_time_week#865]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (5)","simpleString":"WholeStageCodegen (5)","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0], functions=[])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0], functions=[])","children":[{"nodeName":"Project","simpleString":"Project [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]","children":[{"nodeName":"SortMergeJoin","simpleString":"SortMergeJoin [Store#0], [Store#18], LeftOuter","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"WholeStageCodegen (3)","simpleString":"WholeStageCodegen (3)","children":[{"nodeName":"Sort","simpleString":"Sort [Store#0 ASC NULLS FIRST], false, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=76]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [Store#0,DayOfWeek#1,Date#2,Sales#3,Customers#4,Open#5,Promo#6,StateHoliday#7,SchoolHoliday#8] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/train], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHolida...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/train]","ReadSchema":"struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHoliday:string,SchoolHoliday:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":112,"metricType":"sum"},{"name":"scan time","accumulatorId":111,"metricType":"timing"},{"name":"metadata time","accumulatorId":113,"metricType":"timing"},{"name":"size of files read","accumulatorId":114,"metricType":"size"},{"name":"number of output rows","accumulatorId":110,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":192,"metricType":"sum"},{"name":"number of input batches","accumulatorId":193,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":191,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":189,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":183,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":190,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":184,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":181,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":178,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":187,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":180,"metricType":"sum"},{"name":"records read","accumulatorId":177,"metricType":"sum"},{"name":"local bytes read","accumulatorId":175,"metricType":"size"},{"name":"fetch wait time","accumulatorId":176,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":173,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":179,"metricType":"sum"},{"name":"local blocks read","accumulatorId":172,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":182,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":171,"metricType":"sum"},{"name":"data size","accumulatorId":169,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":185,"metricType":"size"},{"name":"number of partitions","accumulatorId":170,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":186,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":174,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":188,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":312,"metricType":"sum"},{"name":"partition data size","accumulatorId":313,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":314,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":309,"metricType":"timing"},{"name":"peak memory","accumulatorId":310,"metricType":"size"},{"name":"spill size","accumulatorId":311,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":308,"metricType":"timing"}]}],"metadata":{},"metrics":[]},{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"WholeStageCodegen (4)","simpleString":"WholeStageCodegen (4)","children":[{"nodeName":"Sort","simpleString":"Sort [Store#18 ASC NULLS FIRST], false, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 1","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=96]","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(Store#18)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [Store#18,StoreType#19,Assortment#20,CompetitionDistance#21,CompetitionOpenSinceMonth#22,CompetitionOpenSinceYear#23,Promo2#24,Promo2SinceWeek#25,Promo2SinceYear#26,PromoInterval#27] Batched: true, DataFilters: [isnotnull(Store#18)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/store], PartitionFilters: [], PushedFilters: [IsNotNull(Store)], ReadSchema: struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceM...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/store]","ReadSchema":"struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceMonth:int,CompetitionOpenSinceYear:int,Promo2:int,Promo2SinceWeek:int,Promo2SinceYear:int,PromoInterval:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(Store)]","DataFilters":"[isnotnull(Store#18)]"},"metrics":[{"name":"number of files read","accumulatorId":143,"metricType":"sum"},{"name":"scan time","accumulatorId":142,"metricType":"timing"},{"name":"metadata time","accumulatorId":144,"metricType":"timing"},{"name":"size of files read","accumulatorId":145,"metricType":"size"},{"name":"number of output rows","accumulatorId":141,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":221,"metricType":"sum"},{"name":"number of input batches","accumulatorId":222,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":220,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":219,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":217,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":211,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":218,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":212,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":209,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":206,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":215,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":208,"metricType":"sum"},{"name":"records read","accumulatorId":205,"metricType":"sum"},{"name":"local bytes read","accumulatorId":203,"metricType":"size"},{"name":"fetch wait time","accumulatorId":204,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":201,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":207,"metricType":"sum"},{"name":"local blocks read","accumulatorId":200,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":210,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":199,"metricType":"sum"},{"name":"data size","accumulatorId":197,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":213,"metricType":"size"},{"name":"number of partitions","accumulatorId":198,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":214,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":202,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":216,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":319,"metricType":"sum"},{"name":"partition data size","accumulatorId":320,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":321,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":316,"metricType":"timing"},{"name":"peak memory","accumulatorId":317,"metricType":"size"},{"name":"spill size","accumulatorId":318,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":315,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":306,"metricType":"sum"},{"name":"spill size","accumulatorId":307,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":302,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":303,"metricType":"timing"},{"name":"peak memory","accumulatorId":301,"metricType":"size"},{"name":"number of output rows","accumulatorId":300,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":305,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":304,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":296,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":297,"metricType":"timing"},{"name":"peak memory","accumulatorId":295,"metricType":"size"},{"name":"number of output rows","accumulatorId":294,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":299,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":298,"metricType":"average"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":293,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[312,2],[314,2],[313,11631012],[313,11663275]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[319,2],[321,2],[320,33990],[320,33936]]}
{"Event":"SparkListenerJobStart","Job ID":4,"Submission Time":1725742685385,"Stage Infos":[{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"14\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"14\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"WholeStageCodegen (5)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"38\",\"name\":\"WholeStageCodegen (4)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"ZippedPartitionsRDD2","Scope":"{\"id\":\"23\",\"name\":\"WholeStageCodegen (5)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[13,15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"36\",\"name\":\"AQEShuffleRead\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"41\",\"name\":\"AQEShuffleRead\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"33\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[5,4],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"15\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"16\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"FileScanRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[5,6,4],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"1","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"WholeStageCodegen (5)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"38\",\"name\":\"WholeStageCodegen (4)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"ZippedPartitionsRDD2","Scope":"{\"id\":\"23\",\"name\":\"WholeStageCodegen (5)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[13,15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"36\",\"name\":\"AQEShuffleRead\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"41\",\"name\":\"AQEShuffleRead\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"33\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[5,4],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742685396,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"1","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_6_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":180297,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":5,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742685425,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":6,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725742685427,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":5,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742685425,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725742693727,"Failed":false,"Killed":false,"Accumulables":[{"ID":150,"Name":"task commit time","Update":"207","Value":"207","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":172,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":175,"Name":"local bytes read","Update":"11055349","Value":"11055349","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":176,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":177,"Name":"records read","Update":"505653","Value":"505653","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":203,"Name":"local bytes read","Update":"32511","Value":"32511","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":204,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":205,"Name":"records read","Update":"553","Value":"553","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":293,"Name":"duration","Update":"5508","Value":"5508","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":294,"Name":"number of output rows","Update":"505653","Value":"505653","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":295,"Name":"peak memory","Update":"117440512","Value":"117440512","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":297,"Name":"time in aggregation build","Update":"726","Value":"726","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":298,"Name":"avg hash probes per key","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":300,"Name":"number of output rows","Update":"505653","Value":"505653","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":301,"Name":"peak memory","Update":"117440512","Value":"117440512","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":303,"Name":"time in aggregation build","Update":"463","Value":"463","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":304,"Name":"avg hash probes per key","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":306,"Name":"number of output rows","Update":"505653","Value":"505653","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":307,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"duration","Update":"1356","Value":"1356","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":309,"Name":"sort time","Update":"11","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":310,"Name":"peak memory","Update":"83886080","Value":"83886080","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":311,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":315,"Name":"duration","Update":"1311","Value":"1311","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":316,"Name":"sort time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":317,"Name":"peak memory","Update":"16842752","Value":"16842752","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":318,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":322,"Name":"internal.metrics.executorDeserializeTime","Update":61,"Value":61,"Internal":true,"Count Failed Values":true},{"ID":323,"Name":"internal.metrics.executorDeserializeCpuTime","Update":53659154,"Value":53659154,"Internal":true,"Count Failed Values":true},{"ID":324,"Name":"internal.metrics.executorRunTime","Update":8223,"Value":8223,"Internal":true,"Count Failed Values":true},{"ID":325,"Name":"internal.metrics.executorCpuTime","Update":5221079997,"Value":5221079997,"Internal":true,"Count Failed Values":true},{"ID":326,"Name":"internal.metrics.resultSize","Update":9564,"Value":9564,"Internal":true,"Count Failed Values":true},{"ID":327,"Name":"internal.metrics.jvmGCTime","Update":78,"Value":78,"Internal":true,"Count Failed Values":true},{"ID":328,"Name":"internal.metrics.resultSerializationTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":331,"Name":"internal.metrics.peakExecutionMemory","Update":335609856,"Value":335609856,"Internal":true,"Count Failed Values":true},{"ID":333,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":334,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":335,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":336,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":337,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":11087860,"Value":11087860,"Internal":true,"Count Failed Values":true},{"ID":338,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":339,"Name":"internal.metrics.shuffle.read.recordsRead","Update":506206,"Value":506206,"Internal":true,"Count Failed Values":true},{"ID":340,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":346,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":347,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":348,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.output.bytesWritten","Update":2411407,"Value":2411407,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.output.recordsWritten","Update":505653,"Value":505653,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":61,"Executor Deserialize CPU Time":53659154,"Executor Run Time":8223,"Executor CPU Time":5221079997,"Peak Execution Memory":335609856,"Result Size":9564,"JVM GC Time":78,"Result Serialization Time":4,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":3,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":11087860,"Total Records Read":506206,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":2411407,"Records Written":505653},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":6,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725742685427,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725742693914,"Failed":false,"Killed":false,"Accumulables":[{"ID":150,"Name":"task commit time","Update":"204","Value":"411","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":172,"Name":"local blocks read","Update":"2","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":175,"Name":"local bytes read","Update":"11144021","Value":"22199370","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":176,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":177,"Name":"records read","Update":"511556","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"local blocks read","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":203,"Name":"local bytes read","Update":"32356","Value":"64867","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":204,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":205,"Name":"records read","Update":"562","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":293,"Name":"duration","Update":"5652","Value":"11160","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":294,"Name":"number of output rows","Update":"511556","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":295,"Name":"peak memory","Update":"117440512","Value":"234881024","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":297,"Name":"time in aggregation build","Update":"1181","Value":"1907","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":298,"Name":"avg hash probes per key","Update":"16","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":300,"Name":"number of output rows","Update":"511556","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":301,"Name":"peak memory","Update":"117440512","Value":"234881024","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":303,"Name":"time in aggregation build","Update":"752","Value":"1215","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":304,"Name":"avg hash probes per key","Update":"16","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":306,"Name":"number of output rows","Update":"511556","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":307,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"duration","Update":"936","Value":"2292","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":309,"Name":"sort time","Update":"23","Value":"34","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":310,"Name":"peak memory","Update":"83886080","Value":"167772160","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":311,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":315,"Name":"duration","Update":"889","Value":"2200","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":316,"Name":"sort time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":317,"Name":"peak memory","Update":"16842752","Value":"33685504","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":318,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":322,"Name":"internal.metrics.executorDeserializeTime","Update":61,"Value":122,"Internal":true,"Count Failed Values":true},{"ID":323,"Name":"internal.metrics.executorDeserializeCpuTime","Update":54807902,"Value":108467056,"Internal":true,"Count Failed Values":true},{"ID":324,"Name":"internal.metrics.executorRunTime","Update":8420,"Value":16643,"Internal":true,"Count Failed Values":true},{"ID":325,"Name":"internal.metrics.executorCpuTime","Update":5159323558,"Value":10380403555,"Internal":true,"Count Failed Values":true},{"ID":326,"Name":"internal.metrics.resultSize","Update":9520,"Value":19084,"Internal":true,"Count Failed Values":true},{"ID":327,"Name":"internal.metrics.jvmGCTime","Update":78,"Value":156,"Internal":true,"Count Failed Values":true},{"ID":331,"Name":"internal.metrics.peakExecutionMemory","Update":335609856,"Value":671219712,"Internal":true,"Count Failed Values":true},{"ID":333,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":334,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":3,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":335,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":336,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":337,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":11176377,"Value":22264237,"Internal":true,"Count Failed Values":true},{"ID":338,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":339,"Name":"internal.metrics.shuffle.read.recordsRead","Update":512118,"Value":1018324,"Internal":true,"Count Failed Values":true},{"ID":340,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":346,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":347,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":348,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.output.bytesWritten","Update":2384699,"Value":4796106,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.output.recordsWritten","Update":511556,"Value":1017209,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":61,"Executor Deserialize CPU Time":54807902,"Executor Run Time":8420,"Executor CPU Time":5159323558,"Peak Execution Memory":335609856,"Result Size":9520,"JVM GC Time":78,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":3,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":11176377,"Total Records Read":512118,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":2384699,"Records Written":511556},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"WholeStageCodegen (5)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"38\",\"name\":\"WholeStageCodegen (4)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"ZippedPartitionsRDD2","Scope":"{\"id\":\"23\",\"name\":\"WholeStageCodegen (5)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[13,15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"36\",\"name\":\"AQEShuffleRead\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"41\",\"name\":\"AQEShuffleRead\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"33\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[5,4],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742685396,"Completion Time":1725742693917,"Accumulables":[{"ID":150,"Name":"task commit time","Value":"411","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":172,"Name":"local blocks read","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":175,"Name":"local bytes read","Value":"22199370","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":176,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":177,"Name":"records read","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":203,"Name":"local bytes read","Value":"64867","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":204,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":205,"Name":"records read","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":293,"Name":"duration","Value":"11160","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":294,"Name":"number of output rows","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":295,"Name":"peak memory","Value":"234881024","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":297,"Name":"time in aggregation build","Value":"1907","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":298,"Name":"avg hash probes per key","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":300,"Name":"number of output rows","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":301,"Name":"peak memory","Value":"234881024","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":303,"Name":"time in aggregation build","Value":"1215","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":304,"Name":"avg hash probes per key","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":306,"Name":"number of output rows","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":307,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"duration","Value":"2292","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":309,"Name":"sort time","Value":"34","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":310,"Name":"peak memory","Value":"167772160","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":311,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":315,"Name":"duration","Value":"2200","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":316,"Name":"sort time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":317,"Name":"peak memory","Value":"33685504","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":318,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":322,"Name":"internal.metrics.executorDeserializeTime","Value":122,"Internal":true,"Count Failed Values":true},{"ID":323,"Name":"internal.metrics.executorDeserializeCpuTime","Value":108467056,"Internal":true,"Count Failed Values":true},{"ID":324,"Name":"internal.metrics.executorRunTime","Value":16643,"Internal":true,"Count Failed Values":true},{"ID":325,"Name":"internal.metrics.executorCpuTime","Value":10380403555,"Internal":true,"Count Failed Values":true},{"ID":326,"Name":"internal.metrics.resultSize","Value":19084,"Internal":true,"Count Failed Values":true},{"ID":327,"Name":"internal.metrics.jvmGCTime","Value":156,"Internal":true,"Count Failed Values":true},{"ID":328,"Name":"internal.metrics.resultSerializationTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":331,"Name":"internal.metrics.peakExecutionMemory","Value":671219712,"Internal":true,"Count Failed Values":true},{"ID":333,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":334,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":6,"Internal":true,"Count Failed Values":true},{"ID":335,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":336,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":337,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":22264237,"Internal":true,"Count Failed Values":true},{"ID":338,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":339,"Name":"internal.metrics.shuffle.read.recordsRead","Value":1018324,"Internal":true,"Count Failed Values":true},{"ID":340,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":346,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":347,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":348,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.output.bytesWritten","Value":4796106,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.output.recordsWritten","Value":1017209,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":4,"Completion Time":1725742693918,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[146,2],[151,1],[148,1017209],[149,0],[147,4796106]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":1,"time":1725742693929,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":2,"rootExecutionId":0,"description":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.Snapshot.recordOperation(Snapshot.scala:75)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.Snapshot.recordDeltaOperation(Snapshot.scala:75)\norg.apache.spark.sql.delta.stats.DataSkippingReaderBase.filesForScan(DataSkippingReader.scala:874)\norg.apache.spark.sql.delta.stats.DataSkippingReaderBase.filesForScan$(DataSkippingReader.scala:871)\norg.apache.spark.sql.delta.Snapshot.filesForScan(Snapshot.scala:75)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles(OptimisticTransaction.scala:808)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles$(OptimisticTransaction.scala:807)\norg.apache.spark.sql.delta.OptimisticTransaction.filterFiles(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles(OptimisticTransaction.scala:804)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles$(OptimisticTransaction.scala:804)\norg.apache.spark.sql.delta.OptimisticTransaction.filterFiles(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.writeAndReturnCommitData(WriteIntoDelta.scala:307)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.$anonfun$run$1(WriteIntoDelta.scala:106)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.$anonfun$run$1$adapted(WriteIntoDelta.scala:101)","physicalPlanDescription":"== Physical Plan ==\n* Project (7)\n+- * SerializeFromObject (6)\n   +- * MapElements (5)\n      +- * DeserializeToObject (4)\n         +- * Project (3)\n            +- * Filter (2)\n               +- * Scan ExistingRDD (1)\n\n\n(1) Scan ExistingRDD [codegen id : 1]\nOutput [10]: [txn#1543, add#1544, remove#1545, metaData#1546, protocol#1547, cdc#1548, checkpointMetadata#1549, sidecar#1550, domainMetadata#1551, commitInfo#1552]\nArguments: [txn#1543, add#1544, remove#1545, metaData#1546, protocol#1547, cdc#1548, checkpointMetadata#1549, sidecar#1550, domainMetadata#1551, commitInfo#1552], MapPartitionsRDD[19] at $anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128, ExistingRDD, UnknownPartitioning(0)\n\n(2) Filter [codegen id : 1]\nInput [10]: [txn#1543, add#1544, remove#1545, metaData#1546, protocol#1547, cdc#1548, checkpointMetadata#1549, sidecar#1550, domainMetadata#1551, commitInfo#1552]\nCondition : isnotnull(add#1544)\n\n(3) Project [codegen id : 1]\nOutput [1]: [add#1544]\nInput [10]: [txn#1543, add#1544, remove#1545, metaData#1546, protocol#1547, cdc#1548, checkpointMetadata#1549, sidecar#1550, domainMetadata#1551, commitInfo#1552]\n\n(4) DeserializeToObject [codegen id : 1]\nInput [1]: [add#1544]\nArguments: newInstance(class scala.Tuple1), obj#1629: scala.Tuple1\n\n(5) MapElements [codegen id : 1]\nInput [1]: [obj#1629]\nArguments: org.apache.spark.sql.Dataset$$Lambda$4791/1434077550@5bc09794, obj#1630: org.apache.spark.sql.delta.actions.AddFile\n\n(6) SerializeFromObject [codegen id : 1]\nInput [1]: [obj#1630]\nArguments: [staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).path, true, false, true) AS path#1631, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).partitionValues) AS partitionValues#1632, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).size AS size#1633L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).modificationTime AS modificationTime#1634L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).dataChange AS dataChange#1635, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).tags) AS tags#1637, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).maxRowIndex)) AS deletionVector#1638, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).baseRowId) AS baseRowId#1639L, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).defaultRowCommitVersion) AS defaultRowCommitVersion#1640L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).clusteringProvider), true, false, true) AS clusteringProvider#1641]\n\n(7) Project [codegen id : 1]\nOutput [11]: [path#1631, partitionValues#1632, size#1633L, modificationTime#1634L, dataChange#1635, null AS stats#1654, tags#1637, deletionVector#1638, baseRowId#1639L, defaultRowCommitVersion#1640L, clusteringProvider#1641]\nInput [10]: [path#1631, partitionValues#1632, size#1633L, modificationTime#1634L, dataChange#1635, tags#1637, deletionVector#1638, baseRowId#1639L, defaultRowCommitVersion#1640L, clusteringProvider#1641]\n\n","sparkPlanInfo":{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [path#1631, partitionValues#1632, size#1633L, modificationTime#1634L, dataChange#1635, null AS stats#1654, tags#1637, deletionVector#1638, baseRowId#1639L, defaultRowCommitVersion#1640L, clusteringProvider#1641]","children":[{"nodeName":"SerializeFromObject","simpleString":"SerializeFromObject [staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).path, true, false, true) AS path#1631, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).partitionValues) AS partitionValues#1632, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).size AS size#1633L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).modificationTime AS modificationTime#1634L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).dataChange AS dataChange#1635, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).tags) AS tags#1637, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).maxRowIndex)) AS deletionVector#1638, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).baseRowId) AS baseRowId#1639L, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).defaultRowCommitVersion) AS defaultRowCommitVersion#1640L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).clusteringProvider), true, false, true) AS clusteringProvider#1641]","children":[{"nodeName":"MapElements","simpleString":"MapElements org.apache.spark.sql.Dataset$$Lambda$4791/1434077550@5bc09794, obj#1630: org.apache.spark.sql.delta.actions.AddFile","children":[{"nodeName":"DeserializeToObject","simpleString":"DeserializeToObject newInstance(class scala.Tuple1), obj#1629: scala.Tuple1","children":[{"nodeName":"Project","simpleString":"Project [add#1544]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(add#1544)","children":[{"nodeName":"Scan ExistingRDD","simpleString":"Scan ExistingRDD[txn#1543,add#1544,remove#1545,metaData#1546,protocol#1547,cdc#1548,checkpointMetadata#1549,sidecar#1550,domainMetadata#1551,commitInfo#1552]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":359,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":358,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":357,"metricType":"timing"}]},"time":1725742694570,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"SparkListenerJobStart","Job ID":5,"Submission Time":1725742694739,"Stage Infos":[],"Stage IDs":[],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"66\",\"name\":\"collect\"}","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.job.description":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerJobEnd","Job ID":5,"Completion Time":1725742694739,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":2,"time":1725742694740,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":3,"rootExecutionId":0,"description":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.$anonfun$updateAfterCommit$1(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly(SnapshotManagement.scala:78)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly$(SnapshotManagement.scala:75)\norg.apache.spark.sql.delta.DeltaLog.withSnapshotLockInterruptibly(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit$(SnapshotManagement.scala:1120)\norg.apache.spark.sql.delta.DeltaLog.updateAfterCommit(DeltaLog.scala:74)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit(OptimisticTransaction.scala:1941)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit$(OptimisticTransaction.scala:1902)\norg.apache.spark.sql.delta.OptimisticTransaction.doCommit(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.$anonfun$doCommitRetryIteratively$3(OptimisticTransaction.scala:1848)\nscala.collection.immutable.Range.foreach$mVc$sp(Range.scala:158)","physicalPlanDescription":"== Physical Plan ==\n* Project (3)\n+- * Filter (2)\n   +- Scan json  (1)\n\n\n(1) Scan json \nOutput [4]: [metaData#1700, protocol#1701, commitInfo#1702, version#1703L]\nBatched: false\nLocation: DeltaLogFileIndex [s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000000.json]\nReadSchema: struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(2) Filter [codegen id : 1]\nInput [4]: [metaData#1700, protocol#1701, commitInfo#1702, version#1703L]\nCondition : ((isnotnull(protocol#1701.minReaderVersion) OR isnotnull(metaData#1700.id)) OR (isnotnull(commitInfo#1702.inCommitTimestamp) AND (version#1703L = 0)))\n\n(3) Project [codegen id : 1]\nOutput [4]: [protocol#1701, metaData#1700, commitInfo#1702.inCommitTimestamp AS inCommitTimestamp#1708L, version#1703L]\nInput [4]: [metaData#1700, protocol#1701, commitInfo#1702, version#1703L]\n\n","sparkPlanInfo":{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [protocol#1701, metaData#1700, commitInfo#1702.inCommitTimestamp AS inCommitTimestamp#1708L, version#1703L]","children":[{"nodeName":"Filter","simpleString":"Filter ((isnotnull(protocol#1701.minReaderVersion) OR isnotnull(metaData#1700.id)) OR (isnotnull(commitInfo#1702.inCommitTimestamp) AND (version#1703L = 0)))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [metaData#1700,protocol#1701,commitInfo#1702,version#1703L] Batched: false, DataFilters: [((isnotnull(protocol#1701.minReaderVersion) OR isnotnull(metaData#1700.id)) OR isnotnull(commitI..., Format: JSON, Location: DeltaLogFileIndex(1 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/0000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,opt...","children":[],"metadata":{"Location":"DeltaLogFileIndex(1 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000000.json]","ReadSchema":"struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[((isnotnull(protocol#1701.minReaderVersion) OR isnotnull(metaData#1700.id)) OR isnotnull(commitInfo#1702.inCommitTimestamp))]"},"metrics":[{"name":"number of files read","accumulatorId":363,"metricType":"sum"},{"name":"dynamic partition pruning time","accumulatorId":367,"metricType":"timing"},{"name":"metadata time","accumulatorId":364,"metricType":"timing"},{"name":"size of files read","accumulatorId":365,"metricType":"size"},{"name":"number of output rows","accumulatorId":362,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":366,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":361,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":360,"metricType":"timing"}]},"time":1725742700065,"modifiedConfigs":{"spark.databricks.delta.lastCommitVersionInSession":"0","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_7_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":37681,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[363,1],[367,0],[364,0],[365,7088],[366,1]]}
{"Event":"SparkListenerJobStart","Job ID":6,"Submission Time":1725742700133,"Stage Infos":[{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":1,"RDD Info":[{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"76\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"FileScanRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"71\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.$anonfun$updateAfterCommit$1(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly(SnapshotManagement.scala:78)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly$(SnapshotManagement.scala:75)\norg.apache.spark.sql.delta.DeltaLog.withSnapshotLockInterruptibly(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit$(SnapshotManagement.scala:1120)\norg.apache.spark.sql.delta.DeltaLog.updateAfterCommit(DeltaLog.scala:74)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit(OptimisticTransaction.scala:1941)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit$(OptimisticTransaction.scala:1902)\norg.apache.spark.sql.delta.OptimisticTransaction.doCommit(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.$anonfun$doCommitRetryIteratively$3(OptimisticTransaction.scala:1848)\nscala.collection.immutable.Range.foreach$mVc$sp(Range.scala:158)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[7],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.databricks.delta.lastCommitVersionInSession":"0","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"3","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"77\",\"name\":\"collect\"}","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":1,"RDD Info":[{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"76\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"FileScanRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"71\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.$anonfun$updateAfterCommit$1(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly(SnapshotManagement.scala:78)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly$(SnapshotManagement.scala:75)\norg.apache.spark.sql.delta.DeltaLog.withSnapshotLockInterruptibly(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit$(SnapshotManagement.scala:1120)\norg.apache.spark.sql.delta.DeltaLog.updateAfterCommit(DeltaLog.scala:74)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit(OptimisticTransaction.scala:1941)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit$(OptimisticTransaction.scala:1902)\norg.apache.spark.sql.delta.OptimisticTransaction.doCommit(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.$anonfun$doCommitRetryIteratively$3(OptimisticTransaction.scala:1848)\nscala.collection.immutable.Range.foreach$mVc$sp(Range.scala:158)","Submission Time":1725742700134,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.databricks.delta.lastCommitVersionInSession":"0","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"3","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"77\",\"name\":\"collect\"}","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_8_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":17574,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":7,"Stage Attempt ID":0,"Task Info":{"Task ID":7,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742700139,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":7,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":7,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742700139,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725742700697,"Failed":false,"Killed":false,"Accumulables":[{"ID":360,"Name":"duration","Update":"527","Value":"527","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":361,"Name":"number of output rows","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":362,"Name":"number of output rows","Update":"5","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":368,"Name":"internal.metrics.executorDeserializeTime","Update":9,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9535401,"Value":9535401,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.executorRunTime","Update":545,"Value":545,"Internal":true,"Count Failed Values":true},{"ID":371,"Name":"internal.metrics.executorCpuTime","Update":88402536,"Value":88402536,"Internal":true,"Count Failed Values":true},{"ID":372,"Name":"internal.metrics.resultSize","Update":2042,"Value":2042,"Internal":true,"Count Failed Values":true},{"ID":399,"Name":"internal.metrics.input.bytesRead","Update":7088,"Value":7088,"Internal":true,"Count Failed Values":true},{"ID":400,"Name":"internal.metrics.input.recordsRead","Update":5,"Value":5,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":9,"Executor Deserialize CPU Time":9535401,"Executor Run Time":545,"Executor CPU Time":88402536,"Peak Execution Memory":0,"Result Size":2042,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":7088,"Records Read":5},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":1,"RDD Info":[{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"76\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"FileScanRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"71\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.$anonfun$updateAfterCommit$1(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly(SnapshotManagement.scala:78)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly$(SnapshotManagement.scala:75)\norg.apache.spark.sql.delta.DeltaLog.withSnapshotLockInterruptibly(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit$(SnapshotManagement.scala:1120)\norg.apache.spark.sql.delta.DeltaLog.updateAfterCommit(DeltaLog.scala:74)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit(OptimisticTransaction.scala:1941)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit$(OptimisticTransaction.scala:1902)\norg.apache.spark.sql.delta.OptimisticTransaction.doCommit(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.$anonfun$doCommitRetryIteratively$3(OptimisticTransaction.scala:1848)\nscala.collection.immutable.Range.foreach$mVc$sp(Range.scala:158)","Submission Time":1725742700134,"Completion Time":1725742700698,"Accumulables":[{"ID":360,"Name":"duration","Value":"527","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":361,"Name":"number of output rows","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":362,"Name":"number of output rows","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":368,"Name":"internal.metrics.executorDeserializeTime","Value":9,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.executorDeserializeCpuTime","Value":9535401,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.executorRunTime","Value":545,"Internal":true,"Count Failed Values":true},{"ID":371,"Name":"internal.metrics.executorCpuTime","Value":88402536,"Internal":true,"Count Failed Values":true},{"ID":372,"Name":"internal.metrics.resultSize","Value":2042,"Internal":true,"Count Failed Values":true},{"ID":399,"Name":"internal.metrics.input.bytesRead","Value":7088,"Internal":true,"Count Failed Values":true},{"ID":400,"Name":"internal.metrics.input.recordsRead","Value":5,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":6,"Completion Time":1725742700698,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":3,"time":1725742700726,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":0,"time":1725742700773,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":4,"rootExecutionId":4,"description":"createOrReplaceTempView at StageMetrics.scala:227","details":"org.apache.spark.sql.Dataset.createOrReplaceTempView(Dataset.scala:3910)\nch.cern.sparkmeasure.StageMetrics.createStageMetricsDF(StageMetrics.scala:227)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","physicalPlanDescription":"== Physical Plan ==\nExecute CreateViewCommand (1)\n   +- CreateViewCommand (2)\n         +- LocalRelation (3)\n\n\n(1) Execute CreateViewCommand\nOutput: []\n\n(2) CreateViewCommand\nArguments: `PerfStageMetrics`, false, true, LocalTempView, true\n\n(3) LocalRelation\nArguments: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\n\n","sparkPlanInfo":{"nodeName":"Execute CreateViewCommand","simpleString":"Execute CreateViewCommand","children":[],"metadata":{},"metrics":[]},"time":1725742700861,"modifiedConfigs":{"spark.databricks.delta.lastCommitVersionInSession":"0","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":4,"time":1725742700874,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":5,"rootExecutionId":5,"description":"json at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (6)\n+- Execute InsertIntoHadoopFsRelationCommand (5)\n   +- WriteFiles (4)\n      +- Sort (3)\n         +- Exchange (2)\n            +- LocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\n\n(2) Exchange\nInput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: SinglePartition, REPARTITION_BY_NUM, [plan_id=275]\n\n(3) Sort\nInput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: [jobId#1797 ASC NULLS FIRST, stageId#1799 ASC NULLS FIRST], true, 0\n\n(4) WriteFiles\nInput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\n\n(5) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics], Overwrite, [jobId, jobGroup, stageId, name, submissionTime, completionTime, stageDuration, numTasks, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleFetchWaitTime, shuffleTotalBytesRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleRecordsRead, shuffleWriteTime, shuffleBytesWritten, shuffleRecordsWritten]\n\n(6) AdaptiveSparkPlan\nOutput: []\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Execute InsertIntoHadoopFsRelationCommand","simpleString":"Execute InsertIntoHadoopFsRelationCommand file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics], Overwrite, [jobId, jobGroup, stageId, name, submissionTime, completionTime, stageDuration, numTasks, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleFetchWaitTime, shuffleTotalBytesRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleRecordsRead, shuffleWriteTime, shuffleBytesWritten, shuffleRecordsWritten]","children":[{"nodeName":"WriteFiles","simpleString":"WriteFiles","children":[{"nodeName":"Sort","simpleString":"Sort [jobId#1797 ASC NULLS FIRST, stageId#1799 ASC NULLS FIRST], true, 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, REPARTITION_BY_NUM, [plan_id=275]","children":[{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":434,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":432,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":426,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":433,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":427,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":424,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":421,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":430,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":423,"metricType":"sum"},{"name":"records read","accumulatorId":420,"metricType":"sum"},{"name":"local bytes read","accumulatorId":418,"metricType":"size"},{"name":"fetch wait time","accumulatorId":419,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":416,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":422,"metricType":"sum"},{"name":"local blocks read","accumulatorId":415,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":425,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":414,"metricType":"sum"},{"name":"data size","accumulatorId":412,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":428,"metricType":"size"},{"name":"number of partitions","accumulatorId":413,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":429,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":417,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":431,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":409,"metricType":"timing"},{"name":"peak memory","accumulatorId":410,"metricType":"size"},{"name":"spill size","accumulatorId":411,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"task commit time","accumulatorId":407,"metricType":"timing"},{"name":"number of written files","accumulatorId":403,"metricType":"sum"},{"name":"job commit time","accumulatorId":408,"metricType":"timing"},{"name":"number of output rows","accumulatorId":405,"metricType":"sum"},{"name":"number of dynamic part","accumulatorId":406,"metricType":"sum"},{"name":"written output","accumulatorId":404,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1725742700936,"modifiedConfigs":{"spark.databricks.delta.lastCommitVersionInSession":"0","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":5,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Current Plan ==\n   Execute InsertIntoHadoopFsRelationCommand (6)\n   +- WriteFiles (5)\n      +- Sort (4)\n         +- ShuffleQueryStage (3)\n            +- Exchange (2)\n               +- LocalTableScan (1)\n+- == Initial Plan ==\n   Execute InsertIntoHadoopFsRelationCommand (9)\n   +- WriteFiles (8)\n      +- Sort (7)\n         +- Exchange (2)\n            +- LocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\n\n(2) Exchange\nInput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: SinglePartition, REPARTITION_BY_NUM, [plan_id=275]\n\n(3) ShuffleQueryStage\nOutput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: 0\n\n(4) Sort\nInput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: [jobId#1797 ASC NULLS FIRST, stageId#1799 ASC NULLS FIRST], true, 0\n\n(5) WriteFiles\nInput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\n\n(6) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics], Overwrite, [jobId, jobGroup, stageId, name, submissionTime, completionTime, stageDuration, numTasks, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleFetchWaitTime, shuffleTotalBytesRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleRecordsRead, shuffleWriteTime, shuffleBytesWritten, shuffleRecordsWritten]\n\n(7) Sort\nInput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: [jobId#1797 ASC NULLS FIRST, stageId#1799 ASC NULLS FIRST], true, 0\n\n(8) WriteFiles\nInput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\n\n(9) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics], Overwrite, [jobId, jobGroup, stageId, name, submissionTime, completionTime, stageDuration, numTasks, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleFetchWaitTime, shuffleTotalBytesRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleRecordsRead, shuffleWriteTime, shuffleBytesWritten, shuffleRecordsWritten]\n\n(10) AdaptiveSparkPlan\nOutput: []\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Execute InsertIntoHadoopFsRelationCommand","simpleString":"Execute InsertIntoHadoopFsRelationCommand file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics], Overwrite, [jobId, jobGroup, stageId, name, submissionTime, completionTime, stageDuration, numTasks, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleFetchWaitTime, shuffleTotalBytesRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleRecordsRead, shuffleWriteTime, shuffleBytesWritten, shuffleRecordsWritten]","children":[{"nodeName":"WriteFiles","simpleString":"WriteFiles","children":[{"nodeName":"Sort","simpleString":"Sort [jobId#1797 ASC NULLS FIRST, stageId#1799 ASC NULLS FIRST], true, 0","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, REPARTITION_BY_NUM, [plan_id=275]","children":[{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":434,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":432,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":426,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":433,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":427,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":424,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":421,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":430,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":423,"metricType":"sum"},{"name":"records read","accumulatorId":420,"metricType":"sum"},{"name":"local bytes read","accumulatorId":418,"metricType":"size"},{"name":"fetch wait time","accumulatorId":419,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":416,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":422,"metricType":"sum"},{"name":"local blocks read","accumulatorId":415,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":425,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":414,"metricType":"sum"},{"name":"data size","accumulatorId":412,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":428,"metricType":"size"},{"name":"number of partitions","accumulatorId":413,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":429,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":417,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":431,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":435,"metricType":"timing"},{"name":"peak memory","accumulatorId":436,"metricType":"size"},{"name":"spill size","accumulatorId":437,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"task commit time","accumulatorId":407,"metricType":"timing"},{"name":"number of written files","accumulatorId":403,"metricType":"sum"},{"name":"job commit time","accumulatorId":408,"metricType":"timing"},{"name":"number of output rows","accumulatorId":405,"metricType":"sum"},{"name":"number of dynamic part","accumulatorId":406,"metricType":"sum"},{"name":"written output","accumulatorId":404,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[413,1]]}
{"Event":"SparkListenerJobStart","Job ID":7,"Submission Time":1725742700958,"Stage Infos":[{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"Exchange\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"83\",\"name\":\"LocalTableScan\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"83\",\"name\":\"LocalTableScan\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[8],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.databricks.delta.lastCommitVersionInSession":"0","spark.executor.cores":"4","spark.sql.execution.root.id":"5","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"5","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"82\",\"name\":\"Exchange\"}","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"Exchange\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"83\",\"name\":\"LocalTableScan\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"83\",\"name\":\"LocalTableScan\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742700959,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.databricks.delta.lastCommitVersionInSession":"0","spark.executor.cores":"4","spark.sql.execution.root.id":"5","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"5","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"82\",\"name\":\"Exchange\"}","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_9_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":5178,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":8,"Stage Attempt ID":0,"Task Info":{"Task ID":8,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742700967,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":8,"Stage Attempt ID":0,"Task Info":{"Task ID":9,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725742700967,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":8,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":9,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725742700967,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725742700979,"Failed":false,"Killed":false,"Accumulables":[{"ID":412,"Name":"data size","Update":"992","Value":"992","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":431,"Name":"shuffle bytes written","Update":"466","Value":"466","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":432,"Name":"shuffle records written","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":433,"Name":"shuffle write time","Update":"383678","Value":"383678","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"number of output rows","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":438,"Name":"internal.metrics.executorDeserializeTime","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":439,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5405445,"Value":5405445,"Internal":true,"Count Failed Values":true},{"ID":440,"Name":"internal.metrics.executorRunTime","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":441,"Name":"internal.metrics.executorCpuTime","Update":2639549,"Value":2639549,"Internal":true,"Count Failed Values":true},{"ID":442,"Name":"internal.metrics.resultSize","Update":1561,"Value":1561,"Internal":true,"Count Failed Values":true},{"ID":466,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":466,"Value":466,"Internal":true,"Count Failed Values":true},{"ID":467,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":468,"Name":"internal.metrics.shuffle.write.writeTime","Update":383678,"Value":383678,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":6,"Executor Deserialize CPU Time":5405445,"Executor Run Time":2,"Executor CPU Time":2639549,"Peak Execution Memory":0,"Result Size":1561,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":466,"Shuffle Write Time":383678,"Shuffle Records Written":3},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":8,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":8,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742700967,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725742700981,"Failed":false,"Killed":false,"Accumulables":[{"ID":412,"Name":"data size","Update":"960","Value":"1952","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":431,"Name":"shuffle bytes written","Update":"321","Value":"787","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":432,"Name":"shuffle records written","Update":"3","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":433,"Name":"shuffle write time","Update":"287816","Value":"671494","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"number of output rows","Update":"3","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":438,"Name":"internal.metrics.executorDeserializeTime","Update":9,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":439,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6924451,"Value":12329896,"Internal":true,"Count Failed Values":true},{"ID":440,"Name":"internal.metrics.executorRunTime","Update":2,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":441,"Name":"internal.metrics.executorCpuTime","Update":1718031,"Value":4357580,"Internal":true,"Count Failed Values":true},{"ID":442,"Name":"internal.metrics.resultSize","Update":1561,"Value":3122,"Internal":true,"Count Failed Values":true},{"ID":466,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":321,"Value":787,"Internal":true,"Count Failed Values":true},{"ID":467,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":3,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":468,"Name":"internal.metrics.shuffle.write.writeTime","Update":287816,"Value":671494,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":9,"Executor Deserialize CPU Time":6924451,"Executor Run Time":2,"Executor CPU Time":1718031,"Peak Execution Memory":0,"Result Size":1561,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":321,"Shuffle Write Time":287816,"Shuffle Records Written":3},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"Exchange\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"83\",\"name\":\"LocalTableScan\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"83\",\"name\":\"LocalTableScan\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742700959,"Completion Time":1725742700981,"Accumulables":[{"ID":412,"Name":"data size","Value":"1952","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":431,"Name":"shuffle bytes written","Value":"787","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":432,"Name":"shuffle records written","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":433,"Name":"shuffle write time","Value":"671494","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":438,"Name":"internal.metrics.executorDeserializeTime","Value":15,"Internal":true,"Count Failed Values":true},{"ID":439,"Name":"internal.metrics.executorDeserializeCpuTime","Value":12329896,"Internal":true,"Count Failed Values":true},{"ID":440,"Name":"internal.metrics.executorRunTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":441,"Name":"internal.metrics.executorCpuTime","Value":4357580,"Internal":true,"Count Failed Values":true},{"ID":442,"Name":"internal.metrics.resultSize","Value":3122,"Internal":true,"Count Failed Values":true},{"ID":466,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":787,"Internal":true,"Count Failed Values":true},{"ID":467,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":6,"Internal":true,"Count Failed Values":true},{"ID":468,"Name":"internal.metrics.shuffle.write.writeTime","Value":671494,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":7,"Completion Time":1725742700982,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":5,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Final Plan ==\n   Execute InsertIntoHadoopFsRelationCommand (6)\n   +- WriteFiles (5)\n      +- * Sort (4)\n         +- ShuffleQueryStage (3), Statistics(sizeInBytes=1952.0 B, rowCount=6)\n            +- Exchange (2)\n               +- LocalTableScan (1)\n+- == Initial Plan ==\n   Execute InsertIntoHadoopFsRelationCommand (9)\n   +- WriteFiles (8)\n      +- Sort (7)\n         +- Exchange (2)\n            +- LocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\n\n(2) Exchange\nInput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: SinglePartition, REPARTITION_BY_NUM, [plan_id=275]\n\n(3) ShuffleQueryStage\nOutput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: 0\n\n(4) Sort [codegen id : 1]\nInput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: [jobId#1797 ASC NULLS FIRST, stageId#1799 ASC NULLS FIRST], true, 0\n\n(5) WriteFiles\nInput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\n\n(6) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics], Overwrite, [jobId, jobGroup, stageId, name, submissionTime, completionTime, stageDuration, numTasks, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleFetchWaitTime, shuffleTotalBytesRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleRecordsRead, shuffleWriteTime, shuffleBytesWritten, shuffleRecordsWritten]\n\n(7) Sort\nInput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: [jobId#1797 ASC NULLS FIRST, stageId#1799 ASC NULLS FIRST], true, 0\n\n(8) WriteFiles\nInput [34]: [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\n\n(9) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics], Overwrite, [jobId, jobGroup, stageId, name, submissionTime, completionTime, stageDuration, numTasks, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleFetchWaitTime, shuffleTotalBytesRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleRecordsRead, shuffleWriteTime, shuffleBytesWritten, shuffleRecordsWritten]\n\n(10) AdaptiveSparkPlan\nOutput: []\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"Execute InsertIntoHadoopFsRelationCommand","simpleString":"Execute InsertIntoHadoopFsRelationCommand file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics], Overwrite, [jobId, jobGroup, stageId, name, submissionTime, completionTime, stageDuration, numTasks, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleFetchWaitTime, shuffleTotalBytesRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleRecordsRead, shuffleWriteTime, shuffleBytesWritten, shuffleRecordsWritten]","children":[{"nodeName":"WriteFiles","simpleString":"WriteFiles","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Sort","simpleString":"Sort [jobId#1797 ASC NULLS FIRST, stageId#1799 ASC NULLS FIRST], true, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, REPARTITION_BY_NUM, [plan_id=275]","children":[{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [jobId#1797, jobGroup#1798, stageId#1799, name#1800, submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":434,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":432,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":426,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":433,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":427,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":424,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":421,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":430,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":423,"metricType":"sum"},{"name":"records read","accumulatorId":420,"metricType":"sum"},{"name":"local bytes read","accumulatorId":418,"metricType":"size"},{"name":"fetch wait time","accumulatorId":419,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":416,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":422,"metricType":"sum"},{"name":"local blocks read","accumulatorId":415,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":425,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":414,"metricType":"sum"},{"name":"data size","accumulatorId":412,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":428,"metricType":"size"},{"name":"number of partitions","accumulatorId":413,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":429,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":417,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":431,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":480,"metricType":"timing"},{"name":"peak memory","accumulatorId":481,"metricType":"size"},{"name":"spill size","accumulatorId":482,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":479,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"task commit time","accumulatorId":477,"metricType":"timing"},{"name":"number of written files","accumulatorId":473,"metricType":"sum"},{"name":"job commit time","accumulatorId":478,"metricType":"timing"},{"name":"number of output rows","accumulatorId":475,"metricType":"sum"},{"name":"number of dynamic part","accumulatorId":476,"metricType":"sum"},{"name":"written output","accumulatorId":474,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":8,"Submission Time":1725742701029,"Stage Infos":[{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"Exchange\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"83\",\"name\":\"LocalTableScan\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"83\",\"name\":\"LocalTableScan\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"84\",\"name\":\"WriteFiles\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"85\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"89\",\"name\":\"Exchange\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[9],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[9,10],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.databricks.delta.lastCommitVersionInSession":"0","spark.executor.cores":"4","spark.sql.execution.root.id":"5","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"5","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"84\",\"name\":\"WriteFiles\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"85\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"89\",\"name\":\"Exchange\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[9],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742701030,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.databricks.delta.lastCommitVersionInSession":"0","spark.executor.cores":"4","spark.sql.execution.root.id":"5","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"5","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_10_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":90218,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":10,"Stage Attempt ID":0,"Task Info":{"Task ID":10,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742701055,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":10,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":10,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742701055,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725742701130,"Failed":false,"Killed":false,"Accumulables":[{"ID":415,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":418,"Name":"local bytes read","Update":"787","Value":"787","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":419,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":420,"Name":"records read","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":477,"Name":"task commit time","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":479,"Name":"duration","Update":"39","Value":"39","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":480,"Name":"sort time","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":481,"Name":"peak memory","Update":"16842752","Value":"16842752","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":482,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":483,"Name":"internal.metrics.executorDeserializeTime","Update":14,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":484,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14534217,"Value":14534217,"Internal":true,"Count Failed Values":true},{"ID":485,"Name":"internal.metrics.executorRunTime","Update":57,"Value":57,"Internal":true,"Count Failed Values":true},{"ID":486,"Name":"internal.metrics.executorCpuTime","Update":49424055,"Value":49424055,"Internal":true,"Count Failed Values":true},{"ID":487,"Name":"internal.metrics.resultSize","Update":4150,"Value":4150,"Internal":true,"Count Failed Values":true},{"ID":492,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":16842752,"Internal":true,"Count Failed Values":true},{"ID":494,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":495,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":496,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":497,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":498,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":787,"Value":787,"Internal":true,"Count Failed Values":true},{"ID":499,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":500,"Name":"internal.metrics.shuffle.read.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":501,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":502,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":503,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":504,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":505,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":506,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":507,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":508,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":509,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":510,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":516,"Name":"internal.metrics.output.bytesWritten","Update":4869,"Value":4869,"Internal":true,"Count Failed Values":true},{"ID":517,"Name":"internal.metrics.output.recordsWritten","Update":6,"Value":6,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":14,"Executor Deserialize CPU Time":14534217,"Executor Run Time":57,"Executor CPU Time":49424055,"Peak Execution Memory":16842752,"Result Size":4150,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":787,"Total Records Read":6,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":4869,"Records Written":6},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"84\",\"name\":\"WriteFiles\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"85\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"89\",\"name\":\"Exchange\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[9],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742701030,"Completion Time":1725742701130,"Accumulables":[{"ID":415,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":418,"Name":"local bytes read","Value":"787","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":419,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":420,"Name":"records read","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":477,"Name":"task commit time","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":479,"Name":"duration","Value":"39","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":480,"Name":"sort time","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":481,"Name":"peak memory","Value":"16842752","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":482,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":483,"Name":"internal.metrics.executorDeserializeTime","Value":14,"Internal":true,"Count Failed Values":true},{"ID":484,"Name":"internal.metrics.executorDeserializeCpuTime","Value":14534217,"Internal":true,"Count Failed Values":true},{"ID":485,"Name":"internal.metrics.executorRunTime","Value":57,"Internal":true,"Count Failed Values":true},{"ID":486,"Name":"internal.metrics.executorCpuTime","Value":49424055,"Internal":true,"Count Failed Values":true},{"ID":487,"Name":"internal.metrics.resultSize","Value":4150,"Internal":true,"Count Failed Values":true},{"ID":492,"Name":"internal.metrics.peakExecutionMemory","Value":16842752,"Internal":true,"Count Failed Values":true},{"ID":494,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":495,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":2,"Internal":true,"Count Failed Values":true},{"ID":496,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":497,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":498,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":787,"Internal":true,"Count Failed Values":true},{"ID":499,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":500,"Name":"internal.metrics.shuffle.read.recordsRead","Value":6,"Internal":true,"Count Failed Values":true},{"ID":501,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":502,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":503,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":504,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":505,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":506,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":507,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":508,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":509,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":510,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":516,"Name":"internal.metrics.output.bytesWritten","Value":4869,"Internal":true,"Count Failed Values":true},{"ID":517,"Name":"internal.metrics.output.recordsWritten","Value":6,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":8,"Completion Time":1725742701131,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[473,1],[478,9],[475,6],[476,0],[474,4869]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":5,"time":1725742701145,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":6,"rootExecutionId":6,"description":"json at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (7)\n+- Execute InsertIntoHadoopFsRelationCommand (6)\n   +- WriteFiles (5)\n      +- HashAggregate (4)\n         +- Exchange (3)\n            +- HashAggregate (2)\n               +- LocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [30]: [submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: [submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\n\n(2) HashAggregate\nInput [30]: [submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nKeys: []\nFunctions [31]: [partial_count(1), partial_sum(numTasks#1804), partial_max(completionTime#1802L), partial_min(submissionTime#1801L), partial_sum(stageDuration#1803L), partial_sum(executorRunTime#1805L), partial_sum(executorCpuTime#1806L), partial_sum(executorDeserializeTime#1807L), partial_sum(executorDeserializeCpuTime#1808L), partial_sum(resultSerializationTime#1809L), partial_sum(jvmGCTime#1810L), partial_sum(shuffleFetchWaitTime#1819L), partial_sum(shuffleWriteTime#1828L), partial_max(resultSize#1811L), partial_sum(diskBytesSpilled#1812L), partial_sum(memoryBytesSpilled#1813L), partial_max(peakExecutionMemory#1814L), partial_sum(recordsRead#1815L), partial_sum(bytesRead#1816L), partial_sum(recordsWritten#1817L), partial_sum(bytesWritten#1818L), partial_sum(shuffleRecordsRead#1827L), partial_sum(shuffleTotalBlocksFetched#1821L), partial_sum(shuffleLocalBlocksFetched#1822L), partial_sum(shuffleRemoteBlocksFetched#1823L), partial_sum(shuffleTotalBytesRead#1820L), partial_sum(shuffleLocalBytesRead#1824L), partial_sum(shuffleRemoteBytesRead#1825L), partial_sum(shuffleRemoteBytesReadToDisk#1826L), partial_sum(shuffleBytesWritten#1829L), partial_sum(shuffleRecordsWritten#1830L)]\nAggregate Attributes [31]: [count#2055L, sum#2056L, max#2057L, min#2058L, sum#2059L, sum#2060L, sum#2061L, sum#2062L, sum#2063L, sum#2064L, sum#2065L, sum#2066L, sum#2067L, max#2068L, sum#2069L, sum#2070L, max#2071L, sum#2072L, sum#2073L, sum#2074L, sum#2075L, sum#2076L, sum#2077L, sum#2078L, sum#2079L, sum#2080L, sum#2081L, sum#2082L, sum#2083L, sum#2084L, sum#2085L]\nResults [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\n\n(3) Exchange\nInput [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=321]\n\n(4) HashAggregate\nInput [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\nKeys: []\nFunctions [31]: [count(1), sum(numTasks#1804), max(completionTime#1802L), min(submissionTime#1801L), sum(stageDuration#1803L), sum(executorRunTime#1805L), sum(executorCpuTime#1806L), sum(executorDeserializeTime#1807L), sum(executorDeserializeCpuTime#1808L), sum(resultSerializationTime#1809L), sum(jvmGCTime#1810L), sum(shuffleFetchWaitTime#1819L), sum(shuffleWriteTime#1828L), max(resultSize#1811L), sum(diskBytesSpilled#1812L), sum(memoryBytesSpilled#1813L), max(peakExecutionMemory#1814L), sum(recordsRead#1815L), sum(bytesRead#1816L), sum(recordsWritten#1817L), sum(bytesWritten#1818L), sum(shuffleRecordsRead#1827L), sum(shuffleTotalBlocksFetched#1821L), sum(shuffleLocalBlocksFetched#1822L), sum(shuffleRemoteBlocksFetched#1823L), sum(shuffleTotalBytesRead#1820L), sum(shuffleLocalBytesRead#1824L), sum(shuffleRemoteBytesRead#1825L), sum(shuffleRemoteBytesReadToDisk#1826L), sum(shuffleBytesWritten#1829L), sum(shuffleRecordsWritten#1830L)]\nAggregate Attributes [31]: [count(1)#1964L, sum(numTasks#1804)#1965L, max(completionTime#1802L)#1966L, min(submissionTime#1801L)#1967L, sum(stageDuration#1803L)#1968L, sum(executorRunTime#1805L)#1969L, sum(executorCpuTime#1806L)#1970L, sum(executorDeserializeTime#1807L)#1971L, sum(executorDeserializeCpuTime#1808L)#1972L, sum(resultSerializationTime#1809L)#1973L, sum(jvmGCTime#1810L)#1974L, sum(shuffleFetchWaitTime#1819L)#1975L, sum(shuffleWriteTime#1828L)#1976L, max(resultSize#1811L)#1977L, sum(diskBytesSpilled#1812L)#1978L, sum(memoryBytesSpilled#1813L)#1979L, max(peakExecutionMemory#1814L)#1980L, sum(recordsRead#1815L)#1981L, sum(bytesRead#1816L)#1982L, sum(recordsWritten#1817L)#1983L, sum(bytesWritten#1818L)#1984L, sum(shuffleRecordsRead#1827L)#1985L, sum(shuffleTotalBlocksFetched#1821L)#1986L, sum(shuffleLocalBlocksFetched#1822L)#1987L, sum(shuffleRemoteBlocksFetched#1823L)#1988L, sum(shuffleTotalBytesRead#1820L)#1989L, sum(shuffleLocalBytesRead#1824L)#1990L, sum(shuffleRemoteBytesRead#1825L)#1991L, sum(shuffleRemoteBytesReadToDisk#1826L)#1992L, sum(shuffleBytesWritten#1829L)#1993L, sum(shuffleRecordsWritten#1830L)#1994L]\nResults [30]: [count(1)#1964L AS numStages#1934L, sum(numTasks#1804)#1965L AS numTasks#1935L, (max(completionTime#1802L)#1966L - min(submissionTime#1801L)#1967L) AS elapsedTime#1936L, sum(stageDuration#1803L)#1968L AS stageDuration#1937L, sum(executorRunTime#1805L)#1969L AS executorRunTime#1938L, sum(executorCpuTime#1806L)#1970L AS executorCpuTime#1939L, sum(executorDeserializeTime#1807L)#1971L AS executorDeserializeTime#1940L, sum(executorDeserializeCpuTime#1808L)#1972L AS executorDeserializeCpuTime#1941L, sum(resultSerializationTime#1809L)#1973L AS resultSerializationTime#1942L, sum(jvmGCTime#1810L)#1974L AS jvmGCTime#1943L, sum(shuffleFetchWaitTime#1819L)#1975L AS shuffleFetchWaitTime#1944L, sum(shuffleWriteTime#1828L)#1976L AS shuffleWriteTime#1945L, max(resultSize#1811L)#1977L AS resultSize#1946L, sum(diskBytesSpilled#1812L)#1978L AS diskBytesSpilled#1947L, sum(memoryBytesSpilled#1813L)#1979L AS memoryBytesSpilled#1948L, max(peakExecutionMemory#1814L)#1980L AS peakExecutionMemory#1949L, sum(recordsRead#1815L)#1981L AS recordsRead#1950L, sum(bytesRead#1816L)#1982L AS bytesRead#1951L, sum(recordsWritten#1817L)#1983L AS recordsWritten#1952L, sum(bytesWritten#1818L)#1984L AS bytesWritten#1953L, sum(shuffleRecordsRead#1827L)#1985L AS shuffleRecordsRead#1954L, sum(shuffleTotalBlocksFetched#1821L)#1986L AS shuffleTotalBlocksFetched#1955L, sum(shuffleLocalBlocksFetched#1822L)#1987L AS shuffleLocalBlocksFetched#1956L, sum(shuffleRemoteBlocksFetched#1823L)#1988L AS shuffleRemoteBlocksFetched#1957L, sum(shuffleTotalBytesRead#1820L)#1989L AS shuffleTotalBytesRead#1958L, sum(shuffleLocalBytesRead#1824L)#1990L AS shuffleLocalBytesRead#1959L, sum(shuffleRemoteBytesRead#1825L)#1991L AS shuffleRemoteBytesRead#1960L, sum(shuffleRemoteBytesReadToDisk#1826L)#1992L AS shuffleRemoteBytesReadToDisk#1961L, sum(shuffleBytesWritten#1829L)#1993L AS shuffleBytesWritten#1962L, sum(shuffleRecordsWritten#1830L)#1994L AS shuffleRecordsWritten#1963L]\n\n(5) WriteFiles\nInput [30]: [numStages#1934L, numTasks#1935L, elapsedTime#1936L, stageDuration#1937L, executorRunTime#1938L, executorCpuTime#1939L, executorDeserializeTime#1940L, executorDeserializeCpuTime#1941L, resultSerializationTime#1942L, jvmGCTime#1943L, shuffleFetchWaitTime#1944L, shuffleWriteTime#1945L, resultSize#1946L, diskBytesSpilled#1947L, memoryBytesSpilled#1948L, peakExecutionMemory#1949L, recordsRead#1950L, bytesRead#1951L, recordsWritten#1952L, bytesWritten#1953L, shuffleRecordsRead#1954L, shuffleTotalBlocksFetched#1955L, shuffleLocalBlocksFetched#1956L, shuffleRemoteBlocksFetched#1957L, shuffleTotalBytesRead#1958L, shuffleLocalBytesRead#1959L, shuffleRemoteBytesRead#1960L, shuffleRemoteBytesReadToDisk#1961L, shuffleBytesWritten#1962L, shuffleRecordsWritten#1963L]\n\n(6) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics_agg, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics_agg], Overwrite, [numStages, numTasks, elapsedTime, stageDuration, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, shuffleFetchWaitTime, shuffleWriteTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleRecordsRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleTotalBytesRead, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleBytesWritten, shuffleRecordsWritten]\n\n(7) AdaptiveSparkPlan\nOutput: []\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Execute InsertIntoHadoopFsRelationCommand","simpleString":"Execute InsertIntoHadoopFsRelationCommand file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics_agg, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics_agg], Overwrite, [numStages, numTasks, elapsedTime, stageDuration, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, shuffleFetchWaitTime, shuffleWriteTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleRecordsRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleTotalBytesRead, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleBytesWritten, shuffleRecordsWritten]","children":[{"nodeName":"WriteFiles","simpleString":"WriteFiles","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1), sum(numTasks#1804), max(completionTime#1802L), min(submissionTime#1801L), sum(stageDuration#1803L), sum(executorRunTime#1805L), sum(executorCpuTime#1806L), sum(executorDeserializeTime#1807L), sum(executorDeserializeCpuTime#1808L), sum(resultSerializationTime#1809L), sum(jvmGCTime#1810L), sum(shuffleFetchWaitTime#1819L), sum(shuffleWriteTime#1828L), max(resultSize#1811L), sum(diskBytesSpilled#1812L), sum(memoryBytesSpilled#1813L), max(peakExecutionMemory#1814L), sum(recordsRead#1815L), sum(bytesRead#1816L), sum(recordsWritten#1817L), sum(bytesWritten#1818L), sum(shuffleRecordsRead#1827L), sum(shuffleTotalBlocksFetched#1821L), sum(shuffleLocalBlocksFetched#1822L), sum(shuffleRemoteBlocksFetched#1823L), sum(shuffleTotalBytesRead#1820L), sum(shuffleLocalBytesRead#1824L), sum(shuffleRemoteBytesRead#1825L), sum(shuffleRemoteBytesReadToDisk#1826L), sum(shuffleBytesWritten#1829L), sum(shuffleRecordsWritten#1830L)])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=321]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1), partial_sum(numTasks#1804), partial_max(completionTime#1802L), partial_min(submissionTime#1801L), partial_sum(stageDuration#1803L), partial_sum(executorRunTime#1805L), partial_sum(executorCpuTime#1806L), partial_sum(executorDeserializeTime#1807L), partial_sum(executorDeserializeCpuTime#1808L), partial_sum(resultSerializationTime#1809L), partial_sum(jvmGCTime#1810L), partial_sum(shuffleFetchWaitTime#1819L), partial_sum(shuffleWriteTime#1828L), partial_max(resultSize#1811L), partial_sum(diskBytesSpilled#1812L), partial_sum(memoryBytesSpilled#1813L), partial_max(peakExecutionMemory#1814L), partial_sum(recordsRead#1815L), partial_sum(bytesRead#1816L), partial_sum(recordsWritten#1817L), partial_sum(bytesWritten#1818L), partial_sum(shuffleRecordsRead#1827L), partial_sum(shuffleTotalBlocksFetched#1821L), partial_sum(shuffleLocalBlocksFetched#1822L), partial_sum(shuffleRemoteBlocksFetched#1823L), partial_sum(shuffleTotalBytesRead#1820L), partial_sum(shuffleLocalBytesRead#1824L), partial_sum(shuffleRemoteBytesRead#1825L), partial_sum(shuffleRemoteBytesReadToDisk#1826L), partial_sum(shuffleBytesWritten#1829L), partial_sum(shuffleRecordsWritten#1830L)])","children":[{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":558,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":554,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":555,"metricType":"timing"},{"name":"peak memory","accumulatorId":553,"metricType":"size"},{"name":"number of output rows","accumulatorId":552,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":557,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":556,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":550,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":544,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":551,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":545,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":542,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":539,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":548,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":541,"metricType":"sum"},{"name":"records read","accumulatorId":538,"metricType":"sum"},{"name":"local bytes read","accumulatorId":536,"metricType":"size"},{"name":"fetch wait time","accumulatorId":537,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":534,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":540,"metricType":"sum"},{"name":"local blocks read","accumulatorId":533,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":543,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":532,"metricType":"sum"},{"name":"data size","accumulatorId":530,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":546,"metricType":"size"},{"name":"number of partitions","accumulatorId":531,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":547,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":535,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":549,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":526,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":527,"metricType":"timing"},{"name":"peak memory","accumulatorId":525,"metricType":"size"},{"name":"number of output rows","accumulatorId":524,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":529,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":528,"metricType":"average"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"task commit time","accumulatorId":522,"metricType":"timing"},{"name":"number of written files","accumulatorId":518,"metricType":"sum"},{"name":"job commit time","accumulatorId":523,"metricType":"timing"},{"name":"number of output rows","accumulatorId":520,"metricType":"sum"},{"name":"number of dynamic part","accumulatorId":521,"metricType":"sum"},{"name":"written output","accumulatorId":519,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1725742701296,"modifiedConfigs":{"spark.databricks.delta.lastCommitVersionInSession":"0","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":6,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (12)\n+- == Current Plan ==\n   Execute InsertIntoHadoopFsRelationCommand (7)\n   +- WriteFiles (6)\n      +- HashAggregate (5)\n         +- ShuffleQueryStage (4)\n            +- Exchange (3)\n               +- * HashAggregate (2)\n                  +- * LocalTableScan (1)\n+- == Initial Plan ==\n   Execute InsertIntoHadoopFsRelationCommand (11)\n   +- WriteFiles (10)\n      +- HashAggregate (9)\n         +- Exchange (8)\n            +- HashAggregate (2)\n               +- LocalTableScan (1)\n\n\n(1) LocalTableScan [codegen id : 1]\nOutput [30]: [submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: [submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\n\n(2) HashAggregate [codegen id : 1]\nInput [30]: [submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nKeys: []\nFunctions [31]: [partial_count(1), partial_sum(numTasks#1804), partial_max(completionTime#1802L), partial_min(submissionTime#1801L), partial_sum(stageDuration#1803L), partial_sum(executorRunTime#1805L), partial_sum(executorCpuTime#1806L), partial_sum(executorDeserializeTime#1807L), partial_sum(executorDeserializeCpuTime#1808L), partial_sum(resultSerializationTime#1809L), partial_sum(jvmGCTime#1810L), partial_sum(shuffleFetchWaitTime#1819L), partial_sum(shuffleWriteTime#1828L), partial_max(resultSize#1811L), partial_sum(diskBytesSpilled#1812L), partial_sum(memoryBytesSpilled#1813L), partial_max(peakExecutionMemory#1814L), partial_sum(recordsRead#1815L), partial_sum(bytesRead#1816L), partial_sum(recordsWritten#1817L), partial_sum(bytesWritten#1818L), partial_sum(shuffleRecordsRead#1827L), partial_sum(shuffleTotalBlocksFetched#1821L), partial_sum(shuffleLocalBlocksFetched#1822L), partial_sum(shuffleRemoteBlocksFetched#1823L), partial_sum(shuffleTotalBytesRead#1820L), partial_sum(shuffleLocalBytesRead#1824L), partial_sum(shuffleRemoteBytesRead#1825L), partial_sum(shuffleRemoteBytesReadToDisk#1826L), partial_sum(shuffleBytesWritten#1829L), partial_sum(shuffleRecordsWritten#1830L)]\nAggregate Attributes [31]: [count#2055L, sum#2056L, max#2057L, min#2058L, sum#2059L, sum#2060L, sum#2061L, sum#2062L, sum#2063L, sum#2064L, sum#2065L, sum#2066L, sum#2067L, max#2068L, sum#2069L, sum#2070L, max#2071L, sum#2072L, sum#2073L, sum#2074L, sum#2075L, sum#2076L, sum#2077L, sum#2078L, sum#2079L, sum#2080L, sum#2081L, sum#2082L, sum#2083L, sum#2084L, sum#2085L]\nResults [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\n\n(3) Exchange\nInput [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=330]\n\n(4) ShuffleQueryStage\nOutput [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\nArguments: 0\n\n(5) HashAggregate\nInput [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\nKeys: []\nFunctions [31]: [count(1), sum(numTasks#1804), max(completionTime#1802L), min(submissionTime#1801L), sum(stageDuration#1803L), sum(executorRunTime#1805L), sum(executorCpuTime#1806L), sum(executorDeserializeTime#1807L), sum(executorDeserializeCpuTime#1808L), sum(resultSerializationTime#1809L), sum(jvmGCTime#1810L), sum(shuffleFetchWaitTime#1819L), sum(shuffleWriteTime#1828L), max(resultSize#1811L), sum(diskBytesSpilled#1812L), sum(memoryBytesSpilled#1813L), max(peakExecutionMemory#1814L), sum(recordsRead#1815L), sum(bytesRead#1816L), sum(recordsWritten#1817L), sum(bytesWritten#1818L), sum(shuffleRecordsRead#1827L), sum(shuffleTotalBlocksFetched#1821L), sum(shuffleLocalBlocksFetched#1822L), sum(shuffleRemoteBlocksFetched#1823L), sum(shuffleTotalBytesRead#1820L), sum(shuffleLocalBytesRead#1824L), sum(shuffleRemoteBytesRead#1825L), sum(shuffleRemoteBytesReadToDisk#1826L), sum(shuffleBytesWritten#1829L), sum(shuffleRecordsWritten#1830L)]\nAggregate Attributes [31]: [count(1)#1964L, sum(numTasks#1804)#1965L, max(completionTime#1802L)#1966L, min(submissionTime#1801L)#1967L, sum(stageDuration#1803L)#1968L, sum(executorRunTime#1805L)#1969L, sum(executorCpuTime#1806L)#1970L, sum(executorDeserializeTime#1807L)#1971L, sum(executorDeserializeCpuTime#1808L)#1972L, sum(resultSerializationTime#1809L)#1973L, sum(jvmGCTime#1810L)#1974L, sum(shuffleFetchWaitTime#1819L)#1975L, sum(shuffleWriteTime#1828L)#1976L, max(resultSize#1811L)#1977L, sum(diskBytesSpilled#1812L)#1978L, sum(memoryBytesSpilled#1813L)#1979L, max(peakExecutionMemory#1814L)#1980L, sum(recordsRead#1815L)#1981L, sum(bytesRead#1816L)#1982L, sum(recordsWritten#1817L)#1983L, sum(bytesWritten#1818L)#1984L, sum(shuffleRecordsRead#1827L)#1985L, sum(shuffleTotalBlocksFetched#1821L)#1986L, sum(shuffleLocalBlocksFetched#1822L)#1987L, sum(shuffleRemoteBlocksFetched#1823L)#1988L, sum(shuffleTotalBytesRead#1820L)#1989L, sum(shuffleLocalBytesRead#1824L)#1990L, sum(shuffleRemoteBytesRead#1825L)#1991L, sum(shuffleRemoteBytesReadToDisk#1826L)#1992L, sum(shuffleBytesWritten#1829L)#1993L, sum(shuffleRecordsWritten#1830L)#1994L]\nResults [30]: [count(1)#1964L AS numStages#1934L, sum(numTasks#1804)#1965L AS numTasks#1935L, (max(completionTime#1802L)#1966L - min(submissionTime#1801L)#1967L) AS elapsedTime#1936L, sum(stageDuration#1803L)#1968L AS stageDuration#1937L, sum(executorRunTime#1805L)#1969L AS executorRunTime#1938L, sum(executorCpuTime#1806L)#1970L AS executorCpuTime#1939L, sum(executorDeserializeTime#1807L)#1971L AS executorDeserializeTime#1940L, sum(executorDeserializeCpuTime#1808L)#1972L AS executorDeserializeCpuTime#1941L, sum(resultSerializationTime#1809L)#1973L AS resultSerializationTime#1942L, sum(jvmGCTime#1810L)#1974L AS jvmGCTime#1943L, sum(shuffleFetchWaitTime#1819L)#1975L AS shuffleFetchWaitTime#1944L, sum(shuffleWriteTime#1828L)#1976L AS shuffleWriteTime#1945L, max(resultSize#1811L)#1977L AS resultSize#1946L, sum(diskBytesSpilled#1812L)#1978L AS diskBytesSpilled#1947L, sum(memoryBytesSpilled#1813L)#1979L AS memoryBytesSpilled#1948L, max(peakExecutionMemory#1814L)#1980L AS peakExecutionMemory#1949L, sum(recordsRead#1815L)#1981L AS recordsRead#1950L, sum(bytesRead#1816L)#1982L AS bytesRead#1951L, sum(recordsWritten#1817L)#1983L AS recordsWritten#1952L, sum(bytesWritten#1818L)#1984L AS bytesWritten#1953L, sum(shuffleRecordsRead#1827L)#1985L AS shuffleRecordsRead#1954L, sum(shuffleTotalBlocksFetched#1821L)#1986L AS shuffleTotalBlocksFetched#1955L, sum(shuffleLocalBlocksFetched#1822L)#1987L AS shuffleLocalBlocksFetched#1956L, sum(shuffleRemoteBlocksFetched#1823L)#1988L AS shuffleRemoteBlocksFetched#1957L, sum(shuffleTotalBytesRead#1820L)#1989L AS shuffleTotalBytesRead#1958L, sum(shuffleLocalBytesRead#1824L)#1990L AS shuffleLocalBytesRead#1959L, sum(shuffleRemoteBytesRead#1825L)#1991L AS shuffleRemoteBytesRead#1960L, sum(shuffleRemoteBytesReadToDisk#1826L)#1992L AS shuffleRemoteBytesReadToDisk#1961L, sum(shuffleBytesWritten#1829L)#1993L AS shuffleBytesWritten#1962L, sum(shuffleRecordsWritten#1830L)#1994L AS shuffleRecordsWritten#1963L]\n\n(6) WriteFiles\nInput [30]: [numStages#1934L, numTasks#1935L, elapsedTime#1936L, stageDuration#1937L, executorRunTime#1938L, executorCpuTime#1939L, executorDeserializeTime#1940L, executorDeserializeCpuTime#1941L, resultSerializationTime#1942L, jvmGCTime#1943L, shuffleFetchWaitTime#1944L, shuffleWriteTime#1945L, resultSize#1946L, diskBytesSpilled#1947L, memoryBytesSpilled#1948L, peakExecutionMemory#1949L, recordsRead#1950L, bytesRead#1951L, recordsWritten#1952L, bytesWritten#1953L, shuffleRecordsRead#1954L, shuffleTotalBlocksFetched#1955L, shuffleLocalBlocksFetched#1956L, shuffleRemoteBlocksFetched#1957L, shuffleTotalBytesRead#1958L, shuffleLocalBytesRead#1959L, shuffleRemoteBytesRead#1960L, shuffleRemoteBytesReadToDisk#1961L, shuffleBytesWritten#1962L, shuffleRecordsWritten#1963L]\n\n(7) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics_agg, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics_agg], Overwrite, [numStages, numTasks, elapsedTime, stageDuration, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, shuffleFetchWaitTime, shuffleWriteTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleRecordsRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleTotalBytesRead, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleBytesWritten, shuffleRecordsWritten]\n\n(8) Exchange\nInput [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=321]\n\n(9) HashAggregate\nInput [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\nKeys: []\nFunctions [31]: [count(1), sum(numTasks#1804), max(completionTime#1802L), min(submissionTime#1801L), sum(stageDuration#1803L), sum(executorRunTime#1805L), sum(executorCpuTime#1806L), sum(executorDeserializeTime#1807L), sum(executorDeserializeCpuTime#1808L), sum(resultSerializationTime#1809L), sum(jvmGCTime#1810L), sum(shuffleFetchWaitTime#1819L), sum(shuffleWriteTime#1828L), max(resultSize#1811L), sum(diskBytesSpilled#1812L), sum(memoryBytesSpilled#1813L), max(peakExecutionMemory#1814L), sum(recordsRead#1815L), sum(bytesRead#1816L), sum(recordsWritten#1817L), sum(bytesWritten#1818L), sum(shuffleRecordsRead#1827L), sum(shuffleTotalBlocksFetched#1821L), sum(shuffleLocalBlocksFetched#1822L), sum(shuffleRemoteBlocksFetched#1823L), sum(shuffleTotalBytesRead#1820L), sum(shuffleLocalBytesRead#1824L), sum(shuffleRemoteBytesRead#1825L), sum(shuffleRemoteBytesReadToDisk#1826L), sum(shuffleBytesWritten#1829L), sum(shuffleRecordsWritten#1830L)]\nAggregate Attributes [31]: [count(1)#1964L, sum(numTasks#1804)#1965L, max(completionTime#1802L)#1966L, min(submissionTime#1801L)#1967L, sum(stageDuration#1803L)#1968L, sum(executorRunTime#1805L)#1969L, sum(executorCpuTime#1806L)#1970L, sum(executorDeserializeTime#1807L)#1971L, sum(executorDeserializeCpuTime#1808L)#1972L, sum(resultSerializationTime#1809L)#1973L, sum(jvmGCTime#1810L)#1974L, sum(shuffleFetchWaitTime#1819L)#1975L, sum(shuffleWriteTime#1828L)#1976L, max(resultSize#1811L)#1977L, sum(diskBytesSpilled#1812L)#1978L, sum(memoryBytesSpilled#1813L)#1979L, max(peakExecutionMemory#1814L)#1980L, sum(recordsRead#1815L)#1981L, sum(bytesRead#1816L)#1982L, sum(recordsWritten#1817L)#1983L, sum(bytesWritten#1818L)#1984L, sum(shuffleRecordsRead#1827L)#1985L, sum(shuffleTotalBlocksFetched#1821L)#1986L, sum(shuffleLocalBlocksFetched#1822L)#1987L, sum(shuffleRemoteBlocksFetched#1823L)#1988L, sum(shuffleTotalBytesRead#1820L)#1989L, sum(shuffleLocalBytesRead#1824L)#1990L, sum(shuffleRemoteBytesRead#1825L)#1991L, sum(shuffleRemoteBytesReadToDisk#1826L)#1992L, sum(shuffleBytesWritten#1829L)#1993L, sum(shuffleRecordsWritten#1830L)#1994L]\nResults [30]: [count(1)#1964L AS numStages#1934L, sum(numTasks#1804)#1965L AS numTasks#1935L, (max(completionTime#1802L)#1966L - min(submissionTime#1801L)#1967L) AS elapsedTime#1936L, sum(stageDuration#1803L)#1968L AS stageDuration#1937L, sum(executorRunTime#1805L)#1969L AS executorRunTime#1938L, sum(executorCpuTime#1806L)#1970L AS executorCpuTime#1939L, sum(executorDeserializeTime#1807L)#1971L AS executorDeserializeTime#1940L, sum(executorDeserializeCpuTime#1808L)#1972L AS executorDeserializeCpuTime#1941L, sum(resultSerializationTime#1809L)#1973L AS resultSerializationTime#1942L, sum(jvmGCTime#1810L)#1974L AS jvmGCTime#1943L, sum(shuffleFetchWaitTime#1819L)#1975L AS shuffleFetchWaitTime#1944L, sum(shuffleWriteTime#1828L)#1976L AS shuffleWriteTime#1945L, max(resultSize#1811L)#1977L AS resultSize#1946L, sum(diskBytesSpilled#1812L)#1978L AS diskBytesSpilled#1947L, sum(memoryBytesSpilled#1813L)#1979L AS memoryBytesSpilled#1948L, max(peakExecutionMemory#1814L)#1980L AS peakExecutionMemory#1949L, sum(recordsRead#1815L)#1981L AS recordsRead#1950L, sum(bytesRead#1816L)#1982L AS bytesRead#1951L, sum(recordsWritten#1817L)#1983L AS recordsWritten#1952L, sum(bytesWritten#1818L)#1984L AS bytesWritten#1953L, sum(shuffleRecordsRead#1827L)#1985L AS shuffleRecordsRead#1954L, sum(shuffleTotalBlocksFetched#1821L)#1986L AS shuffleTotalBlocksFetched#1955L, sum(shuffleLocalBlocksFetched#1822L)#1987L AS shuffleLocalBlocksFetched#1956L, sum(shuffleRemoteBlocksFetched#1823L)#1988L AS shuffleRemoteBlocksFetched#1957L, sum(shuffleTotalBytesRead#1820L)#1989L AS shuffleTotalBytesRead#1958L, sum(shuffleLocalBytesRead#1824L)#1990L AS shuffleLocalBytesRead#1959L, sum(shuffleRemoteBytesRead#1825L)#1991L AS shuffleRemoteBytesRead#1960L, sum(shuffleRemoteBytesReadToDisk#1826L)#1992L AS shuffleRemoteBytesReadToDisk#1961L, sum(shuffleBytesWritten#1829L)#1993L AS shuffleBytesWritten#1962L, sum(shuffleRecordsWritten#1830L)#1994L AS shuffleRecordsWritten#1963L]\n\n(10) WriteFiles\nInput [30]: [numStages#1934L, numTasks#1935L, elapsedTime#1936L, stageDuration#1937L, executorRunTime#1938L, executorCpuTime#1939L, executorDeserializeTime#1940L, executorDeserializeCpuTime#1941L, resultSerializationTime#1942L, jvmGCTime#1943L, shuffleFetchWaitTime#1944L, shuffleWriteTime#1945L, resultSize#1946L, diskBytesSpilled#1947L, memoryBytesSpilled#1948L, peakExecutionMemory#1949L, recordsRead#1950L, bytesRead#1951L, recordsWritten#1952L, bytesWritten#1953L, shuffleRecordsRead#1954L, shuffleTotalBlocksFetched#1955L, shuffleLocalBlocksFetched#1956L, shuffleRemoteBlocksFetched#1957L, shuffleTotalBytesRead#1958L, shuffleLocalBytesRead#1959L, shuffleRemoteBytesRead#1960L, shuffleRemoteBytesReadToDisk#1961L, shuffleBytesWritten#1962L, shuffleRecordsWritten#1963L]\n\n(11) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics_agg, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics_agg], Overwrite, [numStages, numTasks, elapsedTime, stageDuration, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, shuffleFetchWaitTime, shuffleWriteTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleRecordsRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleTotalBytesRead, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleBytesWritten, shuffleRecordsWritten]\n\n(12) AdaptiveSparkPlan\nOutput: []\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Execute InsertIntoHadoopFsRelationCommand","simpleString":"Execute InsertIntoHadoopFsRelationCommand file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics_agg, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics_agg], Overwrite, [numStages, numTasks, elapsedTime, stageDuration, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, shuffleFetchWaitTime, shuffleWriteTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleRecordsRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleTotalBytesRead, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleBytesWritten, shuffleRecordsWritten]","children":[{"nodeName":"WriteFiles","simpleString":"WriteFiles","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1), sum(numTasks#1804), max(completionTime#1802L), min(submissionTime#1801L), sum(stageDuration#1803L), sum(executorRunTime#1805L), sum(executorCpuTime#1806L), sum(executorDeserializeTime#1807L), sum(executorDeserializeCpuTime#1808L), sum(resultSerializationTime#1809L), sum(jvmGCTime#1810L), sum(shuffleFetchWaitTime#1819L), sum(shuffleWriteTime#1828L), max(resultSize#1811L), sum(diskBytesSpilled#1812L), sum(memoryBytesSpilled#1813L), max(peakExecutionMemory#1814L), sum(recordsRead#1815L), sum(bytesRead#1816L), sum(recordsWritten#1817L), sum(bytesWritten#1818L), sum(shuffleRecordsRead#1827L), sum(shuffleTotalBlocksFetched#1821L), sum(shuffleLocalBlocksFetched#1822L), sum(shuffleRemoteBlocksFetched#1823L), sum(shuffleTotalBytesRead#1820L), sum(shuffleLocalBytesRead#1824L), sum(shuffleRemoteBytesRead#1825L), sum(shuffleRemoteBytesReadToDisk#1826L), sum(shuffleBytesWritten#1829L), sum(shuffleRecordsWritten#1830L)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=330]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1), partial_sum(numTasks#1804), partial_max(completionTime#1802L), partial_min(submissionTime#1801L), partial_sum(stageDuration#1803L), partial_sum(executorRunTime#1805L), partial_sum(executorCpuTime#1806L), partial_sum(executorDeserializeTime#1807L), partial_sum(executorDeserializeCpuTime#1808L), partial_sum(resultSerializationTime#1809L), partial_sum(jvmGCTime#1810L), partial_sum(shuffleFetchWaitTime#1819L), partial_sum(shuffleWriteTime#1828L), partial_max(resultSize#1811L), partial_sum(diskBytesSpilled#1812L), partial_sum(memoryBytesSpilled#1813L), partial_max(peakExecutionMemory#1814L), partial_sum(recordsRead#1815L), partial_sum(bytesRead#1816L), partial_sum(recordsWritten#1817L), partial_sum(bytesWritten#1818L), partial_sum(shuffleRecordsRead#1827L), partial_sum(shuffleTotalBlocksFetched#1821L), partial_sum(shuffleLocalBlocksFetched#1822L), partial_sum(shuffleRemoteBlocksFetched#1823L), partial_sum(shuffleTotalBytesRead#1820L), partial_sum(shuffleLocalBytesRead#1824L), partial_sum(shuffleRemoteBytesRead#1825L), partial_sum(shuffleRemoteBytesReadToDisk#1826L), partial_sum(shuffleBytesWritten#1829L), partial_sum(shuffleRecordsWritten#1830L)])","children":[{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":558,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":554,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":555,"metricType":"timing"},{"name":"peak memory","accumulatorId":553,"metricType":"size"},{"name":"number of output rows","accumulatorId":552,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":557,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":556,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":587,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":585,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":579,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":586,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":580,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":577,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":574,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":583,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":576,"metricType":"sum"},{"name":"records read","accumulatorId":573,"metricType":"sum"},{"name":"local bytes read","accumulatorId":571,"metricType":"size"},{"name":"fetch wait time","accumulatorId":572,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":569,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":575,"metricType":"sum"},{"name":"local blocks read","accumulatorId":568,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":578,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":567,"metricType":"sum"},{"name":"data size","accumulatorId":565,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":581,"metricType":"size"},{"name":"number of partitions","accumulatorId":566,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":582,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":570,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":584,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":561,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":562,"metricType":"timing"},{"name":"peak memory","accumulatorId":560,"metricType":"size"},{"name":"number of output rows","accumulatorId":559,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":564,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":563,"metricType":"average"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"task commit time","accumulatorId":522,"metricType":"timing"},{"name":"number of written files","accumulatorId":518,"metricType":"sum"},{"name":"job commit time","accumulatorId":523,"metricType":"timing"},{"name":"number of output rows","accumulatorId":520,"metricType":"sum"},{"name":"number of dynamic part","accumulatorId":521,"metricType":"sum"},{"name":"written output","accumulatorId":519,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":6,"accumUpdates":[[566,1]]}
{"Event":"SparkListenerJobStart","Job ID":9,"Submission Time":1725742701360,"Stage Infos":[{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"96\",\"name\":\"Exchange\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"97\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"97\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[11],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.databricks.delta.lastCommitVersionInSession":"0","spark.executor.cores":"4","spark.sql.execution.root.id":"6","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"6","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"96\",\"name\":\"Exchange\"}","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"96\",\"name\":\"Exchange\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"97\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"97\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742701361,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.databricks.delta.lastCommitVersionInSession":"0","spark.executor.cores":"4","spark.sql.execution.root.id":"6","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"6","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"96\",\"name\":\"Exchange\"}","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_11_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":13366,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":11,"Stage Attempt ID":0,"Task Info":{"Task ID":11,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742701366,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":11,"Stage Attempt ID":0,"Task Info":{"Task ID":12,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725742701366,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":11,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":12,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725742701366,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725742701393,"Failed":false,"Killed":false,"Accumulables":[{"ID":552,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":555,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":558,"Name":"number of output rows","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":565,"Name":"data size","Update":"256","Value":"256","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":584,"Name":"shuffle bytes written","Update":"190","Value":"190","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":585,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":586,"Name":"shuffle write time","Update":"242621","Value":"242621","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":587,"Name":"duration","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":588,"Name":"internal.metrics.executorDeserializeTime","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":589,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2238534,"Value":2238534,"Internal":true,"Count Failed Values":true},{"ID":590,"Name":"internal.metrics.executorRunTime","Update":22,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.executorCpuTime","Update":2525973,"Value":2525973,"Internal":true,"Count Failed Values":true},{"ID":592,"Name":"internal.metrics.resultSize","Update":1774,"Value":1774,"Internal":true,"Count Failed Values":true},{"ID":616,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":190,"Value":190,"Internal":true,"Count Failed Values":true},{"ID":617,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":618,"Name":"internal.metrics.shuffle.write.writeTime","Update":242621,"Value":242621,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":2,"Executor Deserialize CPU Time":2238534,"Executor Run Time":22,"Executor CPU Time":2525973,"Peak Execution Memory":0,"Result Size":1774,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":190,"Shuffle Write Time":242621,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":11,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":11,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742701366,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725742701394,"Failed":false,"Killed":false,"Accumulables":[{"ID":552,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":555,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":558,"Name":"number of output rows","Update":"3","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":565,"Name":"data size","Update":"256","Value":"512","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":584,"Name":"shuffle bytes written","Update":"144","Value":"334","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":585,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":586,"Name":"shuffle write time","Update":"223276","Value":"465897","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":587,"Name":"duration","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":588,"Name":"internal.metrics.executorDeserializeTime","Update":2,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":589,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2396212,"Value":4634746,"Internal":true,"Count Failed Values":true},{"ID":590,"Name":"internal.metrics.executorRunTime","Update":23,"Value":45,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.executorCpuTime","Update":22668412,"Value":25194385,"Internal":true,"Count Failed Values":true},{"ID":592,"Name":"internal.metrics.resultSize","Update":1774,"Value":3548,"Internal":true,"Count Failed Values":true},{"ID":616,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":144,"Value":334,"Internal":true,"Count Failed Values":true},{"ID":617,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":618,"Name":"internal.metrics.shuffle.write.writeTime","Update":223276,"Value":465897,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":2,"Executor Deserialize CPU Time":2396212,"Executor Run Time":23,"Executor CPU Time":22668412,"Peak Execution Memory":0,"Result Size":1774,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":144,"Shuffle Write Time":223276,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"96\",\"name\":\"Exchange\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"97\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"97\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742701361,"Completion Time":1725742701394,"Accumulables":[{"ID":552,"Name":"number of output rows","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":555,"Name":"time in aggregation build","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":558,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":565,"Name":"data size","Value":"512","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":584,"Name":"shuffle bytes written","Value":"334","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":585,"Name":"shuffle records written","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":586,"Name":"shuffle write time","Value":"465897","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":587,"Name":"duration","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":588,"Name":"internal.metrics.executorDeserializeTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":589,"Name":"internal.metrics.executorDeserializeCpuTime","Value":4634746,"Internal":true,"Count Failed Values":true},{"ID":590,"Name":"internal.metrics.executorRunTime","Value":45,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.executorCpuTime","Value":25194385,"Internal":true,"Count Failed Values":true},{"ID":592,"Name":"internal.metrics.resultSize","Value":3548,"Internal":true,"Count Failed Values":true},{"ID":616,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":334,"Internal":true,"Count Failed Values":true},{"ID":617,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":2,"Internal":true,"Count Failed Values":true},{"ID":618,"Name":"internal.metrics.shuffle.write.writeTime","Value":465897,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":9,"Completion Time":1725742701395,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":6,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (12)\n+- == Final Plan ==\n   Execute InsertIntoHadoopFsRelationCommand (7)\n   +- WriteFiles (6)\n      +- * HashAggregate (5)\n         +- ShuffleQueryStage (4), Statistics(sizeInBytes=512.0 B, rowCount=2)\n            +- Exchange (3)\n               +- * HashAggregate (2)\n                  +- * LocalTableScan (1)\n+- == Initial Plan ==\n   Execute InsertIntoHadoopFsRelationCommand (11)\n   +- WriteFiles (10)\n      +- HashAggregate (9)\n         +- Exchange (8)\n            +- HashAggregate (2)\n               +- LocalTableScan (1)\n\n\n(1) LocalTableScan [codegen id : 1]\nOutput [30]: [submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nArguments: [submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\n\n(2) HashAggregate [codegen id : 1]\nInput [30]: [submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]\nKeys: []\nFunctions [31]: [partial_count(1), partial_sum(numTasks#1804), partial_max(completionTime#1802L), partial_min(submissionTime#1801L), partial_sum(stageDuration#1803L), partial_sum(executorRunTime#1805L), partial_sum(executorCpuTime#1806L), partial_sum(executorDeserializeTime#1807L), partial_sum(executorDeserializeCpuTime#1808L), partial_sum(resultSerializationTime#1809L), partial_sum(jvmGCTime#1810L), partial_sum(shuffleFetchWaitTime#1819L), partial_sum(shuffleWriteTime#1828L), partial_max(resultSize#1811L), partial_sum(diskBytesSpilled#1812L), partial_sum(memoryBytesSpilled#1813L), partial_max(peakExecutionMemory#1814L), partial_sum(recordsRead#1815L), partial_sum(bytesRead#1816L), partial_sum(recordsWritten#1817L), partial_sum(bytesWritten#1818L), partial_sum(shuffleRecordsRead#1827L), partial_sum(shuffleTotalBlocksFetched#1821L), partial_sum(shuffleLocalBlocksFetched#1822L), partial_sum(shuffleRemoteBlocksFetched#1823L), partial_sum(shuffleTotalBytesRead#1820L), partial_sum(shuffleLocalBytesRead#1824L), partial_sum(shuffleRemoteBytesRead#1825L), partial_sum(shuffleRemoteBytesReadToDisk#1826L), partial_sum(shuffleBytesWritten#1829L), partial_sum(shuffleRecordsWritten#1830L)]\nAggregate Attributes [31]: [count#2055L, sum#2056L, max#2057L, min#2058L, sum#2059L, sum#2060L, sum#2061L, sum#2062L, sum#2063L, sum#2064L, sum#2065L, sum#2066L, sum#2067L, max#2068L, sum#2069L, sum#2070L, max#2071L, sum#2072L, sum#2073L, sum#2074L, sum#2075L, sum#2076L, sum#2077L, sum#2078L, sum#2079L, sum#2080L, sum#2081L, sum#2082L, sum#2083L, sum#2084L, sum#2085L]\nResults [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\n\n(3) Exchange\nInput [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=330]\n\n(4) ShuffleQueryStage\nOutput [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\nArguments: 0\n\n(5) HashAggregate [codegen id : 2]\nInput [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\nKeys: []\nFunctions [31]: [count(1), sum(numTasks#1804), max(completionTime#1802L), min(submissionTime#1801L), sum(stageDuration#1803L), sum(executorRunTime#1805L), sum(executorCpuTime#1806L), sum(executorDeserializeTime#1807L), sum(executorDeserializeCpuTime#1808L), sum(resultSerializationTime#1809L), sum(jvmGCTime#1810L), sum(shuffleFetchWaitTime#1819L), sum(shuffleWriteTime#1828L), max(resultSize#1811L), sum(diskBytesSpilled#1812L), sum(memoryBytesSpilled#1813L), max(peakExecutionMemory#1814L), sum(recordsRead#1815L), sum(bytesRead#1816L), sum(recordsWritten#1817L), sum(bytesWritten#1818L), sum(shuffleRecordsRead#1827L), sum(shuffleTotalBlocksFetched#1821L), sum(shuffleLocalBlocksFetched#1822L), sum(shuffleRemoteBlocksFetched#1823L), sum(shuffleTotalBytesRead#1820L), sum(shuffleLocalBytesRead#1824L), sum(shuffleRemoteBytesRead#1825L), sum(shuffleRemoteBytesReadToDisk#1826L), sum(shuffleBytesWritten#1829L), sum(shuffleRecordsWritten#1830L)]\nAggregate Attributes [31]: [count(1)#1964L, sum(numTasks#1804)#1965L, max(completionTime#1802L)#1966L, min(submissionTime#1801L)#1967L, sum(stageDuration#1803L)#1968L, sum(executorRunTime#1805L)#1969L, sum(executorCpuTime#1806L)#1970L, sum(executorDeserializeTime#1807L)#1971L, sum(executorDeserializeCpuTime#1808L)#1972L, sum(resultSerializationTime#1809L)#1973L, sum(jvmGCTime#1810L)#1974L, sum(shuffleFetchWaitTime#1819L)#1975L, sum(shuffleWriteTime#1828L)#1976L, max(resultSize#1811L)#1977L, sum(diskBytesSpilled#1812L)#1978L, sum(memoryBytesSpilled#1813L)#1979L, max(peakExecutionMemory#1814L)#1980L, sum(recordsRead#1815L)#1981L, sum(bytesRead#1816L)#1982L, sum(recordsWritten#1817L)#1983L, sum(bytesWritten#1818L)#1984L, sum(shuffleRecordsRead#1827L)#1985L, sum(shuffleTotalBlocksFetched#1821L)#1986L, sum(shuffleLocalBlocksFetched#1822L)#1987L, sum(shuffleRemoteBlocksFetched#1823L)#1988L, sum(shuffleTotalBytesRead#1820L)#1989L, sum(shuffleLocalBytesRead#1824L)#1990L, sum(shuffleRemoteBytesRead#1825L)#1991L, sum(shuffleRemoteBytesReadToDisk#1826L)#1992L, sum(shuffleBytesWritten#1829L)#1993L, sum(shuffleRecordsWritten#1830L)#1994L]\nResults [30]: [count(1)#1964L AS numStages#1934L, sum(numTasks#1804)#1965L AS numTasks#1935L, (max(completionTime#1802L)#1966L - min(submissionTime#1801L)#1967L) AS elapsedTime#1936L, sum(stageDuration#1803L)#1968L AS stageDuration#1937L, sum(executorRunTime#1805L)#1969L AS executorRunTime#1938L, sum(executorCpuTime#1806L)#1970L AS executorCpuTime#1939L, sum(executorDeserializeTime#1807L)#1971L AS executorDeserializeTime#1940L, sum(executorDeserializeCpuTime#1808L)#1972L AS executorDeserializeCpuTime#1941L, sum(resultSerializationTime#1809L)#1973L AS resultSerializationTime#1942L, sum(jvmGCTime#1810L)#1974L AS jvmGCTime#1943L, sum(shuffleFetchWaitTime#1819L)#1975L AS shuffleFetchWaitTime#1944L, sum(shuffleWriteTime#1828L)#1976L AS shuffleWriteTime#1945L, max(resultSize#1811L)#1977L AS resultSize#1946L, sum(diskBytesSpilled#1812L)#1978L AS diskBytesSpilled#1947L, sum(memoryBytesSpilled#1813L)#1979L AS memoryBytesSpilled#1948L, max(peakExecutionMemory#1814L)#1980L AS peakExecutionMemory#1949L, sum(recordsRead#1815L)#1981L AS recordsRead#1950L, sum(bytesRead#1816L)#1982L AS bytesRead#1951L, sum(recordsWritten#1817L)#1983L AS recordsWritten#1952L, sum(bytesWritten#1818L)#1984L AS bytesWritten#1953L, sum(shuffleRecordsRead#1827L)#1985L AS shuffleRecordsRead#1954L, sum(shuffleTotalBlocksFetched#1821L)#1986L AS shuffleTotalBlocksFetched#1955L, sum(shuffleLocalBlocksFetched#1822L)#1987L AS shuffleLocalBlocksFetched#1956L, sum(shuffleRemoteBlocksFetched#1823L)#1988L AS shuffleRemoteBlocksFetched#1957L, sum(shuffleTotalBytesRead#1820L)#1989L AS shuffleTotalBytesRead#1958L, sum(shuffleLocalBytesRead#1824L)#1990L AS shuffleLocalBytesRead#1959L, sum(shuffleRemoteBytesRead#1825L)#1991L AS shuffleRemoteBytesRead#1960L, sum(shuffleRemoteBytesReadToDisk#1826L)#1992L AS shuffleRemoteBytesReadToDisk#1961L, sum(shuffleBytesWritten#1829L)#1993L AS shuffleBytesWritten#1962L, sum(shuffleRecordsWritten#1830L)#1994L AS shuffleRecordsWritten#1963L]\n\n(6) WriteFiles\nInput [30]: [numStages#1934L, numTasks#1935L, elapsedTime#1936L, stageDuration#1937L, executorRunTime#1938L, executorCpuTime#1939L, executorDeserializeTime#1940L, executorDeserializeCpuTime#1941L, resultSerializationTime#1942L, jvmGCTime#1943L, shuffleFetchWaitTime#1944L, shuffleWriteTime#1945L, resultSize#1946L, diskBytesSpilled#1947L, memoryBytesSpilled#1948L, peakExecutionMemory#1949L, recordsRead#1950L, bytesRead#1951L, recordsWritten#1952L, bytesWritten#1953L, shuffleRecordsRead#1954L, shuffleTotalBlocksFetched#1955L, shuffleLocalBlocksFetched#1956L, shuffleRemoteBlocksFetched#1957L, shuffleTotalBytesRead#1958L, shuffleLocalBytesRead#1959L, shuffleRemoteBytesRead#1960L, shuffleRemoteBytesReadToDisk#1961L, shuffleBytesWritten#1962L, shuffleRecordsWritten#1963L]\n\n(7) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics_agg, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics_agg], Overwrite, [numStages, numTasks, elapsedTime, stageDuration, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, shuffleFetchWaitTime, shuffleWriteTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleRecordsRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleTotalBytesRead, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleBytesWritten, shuffleRecordsWritten]\n\n(8) Exchange\nInput [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=321]\n\n(9) HashAggregate\nInput [31]: [count#2086L, sum#2087L, max#2088L, min#2089L, sum#2090L, sum#2091L, sum#2092L, sum#2093L, sum#2094L, sum#2095L, sum#2096L, sum#2097L, sum#2098L, max#2099L, sum#2100L, sum#2101L, max#2102L, sum#2103L, sum#2104L, sum#2105L, sum#2106L, sum#2107L, sum#2108L, sum#2109L, sum#2110L, sum#2111L, sum#2112L, sum#2113L, sum#2114L, sum#2115L, sum#2116L]\nKeys: []\nFunctions [31]: [count(1), sum(numTasks#1804), max(completionTime#1802L), min(submissionTime#1801L), sum(stageDuration#1803L), sum(executorRunTime#1805L), sum(executorCpuTime#1806L), sum(executorDeserializeTime#1807L), sum(executorDeserializeCpuTime#1808L), sum(resultSerializationTime#1809L), sum(jvmGCTime#1810L), sum(shuffleFetchWaitTime#1819L), sum(shuffleWriteTime#1828L), max(resultSize#1811L), sum(diskBytesSpilled#1812L), sum(memoryBytesSpilled#1813L), max(peakExecutionMemory#1814L), sum(recordsRead#1815L), sum(bytesRead#1816L), sum(recordsWritten#1817L), sum(bytesWritten#1818L), sum(shuffleRecordsRead#1827L), sum(shuffleTotalBlocksFetched#1821L), sum(shuffleLocalBlocksFetched#1822L), sum(shuffleRemoteBlocksFetched#1823L), sum(shuffleTotalBytesRead#1820L), sum(shuffleLocalBytesRead#1824L), sum(shuffleRemoteBytesRead#1825L), sum(shuffleRemoteBytesReadToDisk#1826L), sum(shuffleBytesWritten#1829L), sum(shuffleRecordsWritten#1830L)]\nAggregate Attributes [31]: [count(1)#1964L, sum(numTasks#1804)#1965L, max(completionTime#1802L)#1966L, min(submissionTime#1801L)#1967L, sum(stageDuration#1803L)#1968L, sum(executorRunTime#1805L)#1969L, sum(executorCpuTime#1806L)#1970L, sum(executorDeserializeTime#1807L)#1971L, sum(executorDeserializeCpuTime#1808L)#1972L, sum(resultSerializationTime#1809L)#1973L, sum(jvmGCTime#1810L)#1974L, sum(shuffleFetchWaitTime#1819L)#1975L, sum(shuffleWriteTime#1828L)#1976L, max(resultSize#1811L)#1977L, sum(diskBytesSpilled#1812L)#1978L, sum(memoryBytesSpilled#1813L)#1979L, max(peakExecutionMemory#1814L)#1980L, sum(recordsRead#1815L)#1981L, sum(bytesRead#1816L)#1982L, sum(recordsWritten#1817L)#1983L, sum(bytesWritten#1818L)#1984L, sum(shuffleRecordsRead#1827L)#1985L, sum(shuffleTotalBlocksFetched#1821L)#1986L, sum(shuffleLocalBlocksFetched#1822L)#1987L, sum(shuffleRemoteBlocksFetched#1823L)#1988L, sum(shuffleTotalBytesRead#1820L)#1989L, sum(shuffleLocalBytesRead#1824L)#1990L, sum(shuffleRemoteBytesRead#1825L)#1991L, sum(shuffleRemoteBytesReadToDisk#1826L)#1992L, sum(shuffleBytesWritten#1829L)#1993L, sum(shuffleRecordsWritten#1830L)#1994L]\nResults [30]: [count(1)#1964L AS numStages#1934L, sum(numTasks#1804)#1965L AS numTasks#1935L, (max(completionTime#1802L)#1966L - min(submissionTime#1801L)#1967L) AS elapsedTime#1936L, sum(stageDuration#1803L)#1968L AS stageDuration#1937L, sum(executorRunTime#1805L)#1969L AS executorRunTime#1938L, sum(executorCpuTime#1806L)#1970L AS executorCpuTime#1939L, sum(executorDeserializeTime#1807L)#1971L AS executorDeserializeTime#1940L, sum(executorDeserializeCpuTime#1808L)#1972L AS executorDeserializeCpuTime#1941L, sum(resultSerializationTime#1809L)#1973L AS resultSerializationTime#1942L, sum(jvmGCTime#1810L)#1974L AS jvmGCTime#1943L, sum(shuffleFetchWaitTime#1819L)#1975L AS shuffleFetchWaitTime#1944L, sum(shuffleWriteTime#1828L)#1976L AS shuffleWriteTime#1945L, max(resultSize#1811L)#1977L AS resultSize#1946L, sum(diskBytesSpilled#1812L)#1978L AS diskBytesSpilled#1947L, sum(memoryBytesSpilled#1813L)#1979L AS memoryBytesSpilled#1948L, max(peakExecutionMemory#1814L)#1980L AS peakExecutionMemory#1949L, sum(recordsRead#1815L)#1981L AS recordsRead#1950L, sum(bytesRead#1816L)#1982L AS bytesRead#1951L, sum(recordsWritten#1817L)#1983L AS recordsWritten#1952L, sum(bytesWritten#1818L)#1984L AS bytesWritten#1953L, sum(shuffleRecordsRead#1827L)#1985L AS shuffleRecordsRead#1954L, sum(shuffleTotalBlocksFetched#1821L)#1986L AS shuffleTotalBlocksFetched#1955L, sum(shuffleLocalBlocksFetched#1822L)#1987L AS shuffleLocalBlocksFetched#1956L, sum(shuffleRemoteBlocksFetched#1823L)#1988L AS shuffleRemoteBlocksFetched#1957L, sum(shuffleTotalBytesRead#1820L)#1989L AS shuffleTotalBytesRead#1958L, sum(shuffleLocalBytesRead#1824L)#1990L AS shuffleLocalBytesRead#1959L, sum(shuffleRemoteBytesRead#1825L)#1991L AS shuffleRemoteBytesRead#1960L, sum(shuffleRemoteBytesReadToDisk#1826L)#1992L AS shuffleRemoteBytesReadToDisk#1961L, sum(shuffleBytesWritten#1829L)#1993L AS shuffleBytesWritten#1962L, sum(shuffleRecordsWritten#1830L)#1994L AS shuffleRecordsWritten#1963L]\n\n(10) WriteFiles\nInput [30]: [numStages#1934L, numTasks#1935L, elapsedTime#1936L, stageDuration#1937L, executorRunTime#1938L, executorCpuTime#1939L, executorDeserializeTime#1940L, executorDeserializeCpuTime#1941L, resultSerializationTime#1942L, jvmGCTime#1943L, shuffleFetchWaitTime#1944L, shuffleWriteTime#1945L, resultSize#1946L, diskBytesSpilled#1947L, memoryBytesSpilled#1948L, peakExecutionMemory#1949L, recordsRead#1950L, bytesRead#1951L, recordsWritten#1952L, bytesWritten#1953L, shuffleRecordsRead#1954L, shuffleTotalBlocksFetched#1955L, shuffleLocalBlocksFetched#1956L, shuffleRemoteBlocksFetched#1957L, shuffleTotalBytesRead#1958L, shuffleLocalBytesRead#1959L, shuffleRemoteBytesRead#1960L, shuffleRemoteBytesReadToDisk#1961L, shuffleBytesWritten#1962L, shuffleRecordsWritten#1963L]\n\n(11) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics_agg, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics_agg], Overwrite, [numStages, numTasks, elapsedTime, stageDuration, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, shuffleFetchWaitTime, shuffleWriteTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleRecordsRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleTotalBytesRead, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleBytesWritten, shuffleRecordsWritten]\n\n(12) AdaptiveSparkPlan\nOutput: []\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"Execute InsertIntoHadoopFsRelationCommand","simpleString":"Execute InsertIntoHadoopFsRelationCommand file:/home/thiago/.../metrics/bronze_to_silver/store_sales/stagemetrics_agg, false, JSON, [path=.../metrics/bronze_to_silver/store_sales/stagemetrics_agg], Overwrite, [numStages, numTasks, elapsedTime, stageDuration, executorRunTime, executorCpuTime, executorDeserializeTime, executorDeserializeCpuTime, resultSerializationTime, jvmGCTime, shuffleFetchWaitTime, shuffleWriteTime, resultSize, diskBytesSpilled, memoryBytesSpilled, peakExecutionMemory, recordsRead, bytesRead, recordsWritten, bytesWritten, shuffleRecordsRead, shuffleTotalBlocksFetched, shuffleLocalBlocksFetched, shuffleRemoteBlocksFetched, shuffleTotalBytesRead, shuffleLocalBytesRead, shuffleRemoteBytesRead, shuffleRemoteBytesReadToDisk, shuffleBytesWritten, shuffleRecordsWritten]","children":[{"nodeName":"WriteFiles","simpleString":"WriteFiles","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1), sum(numTasks#1804), max(completionTime#1802L), min(submissionTime#1801L), sum(stageDuration#1803L), sum(executorRunTime#1805L), sum(executorCpuTime#1806L), sum(executorDeserializeTime#1807L), sum(executorDeserializeCpuTime#1808L), sum(resultSerializationTime#1809L), sum(jvmGCTime#1810L), sum(shuffleFetchWaitTime#1819L), sum(shuffleWriteTime#1828L), max(resultSize#1811L), sum(diskBytesSpilled#1812L), sum(memoryBytesSpilled#1813L), max(peakExecutionMemory#1814L), sum(recordsRead#1815L), sum(bytesRead#1816L), sum(recordsWritten#1817L), sum(bytesWritten#1818L), sum(shuffleRecordsRead#1827L), sum(shuffleTotalBlocksFetched#1821L), sum(shuffleLocalBlocksFetched#1822L), sum(shuffleRemoteBlocksFetched#1823L), sum(shuffleTotalBytesRead#1820L), sum(shuffleLocalBytesRead#1824L), sum(shuffleRemoteBytesRead#1825L), sum(shuffleRemoteBytesReadToDisk#1826L), sum(shuffleBytesWritten#1829L), sum(shuffleRecordsWritten#1830L)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=330]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1), partial_sum(numTasks#1804), partial_max(completionTime#1802L), partial_min(submissionTime#1801L), partial_sum(stageDuration#1803L), partial_sum(executorRunTime#1805L), partial_sum(executorCpuTime#1806L), partial_sum(executorDeserializeTime#1807L), partial_sum(executorDeserializeCpuTime#1808L), partial_sum(resultSerializationTime#1809L), partial_sum(jvmGCTime#1810L), partial_sum(shuffleFetchWaitTime#1819L), partial_sum(shuffleWriteTime#1828L), partial_max(resultSize#1811L), partial_sum(diskBytesSpilled#1812L), partial_sum(memoryBytesSpilled#1813L), partial_max(peakExecutionMemory#1814L), partial_sum(recordsRead#1815L), partial_sum(bytesRead#1816L), partial_sum(recordsWritten#1817L), partial_sum(bytesWritten#1818L), partial_sum(shuffleRecordsRead#1827L), partial_sum(shuffleTotalBlocksFetched#1821L), partial_sum(shuffleLocalBlocksFetched#1822L), partial_sum(shuffleRemoteBlocksFetched#1823L), partial_sum(shuffleTotalBytesRead#1820L), partial_sum(shuffleLocalBytesRead#1824L), partial_sum(shuffleRemoteBytesRead#1825L), partial_sum(shuffleRemoteBytesReadToDisk#1826L), partial_sum(shuffleBytesWritten#1829L), partial_sum(shuffleRecordsWritten#1830L)])","children":[{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [submissionTime#1801L, completionTime#1802L, stageDuration#1803L, numTasks#1804, executorRunTime#1805L, executorCpuTime#1806L, executorDeserializeTime#1807L, executorDeserializeCpuTime#1808L, resultSerializationTime#1809L, jvmGCTime#1810L, resultSize#1811L, diskBytesSpilled#1812L, memoryBytesSpilled#1813L, peakExecutionMemory#1814L, recordsRead#1815L, bytesRead#1816L, recordsWritten#1817L, bytesWritten#1818L, shuffleFetchWaitTime#1819L, shuffleTotalBytesRead#1820L, shuffleTotalBlocksFetched#1821L, shuffleLocalBlocksFetched#1822L, shuffleRemoteBlocksFetched#1823L, shuffleLocalBytesRead#1824L, shuffleRemoteBytesRead#1825L, shuffleRemoteBytesReadToDisk#1826L, shuffleRecordsRead#1827L, shuffleWriteTime#1828L, shuffleBytesWritten#1829L, shuffleRecordsWritten#1830L]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":558,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":554,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":555,"metricType":"timing"},{"name":"peak memory","accumulatorId":553,"metricType":"size"},{"name":"number of output rows","accumulatorId":552,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":557,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":556,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":587,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":585,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":579,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":586,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":580,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":577,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":574,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":583,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":576,"metricType":"sum"},{"name":"records read","accumulatorId":573,"metricType":"sum"},{"name":"local bytes read","accumulatorId":571,"metricType":"size"},{"name":"fetch wait time","accumulatorId":572,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":569,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":575,"metricType":"sum"},{"name":"local blocks read","accumulatorId":568,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":578,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":567,"metricType":"sum"},{"name":"data size","accumulatorId":565,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":581,"metricType":"size"},{"name":"number of partitions","accumulatorId":566,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":582,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":570,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":584,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":632,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":633,"metricType":"timing"},{"name":"peak memory","accumulatorId":631,"metricType":"size"},{"name":"number of output rows","accumulatorId":630,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":635,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":634,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":629,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"task commit time","accumulatorId":627,"metricType":"timing"},{"name":"number of written files","accumulatorId":623,"metricType":"sum"},{"name":"job commit time","accumulatorId":628,"metricType":"timing"},{"name":"number of output rows","accumulatorId":625,"metricType":"sum"},{"name":"number of dynamic part","accumulatorId":626,"metricType":"sum"},{"name":"written output","accumulatorId":624,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_6_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":180297,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_11_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":13366,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_7_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":37681,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_9_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":5178,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_10_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":90218,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_8_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":17574,"Disk Size":0}}
{"Event":"SparkListenerJobStart","Job ID":10,"Submission Time":1725742701473,"Stage Infos":[{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"96\",\"name\":\"Exchange\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"97\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"97\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"100\",\"name\":\"WriteFiles\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"105\",\"name\":\"Exchange\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"101\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[12],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[12,13],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.databricks.delta.lastCommitVersionInSession":"0","spark.executor.cores":"4","spark.sql.execution.root.id":"6","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"6","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"100\",\"name\":\"WriteFiles\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"105\",\"name\":\"Exchange\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"101\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[12],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742701475,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"35475","spark.databricks.delta.lastCommitVersionInSession":"0","spark.executor.cores":"4","spark.sql.execution.root.id":"6","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1725742650292","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:35475/jars/spark-measure_2.12-0.24.jar,spark://192.168.0.62:35475/jars/hadoop-aws-2.7.7.jar,spark://192.168.0.62:35475/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:35475/jars/jets3t-0.9.4.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"6","spark.history.fs.logDirectory":"file:/home/thiago/Documentos/logs/spark-events","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1725742650106","spark.eventLog.enabled":"True","spark.app.name":"bronze_to_silver_store_sales","spark.sql.parquet.fieldId.read.enabled":"true","spark.history.retainedApplications":"50","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.app.id":"local-1725742650943","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/spark-measure_2.12-0.24.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":40211},"Block ID":"broadcast_12_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":95966,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":13,"Stage Attempt ID":0,"Task Info":{"Task ID":13,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742701489,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":13,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":13,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725742701489,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725742701530,"Failed":false,"Killed":false,"Accumulables":[{"ID":568,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":571,"Name":"local bytes read","Update":"334","Value":"334","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":572,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":573,"Name":"records read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":627,"Name":"task commit time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":629,"Name":"duration","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":630,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":633,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":636,"Name":"internal.metrics.executorDeserializeTime","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":637,"Name":"internal.metrics.executorDeserializeCpuTime","Update":7007457,"Value":7007457,"Internal":true,"Count Failed Values":true},{"ID":638,"Name":"internal.metrics.executorRunTime","Update":29,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":639,"Name":"internal.metrics.executorCpuTime","Update":23305723,"Value":23305723,"Internal":true,"Count Failed Values":true},{"ID":640,"Name":"internal.metrics.resultSize","Update":3902,"Value":3902,"Internal":true,"Count Failed Values":true},{"ID":647,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":648,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":649,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":650,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":651,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":334,"Value":334,"Internal":true,"Count Failed Values":true},{"ID":652,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":653,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":654,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":655,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":656,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":657,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":658,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":659,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":660,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":661,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":663,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":669,"Name":"internal.metrics.output.bytesWritten","Update":767,"Value":767,"Internal":true,"Count Failed Values":true},{"ID":670,"Name":"internal.metrics.output.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":7,"Executor Deserialize CPU Time":7007457,"Executor Run Time":29,"Executor CPU Time":23305723,"Peak Execution Memory":0,"Result Size":3902,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":334,"Total Records Read":2,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":767,"Records Written":1},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"100\",\"name\":\"WriteFiles\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"105\",\"name\":\"Exchange\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"101\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[12],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1725742701475,"Completion Time":1725742701531,"Accumulables":[{"ID":568,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":571,"Name":"local bytes read","Value":"334","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":572,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":573,"Name":"records read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":627,"Name":"task commit time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":629,"Name":"duration","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":630,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":633,"Name":"time in aggregation build","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":636,"Name":"internal.metrics.executorDeserializeTime","Value":7,"Internal":true,"Count Failed Values":true},{"ID":637,"Name":"internal.metrics.executorDeserializeCpuTime","Value":7007457,"Internal":true,"Count Failed Values":true},{"ID":638,"Name":"internal.metrics.executorRunTime","Value":29,"Internal":true,"Count Failed Values":true},{"ID":639,"Name":"internal.metrics.executorCpuTime","Value":23305723,"Internal":true,"Count Failed Values":true},{"ID":640,"Name":"internal.metrics.resultSize","Value":3902,"Internal":true,"Count Failed Values":true},{"ID":647,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":648,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":2,"Internal":true,"Count Failed Values":true},{"ID":649,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":650,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":651,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":334,"Internal":true,"Count Failed Values":true},{"ID":652,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":653,"Name":"internal.metrics.shuffle.read.recordsRead","Value":2,"Internal":true,"Count Failed Values":true},{"ID":654,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":655,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":656,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":657,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":658,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":659,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":660,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":661,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":663,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":669,"Name":"internal.metrics.output.bytesWritten","Value":767,"Internal":true,"Count Failed Values":true},{"ID":670,"Name":"internal.metrics.output.recordsWritten","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":10,"Completion Time":1725742701532,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":6,"accumUpdates":[[623,1],[628,6],[625,1],[626,0],[624,767]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":6,"time":1725742701540,"errorMessage":""}
{"Event":"SparkListenerApplicationEnd","Timestamp":1725742701599}
