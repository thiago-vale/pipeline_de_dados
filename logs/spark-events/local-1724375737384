{"Event":"SparkListenerLogStart","Spark Version":"3.5.1"}
{"Event":"SparkListenerResourceProfileAdded","Resource Profile Id":0,"Executor Resource Requests":{"cores":{"Resource Name":"cores","Amount":4,"Discovery Script":"","Vendor":""},"memory":{"Resource Name":"memory","Amount":12288,"Discovery Script":"","Vendor":""},"offHeap":{"Resource Name":"offHeap","Amount":4096,"Discovery Script":"","Vendor":""}},"Task Resource Requests":{"cpus":{"Resource Name":"cpus","Amount":1.0}}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1724375737577,"Executor ID":"driver","Executor Info":{"Host":"192.168.0.62","Total Cores":8,"Log Urls":{},"Attributes":{},"Resources":{},"Resource Profile Id":0}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Maximum Memory":6396942745,"Timestamp":1724375737590,"Maximum Onheap Memory":2101975449,"Maximum Offheap Memory":4294967296}
{"Event":"SparkListenerEnvironmentUpdate","JVM Information":{"Java Home":"/usr/lib/jvm/java-8-openjdk-amd64/jre","Java Version":"1.8.0_422 (Private Build)","Scala Version":"version 2.12.18"},"Spark Properties":{"spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.driver.host":"192.168.0.62","spark.serializer.objectStreamReset":"100","spark.sql.autoBroadcastJoinThreshold":"-1","spark.eventLog.enabled":"True","spark.executor.heartbeatInterval":"100000000","spark.driver.port":"43357","spark.rdd.compress":"True","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.sql.parquet.int96RebaseModeInRead":"LEGACY","spark.app.name":"PySpark","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.scheduler.mode":"FIFO","spark.driver.memory":"4G","spark.executor.instances":"2","spark.logConf":"True","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.ui.showConsoleProgress":"True","spark.memory.offHeap.size":"4G","spark.sql.debug.maxToStringFields":"1000","spark.app.submitTime":"1724375736587","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.driver.bindAddress":"0.0.0.0","spark.default.parallelism":"2","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.app.startTime":"1724375736714","spark.executor.id":"driver","spark.sql.session.timeZone":"UTC","spark.eventLog.jsonFormat.enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.eventLog.logBlockUpdates.enabled":"true","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.submit.deployMode":"client","spark.sql.broadcastTimeout":"300000","spark.master":"local[*]","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.repl.eagerEval.enabled":"True","spark.executor.memory":"12G","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.executor.cores":"4","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.parquet.compression.codec":"snappy","spark.app.id":"local-1724375737384"},"Hadoop Properties":{"hadoop.service.shutdown.timeout":"30s","yarn.resourcemanager.amlauncher.thread-count":"50","yarn.sharedcache.enabled":"false","fs.s3a.connection.maximum":"96","yarn.nodemanager.numa-awareness.numactl.cmd":"/usr/bin/numactl","fs.viewfs.overload.scheme.target.o3fs.impl":"org.apache.hadoop.fs.ozone.OzoneFileSystem","fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.app.mapreduce.am.scheduler.heartbeat.interval-ms":"1000","yarn.timeline-service.timeline-client.number-of-async-entities-to-merge":"10","hadoop.security.kms.client.timeout":"60","hadoop.http.authentication.kerberos.principal":"HTTP/_HOST@LOCALHOST","mapreduce.jobhistory.loadedjob.tasks.max":"-1","yarn.resourcemanager.application-tag-based-placement.enable":"false","mapreduce.framework.name":"local","yarn.sharedcache.uploader.server.thread-count":"50","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds.min":"3600","yarn.nodemanager.linux-container-executor.nonsecure-mode.user-pattern":"^[_.A-Za-z0-9][-@_.A-Za-z0-9]{0,255}?[$]?$","tfile.fs.output.buffer.size":"262144","yarn.app.mapreduce.am.job.task.listener.thread-count":"30","yarn.nodemanager.node-attributes.resync-interval-ms":"120000","yarn.nodemanager.container-log-monitor.interval-ms":"60000","hadoop.security.groups.cache.background.reload.threads":"3","yarn.resourcemanager.webapp.cross-origin.enabled":"false","fs.AbstractFileSystem.ftp.impl":"org.apache.hadoop.fs.ftp.FtpFs","fs.viewfs.overload.scheme.target.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","hadoop.registry.secure":"false","hadoop.shell.safely.delete.limit.num.files":"100","mapreduce.job.acl-view-job":" ","fs.s3a.s3guard.ddb.background.sleep":"25ms","fs.s3a.retry.limit":"7","mapreduce.jobhistory.loadedjobs.cache.size":"5","fs.s3a.s3guard.ddb.table.create":"false","fs.viewfs.overload.scheme.target.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.nodemanager.amrmproxy.enabled":"false","yarn.timeline-service.entity-group-fs-store.with-user-dir":"false","mapreduce.shuffle.pathcache.expire-after-access-minutes":"5","mapreduce.input.fileinputformat.split.minsize":"0","yarn.resourcemanager.container.liveness-monitor.interval-ms":"600000","yarn.resourcemanager.client.thread-count":"50","io.seqfile.compress.blocksize":"1000000","yarn.nodemanager.runtime.linux.docker.allowed-container-runtimes":"runc","fs.viewfs.overload.scheme.target.http.impl":"org.apache.hadoop.fs.http.HttpFileSystem","yarn.resourcemanager.nodemanagers.heartbeat-interval-slowdown-factor":"1.0","yarn.sharedcache.checksum.algo.impl":"org.apache.hadoop.yarn.sharedcache.ChecksumSHA256Impl","yarn.nodemanager.amrmproxy.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor","yarn.timeline-service.entity-group-fs-store.leveldb-cache-read-cache-size":"10485760","mapreduce.reduce.shuffle.fetch.retry.interval-ms":"1000","mapreduce.task.profile.maps":"0-2","yarn.scheduler.include-port-in-node-name":"false","yarn.nodemanager.admin-env":"MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX","yarn.resourcemanager.node-removal-untracked.timeout-ms":"60000","mapreduce.am.max-attempts":"2","hadoop.security.kms.client.failover.sleep.base.millis":"100","mapreduce.jobhistory.webapp.https.address":"0.0.0.0:19890","yarn.node-labels.fs-store.impl.class":"org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore","yarn.nodemanager.collector-service.address":"${yarn.nodemanager.hostname}:8048","fs.trash.checkpoint.interval":"0","mapreduce.job.map.output.collector.class":"org.apache.hadoop.mapred.MapTask$MapOutputBuffer","yarn.resourcemanager.node-ip-cache.expiry-interval-secs":"-1","hadoop.http.authentication.signature.secret.file":"*********(redacted)","hadoop.jetty.logs.serve.aliases":"true","yarn.resourcemanager.placement-constraints.handler":"disabled","yarn.timeline-service.handler-thread-count":"10","yarn.resourcemanager.max-completed-applications":"1000","yarn.nodemanager.aux-services.manifest.enabled":"false","yarn.resourcemanager.system-metrics-publisher.enabled":"false","yarn.resourcemanager.placement-constraints.algorithm.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.constraint.algorithm.DefaultPlacementAlgorithm","yarn.sharedcache.webapp.address":"0.0.0.0:8788","fs.s3a.select.input.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.renew-interval":"*********(redacted)","yarn.sharedcache.nm.uploader.replication.factor":"10","hadoop.security.groups.negative-cache.secs":"30","yarn.app.mapreduce.task.container.log.backups":"0","mapreduce.reduce.skip.proc-count.auto-incr":"true","fs.viewfs.overload.scheme.target.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","hadoop.security.group.mapping.ldap.posix.attr.gid.name":"gidNumber","ipc.client.fallback-to-simple-auth-allowed":"false","yarn.nodemanager.resource.memory.enforced":"true","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.enable-batch":"false","yarn.client.failover-proxy-provider":"org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider","yarn.timeline-service.http-authentication.simple.anonymous.allowed":"true","ha.health-monitor.check-interval.ms":"1000","yarn.nodemanager.runtime.linux.runc.host-pid-namespace.allowed":"false","hadoop.metrics.jvm.use-thread-mxbean":"false","ipc.[port_number].faircallqueue.multiplexer.weights":"8,4,2,1","yarn.acl.reservation-enable":"false","yarn.resourcemanager.store.class":"org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore","yarn.app.mapreduce.am.hard-kill-timeout-ms":"10000","fs.s3a.etag.checksum.enabled":"false","yarn.nodemanager.container-metrics.enable":"true","ha.health-monitor.rpc.connect.max.retries":"1","yarn.timeline-service.client.fd-clean-interval-secs":"60","yarn.resourcemanager.nodemanagers.heartbeat-interval-scaling-enable":"false","yarn.resourcemanager.nodemanagers.heartbeat-interval-ms":"1000","hadoop.common.configuration.version":"3.0.0","fs.s3a.s3guard.ddb.table.capacity.read":"0","yarn.nodemanager.remote-app-log-dir-suffix":"logs","yarn.nodemanager.container-log-monitor.dir-size-limit-bytes":"1000000000","yarn.nodemanager.windows-container.cpu-limit.enabled":"false","yarn.nodemanager.runtime.linux.docker.privileged-containers.allowed":"false","file.blocksize":"67108864","hadoop.http.idle_timeout.ms":"60000","hadoop.registry.zk.retry.ceiling.ms":"60000","yarn.scheduler.configuration.leveldb-store.path":"${hadoop.tmp.dir}/yarn/system/confstore","yarn.sharedcache.store.in-memory.initial-delay-mins":"10","mapreduce.jobhistory.principal":"jhs/_HOST@REALM.TLD","mapreduce.map.skip.proc-count.auto-incr":"true","fs.s3a.committer.name":"file","mapreduce.task.profile.reduces":"0-2","hadoop.zk.num-retries":"1000","yarn.webapp.xfs-filter.enabled":"true","fs.viewfs.overload.scheme.target.hdfs.impl":"org.apache.hadoop.hdfs.DistributedFileSystem","seq.io.sort.mb":"100","yarn.scheduler.configuration.max.version":"100","yarn.timeline-service.webapp.https.address":"${yarn.timeline-service.hostname}:8190","yarn.resourcemanager.scheduler.address":"${yarn.resourcemanager.hostname}:8030","yarn.node-labels.enabled":"false","yarn.resourcemanager.webapp.ui-actions.enabled":"true","mapreduce.task.timeout":"600000","yarn.sharedcache.client-server.thread-count":"50","hadoop.security.groups.shell.command.timeout":"0s","hadoop.security.crypto.cipher.suite":"AES/CTR/NoPadding","yarn.nodemanager.elastic-memory-control.oom-handler":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.DefaultOOMHandler","yarn.resourcemanager.connect.max-wait.ms":"900000","fs.defaultFS":"file:///","yarn.minicluster.use-rpc":"false","ipc.[port_number].decay-scheduler.decay-factor":"0.5","fs.har.impl.disable.cache":"true","yarn.webapp.ui2.enable":"false","io.compression.codec.bzip2.library":"system-native","yarn.webapp.filter-invalid-xml-chars":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-interval-secs":"600","fs.s3a.select.input.csv.record.delimiter":"\\n","fs.s3a.change.detection.source":"etag","ipc.[port_number].backoff.enable":"false","yarn.nodemanager.distributed-scheduling.enabled":"false","mapreduce.shuffle.connection-keep-alive.timeout":"5","yarn.resourcemanager.webapp.https.address":"${yarn.resourcemanager.hostname}:8090","yarn.webapp.enable-rest-app-submissions":"true","mapreduce.jobhistory.address":"0.0.0.0:10020","yarn.resourcemanager.nm-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.is.minicluster":"false","yarn.nodemanager.address":"${yarn.nodemanager.hostname}:0","fs.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","fs.AbstractFileSystem.s3a.impl":"org.apache.hadoop.fs.s3a.S3A","mapreduce.task.combine.progress.records":"10000","yarn.resourcemanager.epoch.range":"0","yarn.resourcemanager.am.max-attempts":"2","yarn.nodemanager.runtime.linux.runc.image-toplevel-dir":"/runc-root","yarn.nodemanager.linux-container-executor.cgroups.hierarchy":"/hadoop-yarn","fs.AbstractFileSystem.wasbs.impl":"org.apache.hadoop.fs.azure.Wasbs","yarn.timeline-service.entity-group-fs-store.cache-store-class":"org.apache.hadoop.yarn.server.timeline.MemoryTimelineStore","yarn.nodemanager.runtime.linux.runc.allowed-container-networks":"host,none,bridge","fs.ftp.transfer.mode":"BLOCK_TRANSFER_MODE","ipc.server.log.slow.rpc":"false","ipc.server.reuseaddr":"true","fs.ftp.timeout":"0","yarn.resourcemanager.node-labels.provider.fetch-interval-ms":"1800000","yarn.router.webapp.https.address":"0.0.0.0:8091","yarn.nodemanager.webapp.cross-origin.enabled":"false","fs.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","yarn.resourcemanager.auto-update.containers":"false","yarn.app.mapreduce.am.job.committer.cancel-timeout":"60000","yarn.scheduler.configuration.zk-store.parent-path":"/confstore","yarn.nodemanager.default-container-executor.log-dirs.permissions":"710","yarn.app.attempt.diagnostics.limit.kc":"64","fs.viewfs.overload.scheme.target.swebhdfs.impl":"org.apache.hadoop.hdfs.web.SWebHdfsFileSystem","yarn.client.failover-no-ha-proxy-provider":"org.apache.hadoop.yarn.client.DefaultNoHARMFailoverProxyProvider","fs.s3a.change.detection.mode":"server","ftp.bytes-per-checksum":"512","yarn.nodemanager.resource.memory-mb":"-1","fs.AbstractFileSystem.abfs.impl":"org.apache.hadoop.fs.azurebfs.Abfs","yarn.timeline-service.writer.flush-interval-seconds":"60","fs.s3a.fast.upload.active.blocks":"4","yarn.resourcemanager.submission-preprocessor.enabled":"false","hadoop.security.credential.clear-text-fallback":"true","yarn.nodemanager.collector-service.thread-count":"5","ipc.[port_number].scheduler.impl":"org.apache.hadoop.ipc.DefaultRpcScheduler","fs.azure.secure.mode":"false","mapreduce.jobhistory.joblist.cache.size":"20000","fs.ftp.host":"0.0.0.0","yarn.timeline-service.writer.async.queue.capacity":"100","yarn.resourcemanager.fs.state-store.num-retries":"0","yarn.resourcemanager.nodemanager-connect-retries":"10","yarn.nodemanager.log-aggregation.num-log-files-per-app":"30","hadoop.security.kms.client.encrypted.key.cache.low-watermark":"0.3f","fs.s3a.committer.magic.enabled":"true","yarn.timeline-service.client.max-retries":"30","dfs.ha.fencing.ssh.connect-timeout":"30000","yarn.log-aggregation-enable":"false","yarn.system-metrics-publisher.enabled":"false","mapreduce.reduce.markreset.buffer.percent":"0.0","fs.AbstractFileSystem.viewfs.impl":"org.apache.hadoop.fs.viewfs.ViewFs","yarn.resourcemanager.nodemanagers.heartbeat-interval-speedup-factor":"1.0","mapreduce.task.io.sort.factor":"10","yarn.nodemanager.amrmproxy.client.thread-count":"25","ha.failover-controller.new-active.rpc-timeout.ms":"60000","yarn.nodemanager.container-localizer.java.opts":"-Xmx256m","mapreduce.jobhistory.datestring.cache.size":"200000","mapreduce.job.acl-modify-job":" ","yarn.nodemanager.windows-container.memory-limit.enabled":"false","yarn.timeline-service.webapp.address":"${yarn.timeline-service.hostname}:8188","yarn.app.mapreduce.am.job.committer.commit-window":"10000","yarn.nodemanager.container-manager.thread-count":"20","yarn.minicluster.fixed.ports":"false","hadoop.tags.system":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.cluster.max-application-priority":"0","yarn.timeline-service.ttl-enable":"true","mapreduce.jobhistory.recovery.store.fs.uri":"${hadoop.tmp.dir}/mapred/history/recoverystore","hadoop.caller.context.signature.max.size":"40","ipc.[port_number].decay-scheduler.backoff.responsetime.enable":"false","yarn.client.load.resource-types.from-server":"false","ha.zookeeper.session-timeout.ms":"10000","ipc.[port_number].decay-scheduler.metrics.top.user.count":"10","tfile.io.chunk.size":"1048576","fs.s3a.s3guard.ddb.table.capacity.write":"0","yarn.dispatcher.print-events-info.threshold":"5000","mapreduce.job.speculative.slowtaskthreshold":"1.0","io.serializations":"org.apache.hadoop.io.serializer.WritableSerialization, org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization, org.apache.hadoop.io.serializer.avro.AvroReflectSerialization","hadoop.security.kms.client.failover.sleep.max.millis":"2000","hadoop.security.group.mapping.ldap.directory.search.timeout":"10000","yarn.scheduler.configuration.store.max-logs":"1000","yarn.nodemanager.node-attributes.provider.fetch-interval-ms":"600000","fs.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","yarn.nodemanager.local-cache.max-files-per-directory":"8192","hadoop.http.cross-origin.enabled":"false","hadoop.zk.acl":"world:anyone:rwcda","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.num-manifests-to-cache":"10","mapreduce.map.sort.spill.percent":"0.80","yarn.timeline-service.entity-group-fs-store.scan-interval-seconds":"60","yarn.node-attribute.fs-store.impl.class":"org.apache.hadoop.yarn.server.resourcemanager.nodelabels.FileSystemNodeAttributeStore","fs.s3a.retry.interval":"500ms","yarn.timeline-service.client.best-effort":"false","yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled":"*********(redacted)","hadoop.security.group.mapping.ldap.posix.attr.uid.name":"uidNumber","fs.AbstractFileSystem.swebhdfs.impl":"org.apache.hadoop.fs.SWebHdfs","yarn.nodemanager.elastic-memory-control.timeout-sec":"5","fs.s3a.select.enabled":"true","mapreduce.ifile.readahead":"true","yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms":"300000","yarn.timeline-service.reader.webapp.address":"${yarn.timeline-service.webapp.address}","yarn.resourcemanager.placement-constraints.algorithm.pool-size":"1","yarn.timeline-service.hbase.coprocessor.jar.hdfs.location":"/hbase/coprocessor/hadoop-yarn-server-timelineservice.jar","hadoop.security.kms.client.encrypted.key.cache.num.refill.threads":"2","yarn.resourcemanager.scheduler.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler","yarn.app.mapreduce.am.command-opts":"-Xmx1024m","fs.s3a.metadatastore.fail.on.write.error":"true","hadoop.http.sni.host.check.enabled":"false","mapreduce.cluster.local.dir":"${hadoop.tmp.dir}/mapred/local","io.mapfile.bloom.error.rate":"0.005","fs.client.resolve.topology.enabled":"false","yarn.nodemanager.runtime.linux.allowed-runtimes":"default","yarn.sharedcache.store.class":"org.apache.hadoop.yarn.server.sharedcachemanager.store.InMemorySCMStore","ha.failover-controller.graceful-fence.rpc-timeout.ms":"5000","ftp.replication":"3","fs.getspaceused.jitterMillis":"60000","hadoop.security.uid.cache.secs":"14400","mapreduce.job.maxtaskfailures.per.tracker":"3","fs.s3a.metadatastore.impl":"org.apache.hadoop.fs.s3a.s3guard.NullMetadataStore","io.skip.checksum.errors":"false","yarn.app.mapreduce.client-am.ipc.max-retries-on-timeouts":"3","yarn.timeline-service.webapp.xfs-filter.xframe-options":"SAMEORIGIN","fs.s3a.connection.timeout":"200000","yarn.app.mapreduce.am.webapp.https.enabled":"false","mapreduce.job.max.split.locations":"15","yarn.resourcemanager.nm-container-queuing.max-queue-length":"15","yarn.resourcemanager.delegation-token.always-cancel":"*********(redacted)","hadoop.registry.zk.session.timeout.ms":"60000","yarn.federation.cache-ttl.secs":"300","mapreduce.jvm.system-properties-to-log":"os.name,os.version,java.home,java.runtime.version,java.vendor,java.version,java.vm.name,java.class.path,java.io.tmpdir,user.dir,user.name","yarn.resourcemanager.opportunistic-container-allocation.nodes-used":"10","yarn.timeline-service.entity-group-fs-store.active-dir":"/tmp/entity-file-history/active","mapreduce.shuffle.transfer.buffer.size":"131072","yarn.timeline-service.client.retry-interval-ms":"1000","yarn.timeline-service.flowname.max-size":"0","yarn.http.policy":"HTTP_ONLY","fs.s3a.socket.send.buffer":"8192","fs.AbstractFileSystem.abfss.impl":"org.apache.hadoop.fs.azurebfs.Abfss","yarn.sharedcache.uploader.server.address":"0.0.0.0:8046","yarn.resourcemanager.delegation-token.max-conf-size-bytes":"*********(redacted)","hadoop.http.authentication.token.validity":"*********(redacted)","mapreduce.shuffle.max.connections":"0","yarn.minicluster.yarn.nodemanager.resource.memory-mb":"4096","mapreduce.job.emit-timeline-data":"false","yarn.nodemanager.resource.system-reserved-memory-mb":"-1","hadoop.kerberos.min.seconds.before.relogin":"60","mapreduce.jobhistory.move.thread-count":"3","yarn.resourcemanager.admin.client.thread-count":"1","yarn.dispatcher.drain-events.timeout":"300000","ipc.[port_number].decay-scheduler.backoff.responsetime.thresholds":"10s,20s,30s,40s","fs.s3a.buffer.dir":"${hadoop.tmp.dir}/s3a","hadoop.ssl.enabled.protocols":"TLSv1.2","mapreduce.jobhistory.admin.address":"0.0.0.0:10033","yarn.log-aggregation-status.time-out.ms":"600000","fs.s3a.accesspoint.required":"false","mapreduce.shuffle.port":"13562","yarn.resourcemanager.max-log-aggregation-diagnostics-in-memory":"10","yarn.nodemanager.health-checker.interval-ms":"600000","yarn.resourcemanager.proxy.connection.timeout":"60000","yarn.router.clientrm.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.clientrm.DefaultClientRequestInterceptor","yarn.resourcemanager.zk-appid-node.split-index":"0","ftp.blocksize":"67108864","yarn.nodemanager.runtime.linux.sandbox-mode.local-dirs.permissions":"read","yarn.router.rmadmin.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.rmadmin.DefaultRMAdminRequestInterceptor","yarn.nodemanager.log-container-debug-info.enabled":"true","yarn.resourcemanager.activities-manager.app-activities.max-queue-length":"100","yarn.resourcemanager.application-https.policy":"NONE","yarn.client.max-cached-nodemanagers-proxies":"0","yarn.nodemanager.linux-container-executor.cgroups.delete-delay-ms":"20","yarn.nodemanager.delete.debug-delay-sec":"0","yarn.nodemanager.pmem-check-enabled":"true","yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage":"90.0","mapreduce.app-submission.cross-platform":"false","yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms":"10000","yarn.nodemanager.container-retry-minimum-interval-ms":"1000","hadoop.security.groups.cache.secs":"300","yarn.federation.enabled":"false","yarn.workflow-id.tag-prefix":"workflowid:","fs.azure.local.sas.key.mode":"false","ipc.maximum.data.length":"134217728","fs.s3a.endpoint":"s3.amazonaws.com","mapreduce.shuffle.max.threads":"0","yarn.router.pipeline.cache-max-size":"25","yarn.resourcemanager.nm-container-queuing.load-comparator":"QUEUE_LENGTH","yarn.resourcemanager.resource-tracker.nm.ip-hostname-check":"false","hadoop.security.authorization":"false","mapreduce.job.complete.cancel.delegation.tokens":"*********(redacted)","fs.s3a.paging.maximum":"5000","nfs.exports.allowed.hosts":"* rw","yarn.nodemanager.amrmproxy.ha.enable":"false","fs.AbstractFileSystem.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","mapreduce.jobhistory.http.policy":"HTTP_ONLY","yarn.sharedcache.store.in-memory.check-period-mins":"720","hadoop.security.group.mapping.ldap.ssl":"false","fs.s3a.downgrade.syncable.exceptions":"true","yarn.client.application-client-protocol.poll-interval-ms":"200","yarn.scheduler.configuration.leveldb-store.compaction-interval-secs":"86400","yarn.timeline-service.writer.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineWriterImpl","ha.zookeeper.parent-znode":"/hadoop-ha","yarn.resourcemanager.submission-preprocessor.file-refresh-interval-ms":"60000","yarn.nodemanager.log-aggregation.policy.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AllContainerLogAggregationPolicy","mapreduce.reduce.shuffle.merge.percent":"0.66","hadoop.security.group.mapping.ldap.search.filter.group":"(objectClass=group)","yarn.resourcemanager.placement-constraints.scheduler.pool-size":"1","yarn.resourcemanager.activities-manager.cleanup-interval-ms":"5000","yarn.nodemanager.resourcemanager.minimum.version":"NONE","mapreduce.job.speculative.speculative-cap-running-tasks":"0.1","yarn.admin.acl":"*","ipc.[port_number].identity-provider.impl":"org.apache.hadoop.ipc.UserIdentityProvider","yarn.nodemanager.recovery.supervised":"false","yarn.sharedcache.admin.thread-count":"1","yarn.resourcemanager.ha.automatic-failover.enabled":"true","yarn.nodemanager.container-log-monitor.total-size-limit-bytes":"10000000000","mapreduce.reduce.skip.maxgroups":"0","mapreduce.reduce.shuffle.connect.timeout":"180000","yarn.nodemanager.health-checker.scripts":"script","yarn.resourcemanager.address":"${yarn.resourcemanager.hostname}:8032","ipc.client.ping":"true","mapreduce.task.local-fs.write-limit.bytes":"-1","fs.adl.oauth2.access.token.provider.type":"*********(redacted)","mapreduce.shuffle.ssl.file.buffer.size":"65536","yarn.resourcemanager.ha.automatic-failover.embedded":"true","yarn.nodemanager.resource-plugins.gpu.docker-plugin":"nvidia-docker-v1","fs.s3a.s3guard.consistency.retry.interval":"2s","fs.s3a.multipart.purge":"false","yarn.scheduler.configuration.store.class":"file","yarn.resourcemanager.nm-container-queuing.queue-limit-stdev":"1.0f","mapreduce.job.end-notification.max.attempts":"5","mapreduce.output.fileoutputformat.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","yarn.nodemanager.container-monitor.procfs-tree.smaps-based-rss.enabled":"false","ipc.client.bind.wildcard.addr":"false","yarn.resourcemanager.webapp.rest-csrf.enabled":"false","ha.health-monitor.connect-retry-interval.ms":"1000","yarn.nodemanager.keytab":"/etc/krb5.keytab","mapreduce.jobhistory.keytab":"/etc/security/keytab/jhs.service.keytab","fs.s3a.threads.max":"64","yarn.nodemanager.runtime.linux.docker.image-update":"false","mapreduce.reduce.shuffle.input.buffer.percent":"0.70","fs.viewfs.overload.scheme.target.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","yarn.dispatcher.cpu-monitor.samples-per-min":"60","hadoop.security.token.service.use_ip":"*********(redacted)","yarn.nodemanager.runtime.linux.docker.allowed-container-networks":"host,none,bridge","yarn.nodemanager.node-labels.resync-interval-ms":"120000","hadoop.tmp.dir":"/tmp/hadoop-${user.name}","mapreduce.job.maps":"2","mapreduce.jobhistory.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.job.end-notification.max.retry.interval":"5000","yarn.log-aggregation.retain-check-interval-seconds":"-1","yarn.resourcemanager.resource-tracker.client.thread-count":"50","yarn.nodemanager.containers-launcher.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainersLauncher","yarn.rm.system-metrics-publisher.emit-container-events":"false","yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size":"10000","yarn.resourcemanager.ha.automatic-failover.zk-base-path":"/yarn-leader-election","io.seqfile.local.dir":"${hadoop.tmp.dir}/io/local","fs.s3a.s3guard.ddb.throttle.retry.interval":"100ms","fs.AbstractFileSystem.wasb.impl":"org.apache.hadoop.fs.azure.Wasb","mapreduce.client.submit.file.replication":"10","mapreduce.jobhistory.minicluster.fixed.ports":"false","fs.s3a.multipart.threshold":"128M","yarn.resourcemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","mapreduce.jobhistory.done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done","ipc.server.purge.interval":"15","ipc.client.idlethreshold":"4000","yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage":"false","mapreduce.reduce.input.buffer.percent":"0.0","yarn.nodemanager.runtime.linux.docker.userremapping-gid-threshold":"1","yarn.nodemanager.webapp.rest-csrf.enabled":"false","fs.ftp.host.port":"21","ipc.ping.interval":"60000","yarn.resourcemanager.history-writer.multi-threaded-dispatcher.pool-size":"10","yarn.resourcemanager.admin.address":"${yarn.resourcemanager.hostname}:8033","file.client-write-packet-size":"65536","ipc.client.kill.max":"10","mapreduce.reduce.speculative":"true","hadoop.security.key.default.bitlength":"128","mapreduce.job.reducer.unconditional-preempt.delay.sec":"300","yarn.nodemanager.disk-health-checker.interval-ms":"120000","yarn.nodemanager.log.deletion-threads-count":"4","fs.s3a.committer.abort.pending.uploads":"true","yarn.webapp.filter-entity-list-by-user":"false","yarn.resourcemanager.activities-manager.app-activities.ttl-ms":"600000","ipc.client.connection.maxidletime":"10000","mapreduce.task.io.sort.mb":"100","yarn.nodemanager.localizer.client.thread-count":"5","io.erasurecode.codec.rs.rawcoders":"rs_native,rs_java","io.erasurecode.codec.rs-legacy.rawcoders":"rs-legacy_java","yarn.sharedcache.admin.address":"0.0.0.0:8047","yarn.resourcemanager.placement-constraints.algorithm.iterator":"SERIAL","yarn.nodemanager.localizer.cache.cleanup.interval-ms":"600000","hadoop.security.crypto.codec.classes.aes.ctr.nopadding":"org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec, org.apache.hadoop.crypto.JceAesCtrCryptoCodec","mapreduce.job.cache.limit.max-resources-mb":"0","fs.s3a.connection.ssl.enabled":"true","yarn.nodemanager.process-kill-wait.ms":"5000","mapreduce.job.hdfs-servers":"${fs.defaultFS}","yarn.app.mapreduce.am.webapp.https.client.auth":"false","hadoop.workaround.non.threadsafe.getpwuid":"true","fs.df.interval":"60000","ipc.[port_number].decay-scheduler.thresholds":"13,25,50","fs.s3a.multiobjectdelete.enable":"true","yarn.sharedcache.cleaner.resource-sleep-ms":"0","yarn.nodemanager.disk-health-checker.min-healthy-disks":"0.25","hadoop.shell.missing.defaultFs.warning":"false","io.file.buffer.size":"65536","fs.viewfs.overload.scheme.target.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","hadoop.security.group.mapping.ldap.search.attr.member":"member","hadoop.security.random.device.file.path":"/dev/urandom","hadoop.security.sensitive-config-keys":"*********(redacted)","fs.s3a.s3guard.ddb.max.retries":"9","fs.viewfs.overload.scheme.target.file.impl":"org.apache.hadoop.fs.LocalFileSystem","hadoop.rpc.socket.factory.class.default":"org.apache.hadoop.net.StandardSocketFactory","yarn.intermediate-data-encryption.enable":"false","yarn.resourcemanager.connect.retry-interval.ms":"30000","yarn.nodemanager.container.stderr.pattern":"{*stderr*,*STDERR*}","yarn.scheduler.minimum-allocation-mb":"1024","yarn.app.mapreduce.am.staging-dir":"/tmp/hadoop-yarn/staging","mapreduce.reduce.shuffle.read.timeout":"180000","hadoop.http.cross-origin.max-age":"1800","io.erasurecode.codec.xor.rawcoders":"xor_native,xor_java","fs.s3a.s3guard.consistency.retry.limit":"7","fs.s3a.connection.establish.timeout":"5000","mapreduce.job.running.map.limit":"0","yarn.minicluster.control-resource-monitoring":"false","hadoop.ssl.require.client.cert":"false","hadoop.kerberos.kinit.command":"kinit","yarn.federation.state-store.class":"org.apache.hadoop.yarn.server.federation.store.impl.MemoryFederationStateStore","mapreduce.reduce.log.level":"INFO","hadoop.security.dns.log-slow-lookups.threshold.ms":"1000","mapreduce.job.ubertask.enable":"false","adl.http.timeout":"-1","yarn.resourcemanager.placement-constraints.retry-attempts":"3","hadoop.caller.context.enabled":"false","hadoop.security.group.mapping.ldap.num.attempts":"3","yarn.nodemanager.vmem-pmem-ratio":"2.1","hadoop.rpc.protection":"authentication","ha.health-monitor.rpc-timeout.ms":"45000","yarn.nodemanager.remote-app-log-dir":"/tmp/logs","hadoop.zk.timeout-ms":"10000","fs.s3a.s3guard.cli.prune.age":"86400000","yarn.nodemanager.resource.pcores-vcores-multiplier":"1.0","yarn.nodemanager.runtime.linux.sandbox-mode":"disabled","yarn.app.mapreduce.am.containerlauncher.threadpool-initial-size":"10","fs.viewfs.overload.scheme.target.webhdfs.impl":"org.apache.hadoop.hdfs.web.WebHdfsFileSystem","fs.s3a.committer.threads":"8","hadoop.zk.retry-interval-ms":"1000","hadoop.security.crypto.buffer.size":"8192","yarn.nodemanager.node-labels.provider.fetch-interval-ms":"600000","mapreduce.jobhistory.recovery.store.leveldb.path":"${hadoop.tmp.dir}/mapred/history/recoverystore","yarn.client.failover-retries-on-socket-timeouts":"0","fs.s3a.ssl.channel.mode":"default_jsse","yarn.nodemanager.resource.memory.enabled":"false","fs.azure.authorization.caching.enable":"true","hadoop.security.instrumentation.requires.admin":"false","yarn.nodemanager.delete.thread-count":"4","mapreduce.job.finish-when-all-reducers-done":"true","hadoop.registry.jaas.context":"Client","yarn.timeline-service.leveldb-timeline-store.path":"${hadoop.tmp.dir}/yarn/timeline","io.map.index.interval":"128","yarn.resourcemanager.nm-container-queuing.max-queue-wait-time-ms":"100","fs.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","mapreduce.job.counters.max":"120","mapreduce.jobhistory.webapp.rest-csrf.enabled":"false","yarn.timeline-service.store-class":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.jobhistory.move.interval-ms":"180000","fs.s3a.change.detection.version.required":"true","yarn.nodemanager.localizer.fetch.thread-count":"4","yarn.resourcemanager.scheduler.client.thread-count":"50","hadoop.ssl.hostname.verifier":"DEFAULT","yarn.timeline-service.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/timeline","mapreduce.job.classloader":"false","mapreduce.task.profile.map.params":"${mapreduce.task.profile.params}","ipc.client.connect.timeout":"20000","hadoop.security.auth_to_local.mechanism":"hadoop","yarn.timeline-service.app-collector.linger-period.ms":"60000","yarn.nm.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.reservation-system.planfollower.time-step":"1000","yarn.resourcemanager.proxy.timeout.enabled":"true","yarn.resourcemanager.activities-manager.scheduler-activities.ttl-ms":"600000","yarn.nodemanager.runtime.linux.docker.enable-userremapping.allowed":"true","yarn.webapp.api-service.enable":"false","yarn.nodemanager.recovery.enabled":"false","mapreduce.job.end-notification.retry.interval":"1000","fs.du.interval":"600000","fs.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","yarn.nodemanager.container.stderr.tail.bytes":"4096","yarn.nodemanager.disk-health-checker.disk-free-space-threshold.enabled":"true","hadoop.security.group.mapping.ldap.read.timeout.ms":"60000","hadoop.security.groups.cache.warn.after.ms":"5000","file.bytes-per-checksum":"512","mapreduce.outputcommitter.factory.scheme.s3a":"org.apache.hadoop.fs.s3a.commit.S3ACommitterFactory","hadoop.security.groups.cache.background.reload":"false","yarn.nodemanager.container-monitor.enabled":"true","yarn.nodemanager.elastic-memory-control.enabled":"false","net.topology.script.number.args":"100","mapreduce.task.merge.progress.records":"10000","yarn.nodemanager.localizer.address":"${yarn.nodemanager.hostname}:8040","yarn.timeline-service.keytab":"/etc/krb5.keytab","mapreduce.reduce.shuffle.fetch.retry.timeout-ms":"30000","yarn.resourcemanager.rm.container-allocation.expiry-interval-ms":"600000","yarn.nodemanager.container-executor.exit-code-file.timeout-ms":"2000","mapreduce.fileoutputcommitter.algorithm.version":"1","yarn.resourcemanager.work-preserving-recovery.enabled":"true","mapreduce.map.skip.maxrecords":"0","yarn.sharedcache.root-dir":"/sharedcache","fs.s3a.retry.throttle.limit":"20","hadoop.http.authentication.type":"simple","fs.viewfs.overload.scheme.target.oss.impl":"org.apache.hadoop.fs.aliyun.oss.AliyunOSSFileSystem","mapreduce.job.cache.limit.max-resources":"0","mapreduce.task.userlog.limit.kb":"0","ipc.[port_number].weighted-cost.handler":"1","yarn.resourcemanager.scheduler.monitor.enable":"false","ipc.client.connect.max.retries":"10","hadoop.registry.zk.retry.times":"5","yarn.nodemanager.resource-monitor.interval-ms":"3000","yarn.nodemanager.resource-plugins.gpu.allowed-gpu-devices":"auto","mapreduce.job.sharedcache.mode":"disabled","yarn.nodemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.shuffle.listen.queue.size":"128","yarn.scheduler.configuration.mutation.acl-policy.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.DefaultConfigurationMutationACLPolicy","mapreduce.map.cpu.vcores":"1","yarn.log-aggregation.file-formats":"TFile","yarn.timeline-service.client.fd-retain-secs":"300","fs.s3a.select.output.csv.field.delimiter":",","yarn.nodemanager.health-checker.timeout-ms":"1200000","hadoop.user.group.static.mapping.overrides":"dr.who=;","fs.azure.sas.expiry.period":"90d","fs.s3a.select.output.csv.record.delimiter":"\\n","mapreduce.jobhistory.recovery.store.class":"org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService","fs.viewfs.overload.scheme.target.https.impl":"org.apache.hadoop.fs.http.HttpsFileSystem","fs.s3a.s3guard.ddb.table.sse.enabled":"false","yarn.resourcemanager.fail-fast":"${yarn.fail-fast}","yarn.resourcemanager.proxy-user-privileges.enabled":"false","yarn.router.webapp.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.webapp.DefaultRequestInterceptorREST","yarn.nodemanager.resource.memory.cgroups.soft-limit-percentage":"90.0","mapreduce.job.reducer.preempt.delay.sec":"0","hadoop.util.hash.type":"murmur","yarn.nodemanager.disk-validator":"basic","yarn.app.mapreduce.client.job.max-retries":"3","fs.viewfs.overload.scheme.target.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","mapreduce.reduce.shuffle.retry-delay.max.ms":"60000","hadoop.security.group.mapping.ldap.connection.timeout.ms":"60000","mapreduce.task.profile.params":"-agentlib:hprof=cpu=samples,heap=sites,force=n,thread=y,verbose=n,file=%s","yarn.app.mapreduce.shuffle.log.backups":"0","yarn.nodemanager.container-diagnostics-maximum-size":"10000","hadoop.registry.zk.retry.interval.ms":"1000","yarn.nodemanager.linux-container-executor.cgroups.delete-timeout-ms":"1000","fs.AbstractFileSystem.file.impl":"org.apache.hadoop.fs.local.LocalFs","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds":"-1","mapreduce.jobhistory.cleaner.interval-ms":"86400000","hadoop.registry.zk.quorum":"localhost:2181","yarn.nodemanager.runtime.linux.runc.allowed-container-runtimes":"runc","mapreduce.output.fileoutputformat.compress":"false","yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs":"*********(redacted)","fs.s3a.assumed.role.session.duration":"30m","hadoop.security.group.mapping.ldap.conversion.rule":"none","hadoop.ssl.server.conf":"ssl-server.xml","fs.s3a.retry.throttle.interval":"100ms","seq.io.sort.factor":"100","fs.viewfs.overload.scheme.target.ofs.impl":"org.apache.hadoop.fs.ozone.RootedOzoneFileSystem","yarn.sharedcache.cleaner.initial-delay-mins":"10","mapreduce.client.completion.pollinterval":"5000","hadoop.ssl.keystores.factory.class":"org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory","yarn.app.mapreduce.am.resource.cpu-vcores":"1","yarn.timeline-service.enabled":"false","yarn.nodemanager.runtime.linux.docker.capabilities":"CHOWN,DAC_OVERRIDE,FSETID,FOWNER,MKNOD,NET_RAW,SETGID,SETUID,SETFCAP,SETPCAP,NET_BIND_SERVICE,SYS_CHROOT,KILL,AUDIT_WRITE","yarn.acl.enable":"false","yarn.timeline-service.entity-group-fs-store.done-dir":"/tmp/entity-file-history/done/","hadoop.security.group.mapping.ldap.num.attempts.before.failover":"3","mapreduce.task.profile":"false","hadoop.prometheus.endpoint.enabled":"false","yarn.resourcemanager.fs.state-store.uri":"${hadoop.tmp.dir}/yarn/system/rmstore","mapreduce.jobhistory.always-scan-user-dir":"false","fs.s3a.metadatastore.metadata.ttl":"15m","yarn.nodemanager.opportunistic-containers-use-pause-for-preemption":"false","yarn.nodemanager.linux-container-executor.nonsecure-mode.local-user":"nobody","yarn.timeline-service.reader.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineReaderImpl","yarn.resourcemanager.configuration.provider-class":"org.apache.hadoop.yarn.LocalConfigurationProvider","yarn.nodemanager.runtime.linux.docker.userremapping-uid-threshold":"1","yarn.resourcemanager.configuration.file-system-based-store":"/yarn/conf","mapreduce.job.cache.limit.max-single-resource-mb":"0","yarn.nodemanager.runtime.linux.docker.stop.grace-period":"10","yarn.resourcemanager.resource-profiles.source-file":"resource-profiles.json","mapreduce.job.dfs.storage.capacity.kill-limit-exceed":"false","yarn.nodemanager.resource.percentage-physical-cpu-limit":"100","mapreduce.jobhistory.client.thread-count":"10","tfile.fs.input.buffer.size":"262144","mapreduce.client.progressmonitor.pollinterval":"1000","yarn.nodemanager.log-dirs":"${yarn.log.dir}/userlogs","yarn.resourcemanager.opportunistic.max.container-allocation.per.am.heartbeat":"-1","fs.automatic.close":"true","yarn.resourcemanager.delegation-token-renewer.thread-retry-interval":"*********(redacted)","fs.s3a.select.input.csv.quote.character":"\"","yarn.nodemanager.hostname":"0.0.0.0","ipc.[port_number].cost-provider.impl":"org.apache.hadoop.ipc.DefaultCostProvider","yarn.nodemanager.runtime.linux.runc.manifest-to-resources-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.HdfsManifestToResourcesPlugin","yarn.nodemanager.remote-app-log-dir-include-older":"true","yarn.nodemanager.resource.memory.cgroups.swappiness":"0","ftp.stream-buffer-size":"4096","yarn.fail-fast":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-to-keep":"100","yarn.timeline-service.app-aggregation-interval-secs":"15","hadoop.security.group.mapping.ldap.search.filter.user":"(&(objectClass=user)(sAMAccountName={0}))","ipc.[port_number].weighted-cost.lockshared":"10","yarn.nodemanager.container-localizer.log.level":"INFO","yarn.timeline-service.address":"${yarn.timeline-service.hostname}:10200","mapreduce.job.ubertask.maxmaps":"9","fs.s3a.threads.keepalivetime":"60","mapreduce.jobhistory.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.task.files.preserve.failedtasks":"false","yarn.app.mapreduce.client.job.retry-interval":"2000","ha.failover-controller.graceful-fence.connection.retries":"1","fs.s3a.select.output.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.max-lifetime":"*********(redacted)","hadoop.kerberos.keytab.login.autorenewal.enabled":"false","yarn.timeline-service.client.drain-entities.timeout.ms":"2000","yarn.nodemanager.resource-plugins.fpga.vendor-plugin.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin","yarn.resourcemanager.nodemanagers.heartbeat-interval-min-ms":"1000","yarn.timeline-service.entity-group-fs-store.summary-store":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.reduce.cpu.vcores":"1","mapreduce.job.encrypted-intermediate-data.buffer.kb":"128","fs.client.resolve.remote.symlinks":"true","yarn.nodemanager.webapp.https.address":"0.0.0.0:8044","hadoop.http.cross-origin.allowed-origins":"*","mapreduce.job.encrypted-intermediate-data":"false","yarn.nodemanager.disk-health-checker.disk-utilization-threshold.enabled":"true","fs.s3a.executor.capacity":"16","yarn.timeline-service.entity-group-fs-store.retain-seconds":"604800","yarn.resourcemanager.metrics.runtime.buckets":"60,300,1440","yarn.timeline-service.generic-application-history.max-applications":"10000","yarn.nodemanager.local-dirs":"${hadoop.tmp.dir}/nm-local-dir","mapreduce.shuffle.connection-keep-alive.enable":"false","yarn.node-labels.configuration-type":"centralized","fs.s3a.path.style.access":"false","yarn.nodemanager.aux-services.mapreduce_shuffle.class":"org.apache.hadoop.mapred.ShuffleHandler","yarn.sharedcache.store.in-memory.staleness-period-mins":"10080","fs.adl.impl":"org.apache.hadoop.fs.adl.AdlFileSystem","yarn.resourcemanager.application.max-tags":"10","hadoop.domainname.resolver.impl":"org.apache.hadoop.net.DNSDomainNameResolver","yarn.resourcemanager.nodemanager.minimum.version":"NONE","mapreduce.jobhistory.webapp.xfs-filter.xframe-options":"SAMEORIGIN","yarn.app.mapreduce.am.staging-dir.erasurecoding.enabled":"false","net.topology.impl":"org.apache.hadoop.net.NetworkTopology","io.map.index.skip":"0","yarn.timeline-service.reader.webapp.https.address":"${yarn.timeline-service.webapp.https.address}","fs.ftp.data.connection.mode":"ACTIVE_LOCAL_DATA_CONNECTION_MODE","mapreduce.job.local-fs.single-disk-limit.check.kill-limit-exceed":"true","fs.azure.buffer.dir":"${hadoop.tmp.dir}/abfs","yarn.scheduler.maximum-allocation-vcores":"4","hadoop.http.cross-origin.allowed-headers":"X-Requested-With,Content-Type,Accept,Origin","yarn.nodemanager.log-aggregation.compression-type":"none","yarn.timeline-service.version":"1.0f","yarn.ipc.rpc.class":"org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC","mapreduce.reduce.maxattempts":"4","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.batch-size":"1000","hadoop.security.dns.log-slow-lookups.enabled":"false","mapreduce.job.committer.setup.cleanup.needed":"true","hadoop.security.secure.random.impl":"org.apache.hadoop.crypto.random.OpensslSecureRandom","mapreduce.job.running.reduce.limit":"0","fs.s3a.select.errors.include.sql":"false","fs.s3a.connection.request.timeout":"0","ipc.maximum.response.length":"134217728","yarn.resourcemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.job.token.tracking.ids.enabled":"*********(redacted)","hadoop.caller.context.max.size":"128","yarn.nodemanager.runtime.linux.docker.host-pid-namespace.allowed":"false","yarn.nodemanager.runtime.linux.docker.delayed-removal.allowed":"false","hadoop.registry.system.acls":"sasl:yarn@, sasl:mapred@, sasl:hdfs@","yarn.nodemanager.recovery.dir":"${hadoop.tmp.dir}/yarn-nm-recovery","fs.s3a.fast.upload.buffer":"disk","mapreduce.jobhistory.intermediate-done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done_intermediate","yarn.app.mapreduce.shuffle.log.separate":"true","yarn.log-aggregation.debug.filesize":"104857600","fs.s3a.max.total.tasks":"32","fs.s3a.readahead.range":"64K","hadoop.http.authentication.simple.anonymous.allowed":"true","fs.s3a.attempts.maximum":"20","hadoop.registry.zk.connection.timeout.ms":"15000","yarn.resourcemanager.delegation-token-renewer.thread-count":"*********(redacted)","yarn.resourcemanager.delegation-token-renewer.thread-timeout":"*********(redacted)","yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size":"10000","yarn.nodemanager.aux-services.manifest.reload-ms":"0","yarn.nodemanager.emit-container-events":"true","yarn.resourcemanager.resource-profiles.enabled":"false","yarn.timeline-service.hbase-schema.prefix":"prod.","fs.azure.authorization":"false","mapreduce.map.log.level":"INFO","ha.failover-controller.active-standby-elector.zk.op.retries":"3","yarn.resourcemanager.decommissioning-nodes-watcher.poll-interval-secs":"20","mapreduce.output.fileoutputformat.compress.type":"RECORD","yarn.resourcemanager.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/system/rmstore","yarn.timeline-service.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.ifile.readahead.bytes":"4194304","yarn.sharedcache.app-checker.class":"org.apache.hadoop.yarn.server.sharedcachemanager.RemoteAppChecker","yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users":"true","yarn.nodemanager.resource.detect-hardware-capabilities":"false","mapreduce.cluster.acls.enabled":"false","mapreduce.job.speculative.retry-after-no-speculate":"1000","fs.viewfs.overload.scheme.target.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","hadoop.security.group.mapping.ldap.search.group.hierarchy.levels":"0","yarn.resourcemanager.fs.state-store.retry-interval-ms":"1000","file.stream-buffer-size":"4096","yarn.resourcemanager.application-timeouts.monitor.interval-ms":"3000","mapreduce.map.output.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","mapreduce.map.speculative":"true","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.hdfs-hash-file":"/runc-root/image-tag-to-hash","mapreduce.job.speculative.retry-after-speculate":"15000","yarn.nodemanager.linux-container-executor.cgroups.mount":"false","yarn.app.mapreduce.am.container.log.backups":"0","yarn.app.mapreduce.am.log.level":"INFO","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.ImageTagToManifestPlugin","io.bytes.per.checksum":"512","mapreduce.job.reduce.slowstart.completedmaps":"0.05","yarn.timeline-service.http-authentication.type":"simple","hadoop.security.group.mapping.ldap.search.attr.group.name":"cn","yarn.nodemanager.resource-plugins.fpga.allowed-fpga-devices":"auto","yarn.timeline-service.client.internal-timers-ttl-secs":"420","fs.s3a.select.output.csv.quote.character":"\"","hadoop.http.logs.enabled":"true","fs.s3a.block.size":"32M","yarn.sharedcache.client-server.address":"0.0.0.0:8045","yarn.nodemanager.logaggregation.threadpool-size-max":"100","yarn.resourcemanager.hostname":"0.0.0.0","yarn.resourcemanager.delegation.key.update-interval":"86400000","mapreduce.reduce.shuffle.fetch.retry.enabled":"${yarn.nodemanager.recovery.enabled}","mapreduce.map.memory.mb":"-1","mapreduce.task.skip.start.attempts":"2","fs.AbstractFileSystem.hdfs.impl":"org.apache.hadoop.fs.Hdfs","yarn.nodemanager.disk-health-checker.enable":"true","fs.s3a.select.output.csv.quote.fields":"always","ipc.client.tcpnodelay":"true","ipc.client.rpc-timeout.ms":"0","yarn.nodemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","yarn.resourcemanager.delegation-token-renewer.thread-retry-max-attempts":"*********(redacted)","ipc.client.low-latency":"false","mapreduce.input.lineinputformat.linespermap":"1","yarn.router.interceptor.user.threadpool-size":"5","ipc.client.connect.max.retries.on.timeouts":"45","yarn.timeline-service.leveldb-timeline-store.read-cache-size":"104857600","fs.AbstractFileSystem.har.impl":"org.apache.hadoop.fs.HarFs","mapreduce.job.split.metainfo.maxsize":"10000000","yarn.am.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.timeline-service.entity-group-fs-store.app-cache-size":"10","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-timeout-interval-secs":"360","fs.s3a.socket.recv.buffer":"8192","rpc.metrics.timeunit":"MILLISECONDS","yarn.resourcemanager.resource-tracker.address":"${yarn.resourcemanager.hostname}:8031","yarn.nodemanager.node-labels.provider.fetch-timeout-ms":"1200000","mapreduce.job.heap.memory-mb.ratio":"0.8","yarn.resourcemanager.leveldb-state-store.compaction-interval-secs":"3600","yarn.resourcemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","yarn.nodemanager.pluggable-device-framework.enabled":"false","yarn.scheduler.configuration.fs.path":"file://${hadoop.tmp.dir}/yarn/system/schedconf","mapreduce.client.output.filter":"FAILED","hadoop.http.filter.initializers":"org.apache.hadoop.http.lib.StaticUserWebFilter","mapreduce.reduce.memory.mb":"-1","yarn.timeline-service.hostname":"0.0.0.0","file.replication":"1","yarn.nodemanager.container-metrics.unregister-delay-ms":"10000","yarn.nodemanager.container-metrics.period-ms":"-1","mapreduce.fileoutputcommitter.task.cleanup.enabled":"false","yarn.nodemanager.log.retain-seconds":"10800","yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds":"3600","ipc.[port_number].callqueue.impl":"java.util.concurrent.LinkedBlockingQueue","yarn.resourcemanager.keytab":"/etc/krb5.keytab","hadoop.security.group.mapping.providers.combined":"true","mapreduce.reduce.merge.inmem.threshold":"1000","yarn.timeline-service.recovery.enabled":"false","fs.azure.saskey.usecontainersaskeyforallaccess":"true","yarn.sharedcache.nm.uploader.thread-count":"20","yarn.resourcemanager.nodemanager-graceful-decommission-timeout-secs":"3600","ipc.[port_number].weighted-cost.lockfree":"1","mapreduce.shuffle.ssl.enabled":"false","yarn.timeline-service.hbase.coprocessor.app-final-value-retention-milliseconds":"259200000","yarn.nodemanager.opportunistic-containers-max-queue-length":"0","yarn.resourcemanager.state-store.max-completed-applications":"${yarn.resourcemanager.max-completed-applications}","mapreduce.job.speculative.minimum-allowed-tasks":"10","fs.s3a.aws.credentials.provider":"\n    org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider,\n    org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider,\n    com.amazonaws.auth.EnvironmentVariableCredentialsProvider,\n    org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider\n  ","yarn.log-aggregation.retain-seconds":"-1","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb":"0","mapreduce.jobhistory.max-age-ms":"604800000","hadoop.http.cross-origin.allowed-methods":"GET,POST,HEAD","yarn.resourcemanager.opportunistic-container-allocation.enabled":"false","mapreduce.jobhistory.webapp.address":"0.0.0.0:19888","hadoop.system.tags":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.log-aggregation.file-controller.TFile.class":"org.apache.hadoop.yarn.logaggregation.filecontroller.tfile.LogAggregationTFileController","yarn.client.nodemanager-connect.max-wait-ms":"180000","yarn.resourcemanager.webapp.address":"${yarn.resourcemanager.hostname}:8088","mapreduce.jobhistory.recovery.enable":"false","mapreduce.reduce.shuffle.parallelcopies":"5","fs.AbstractFileSystem.webhdfs.impl":"org.apache.hadoop.fs.WebHdfs","fs.trash.interval":"0","yarn.app.mapreduce.client.max-retries":"3","hadoop.security.authentication":"simple","mapreduce.task.profile.reduce.params":"${mapreduce.task.profile.params}","yarn.app.mapreduce.am.resource.mb":"1536","mapreduce.input.fileinputformat.list-status.num-threads":"1","yarn.nodemanager.container-executor.class":"org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor","io.mapfile.bloom.size":"1048576","yarn.timeline-service.ttl-ms":"604800000","yarn.resourcemanager.nm-container-queuing.min-queue-length":"5","yarn.nodemanager.resource.cpu-vcores":"-1","mapreduce.job.reduces":"1","fs.s3a.multipart.size":"64M","fs.s3a.select.input.csv.comment.marker":"#","yarn.scheduler.minimum-allocation-vcores":"1","mapreduce.job.speculative.speculative-cap-total-tasks":"0.01","hadoop.ssl.client.conf":"ssl-client.xml","mapreduce.job.queuename":"default","mapreduce.job.encrypted-intermediate-data-key-size-bits":"128","fs.s3a.metadatastore.authoritative":"false","ipc.[port_number].weighted-cost.response":"1","yarn.nodemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","ha.health-monitor.sleep-after-disconnect.ms":"1000","yarn.app.mapreduce.shuffle.log.limit.kb":"0","hadoop.security.group.mapping":"org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback","yarn.client.application-client-protocol.poll-timeout-ms":"-1","mapreduce.jobhistory.jhist.format":"binary","mapreduce.task.stuck.timeout-ms":"600000","yarn.resourcemanager.application.max-tag.length":"100","yarn.resourcemanager.ha.enabled":"false","dfs.client.ignore.namenode.default.kms.uri":"false","hadoop.http.staticuser.user":"dr.who","mapreduce.task.exit.timeout.check-interval-ms":"20000","mapreduce.jobhistory.intermediate-user-done-dir.permissions":"770","mapreduce.task.exit.timeout":"60000","yarn.nodemanager.linux-container-executor.resources-handler.class":"org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler","mapreduce.reduce.shuffle.memory.limit.percent":"0.25","yarn.resourcemanager.reservation-system.enable":"false","mapreduce.map.output.compress":"false","ha.zookeeper.acl":"world:anyone:rwcda","ipc.server.max.connections":"0","yarn.nodemanager.runtime.linux.docker.default-container-network":"host","yarn.router.webapp.address":"0.0.0.0:8089","yarn.scheduler.maximum-allocation-mb":"8192","yarn.resourcemanager.scheduler.monitor.policies":"org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy","yarn.sharedcache.cleaner.period-mins":"1440","yarn.nodemanager.resource-plugins.gpu.docker-plugin.nvidia-docker-v1.endpoint":"http://localhost:3476/v1.0/docker/cli","yarn.app.mapreduce.am.container.log.limit.kb":"0","ipc.client.connect.retry.interval":"1000","yarn.timeline-service.http-cross-origin.enabled":"false","fs.wasbs.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem$Secure","yarn.resourcemanager.nodemanagers.heartbeat-interval-max-ms":"1000","yarn.federation.subcluster-resolver.class":"org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl","yarn.resourcemanager.zk-state-store.parent-path":"/rmstore","fs.s3a.select.input.csv.field.delimiter":",","mapreduce.jobhistory.cleaner.enable":"true","yarn.timeline-service.client.fd-flush-interval-secs":"10","hadoop.security.kms.client.encrypted.key.cache.expiry":"43200000","yarn.client.nodemanager-client-async.thread-pool-max-size":"500","mapreduce.map.maxattempts":"4","yarn.resourcemanager.nm-container-queuing.sorting-nodes-interval-ms":"1000","fs.s3a.committer.staging.tmp.path":"tmp/staging","yarn.nodemanager.sleep-delay-before-sigkill.ms":"250","yarn.resourcemanager.nm-container-queuing.min-queue-wait-time-ms":"10","mapreduce.job.end-notification.retry.attempts":"0","yarn.nodemanager.resource.count-logical-processors-as-cores":"false","hadoop.registry.zk.root":"/registry","adl.feature.ownerandgroup.enableupn":"false","yarn.resourcemanager.zk-max-znode-size.bytes":"1048576","mapreduce.job.reduce.shuffle.consumer.plugin.class":"org.apache.hadoop.mapreduce.task.reduce.Shuffle","yarn.resourcemanager.delayed.delegation-token.removal-interval-ms":"*********(redacted)","yarn.nodemanager.localizer.cache.target-size-mb":"10240","fs.s3a.committer.staging.conflict-mode":"append","mapreduce.client.libjars.wildcard":"true","fs.s3a.committer.staging.unique-filenames":"true","yarn.nodemanager.node-attributes.provider.fetch-timeout-ms":"1200000","fs.s3a.list.version":"2","ftp.client-write-packet-size":"65536","ipc.[port_number].weighted-cost.lockexclusive":"100","fs.AbstractFileSystem.adl.impl":"org.apache.hadoop.fs.adl.Adl","yarn.nodemanager.container-log-monitor.enable":"false","hadoop.security.key.default.cipher":"AES/CTR/NoPadding","yarn.client.failover-retries":"0","fs.s3a.multipart.purge.age":"86400","mapreduce.job.local-fs.single-disk-limit.check.interval-ms":"5000","net.topology.node.switch.mapping.impl":"org.apache.hadoop.net.ScriptBasedMapping","yarn.nodemanager.amrmproxy.address":"0.0.0.0:8049","ipc.server.listen.queue.size":"256","ipc.[port_number].decay-scheduler.period-ms":"5000","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.cache-refresh-interval-secs":"60","map.sort.class":"org.apache.hadoop.util.QuickSort","fs.viewfs.rename.strategy":"SAME_MOUNTPOINT","hadoop.security.kms.client.authentication.retry-count":"1","fs.permissions.umask-mode":"022","fs.s3a.assumed.role.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","yarn.nodemanager.runtime.linux.runc.privileged-containers.allowed":"false","yarn.nodemanager.vmem-check-enabled":"true","yarn.nodemanager.numa-awareness.enabled":"false","yarn.nodemanager.recovery.compaction-interval-secs":"3600","yarn.app.mapreduce.client-am.ipc.max-retries":"3","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.interval-seconds":"60","yarn.federation.registry.base-dir":"yarnfederation/","yarn.nodemanager.health-checker.run-before-startup":"false","mapreduce.job.max.map":"-1","mapreduce.job.local-fs.single-disk-limit.bytes":"-1","mapreduce.shuffle.pathcache.concurrency-level":"16","mapreduce.job.ubertask.maxreduces":"1","mapreduce.shuffle.pathcache.max-weight":"10485760","hadoop.security.kms.client.encrypted.key.cache.size":"500","hadoop.security.java.secure.random.algorithm":"SHA1PRNG","ha.failover-controller.cli-check.rpc-timeout.ms":"20000","mapreduce.jobhistory.jobname.limit":"50","fs.s3a.select.input.compression":"none","yarn.client.nodemanager-connect.retry-interval-ms":"10000","ipc.[port_number].scheduler.priority.levels":"4","yarn.timeline-service.state-store-class":"org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore","yarn.nodemanager.env-whitelist":"JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_HOME,PATH,LANG,TZ","yarn.sharedcache.nested-level":"3","yarn.timeline-service.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","fs.azure.user.agent.prefix":"unknown","yarn.resourcemanager.zk-delegation-token-node.split-index":"*********(redacted)","yarn.nodemanager.numa-awareness.read-topology":"false","yarn.nodemanager.webapp.address":"${yarn.nodemanager.hostname}:8042","rpc.metrics.quantile.enable":"false","yarn.registry.class":"org.apache.hadoop.registry.client.impl.FSRegistryOperationsService","mapreduce.jobhistory.admin.acl":"*","yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size":"10","yarn.scheduler.queue-placement-rules":"user-group","hadoop.http.authentication.kerberos.keytab":"${user.home}/hadoop.keytab","yarn.resourcemanager.recovery.enabled":"false","fs.s3a.select.input.csv.header":"none","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-size":"500","yarn.timeline-service.webapp.rest-csrf.enabled":"false","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-watermark-high-mb":"0"},"System Properties":{"java.io.tmpdir":"/tmp","line.separator":"\n","path.separator":":","sun.management.compiler":"HotSpot 64-Bit Tiered Compilers","SPARK_SUBMIT":"true","sun.cpu.endian":"little","java.specification.maintenance.version":"5","java.specification.version":"1.8","java.vm.specification.name":"Java Virtual Machine Specification","java.vendor":"Private Build","java.vm.specification.version":"1.8","user.home":"/home/thiago","file.encoding.pkg":"sun.io","sun.arch.data.model":"64","sun.boot.library.path":"/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64","user.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados","java.library.path":"/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib","sun.cpu.isalist":"","sun.desktop":"gnome","os.arch":"amd64","java.vm.version":"25.422-b05","jetty.git.hash":"abdcda73818a1a2c705da276edb0bf6581e7997e","java.endorsed.dirs":"/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed","java.runtime.version":"1.8.0_422-8u422-b05-1~22.04-b05","java.vm.info":"mixed mode","java.ext.dirs":"/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext","java.runtime.name":"OpenJDK Runtime Environment","file.separator":"/","java.class.version":"52.0","java.specification.name":"Java Platform API Specification","sun.boot.class.path":"/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes","file.encoding":"UTF-8","jdk.reflect.useDirectMethodHandle":"false","user.timezone":"America/Sao_Paulo","java.specification.vendor":"Oracle Corporation","sun.java.launcher":"SUN_STANDARD","os.version":"6.8.0-40-generic","sun.os.patch.level":"unknown","java.vm.specification.vendor":"Oracle Corporation","user.country":"BR","sun.jnu.encoding":"UTF-8","user.language":"pt","java.vendor.url":"http://java.oracle.com/","java.awt.printerjob":"sun.print.PSPrinterJob","java.awt.graphicsenv":"sun.awt.X11GraphicsEnvironment","awt.toolkit":"sun.awt.X11.XToolkit","os.name":"Linux","java.vm.vendor":"Private Build","java.vendor.url.bug":"http://bugreport.sun.com/bugreport/","user.name":"thiago","java.vm.name":"OpenJDK 64-Bit Server VM","sun.java.command":"org.apache.spark.deploy.SparkSubmit --conf spark.delta.logStore.class=org.apache.spark.sql.delta.storage.S3SingleDriverLogStore --conf spark.memory.offHeap.size=4G --conf spark.eventLog.logBlockUpdates.enabled=true --conf spark.sql.catalog.spark_catalog=org.apache.spark.sql.delta.catalog.DeltaCatalog --conf spark.network.timeout=100000000 --conf spark.driver.bindAddress=0.0.0.0 --conf spark.sql.broadcastTimeout=300000 --conf spark.memory.offHeap.enabled=true --conf spark.sql.parquet.int96RebaseModeInWrite=LEGACY --conf spark.eventLog.jsonFormat.enabled=true --conf spark.sql.extensions=io.delta.sql.DeltaSparkSessionExtension --conf spark.default.parallelism=2 --conf spark.serializer=org.apache.spark.serializer.KryoSerializer --conf spark.eventLog.dir=/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events --conf spark.executor.instances=2 --conf spark.sql.execution.arrow.pyspark.enabled=True --conf spark.executor.memory=12G --conf spark.logConf=True --conf spark.sql.parquet.datetimeRebaseModeInWrite=LEGACY --conf spark.driver.memory=4G --conf spark.kryoserializer.buffer.max=2047 --conf spark.master=local[*] --conf spark.jars.packages=io.delta:delta-spark_2.12:3.2.0 --conf spark.executor.heartbeatInterval=100000000 --conf spark.executor.cores=4 --conf spark.app.name=PySpark --conf spark.sql.repl.eagerEval.enabled=True --conf spark.sql.parquet.int96RebaseModeInRead=LEGACY --conf spark.sql.parquet.datetimeRebaseModeInRead=LEGACY --conf spark.sql.debug.maxToStringFields=1000 --conf spark.sql.session.timeZone=UTC --conf spark.sql.legacy.timeParserPolicy=LEGACY --conf spark.sql.parquet.compression.codec=snappy --conf spark.sql.autoBroadcastJoinThreshold=-1 --conf spark.eventLog.enabled=True --conf spark.jars=\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n             --conf spark.ui.showConsoleProgress=True pyspark-shell","java.home":"/usr/lib/jvm/java-8-openjdk-amd64/jre","java.version":"1.8.0_422","sun.io.unicode.encoding":"UnicodeLittle"},"Metrics Properties":{"*.sink.servlet.class":"org.apache.spark.metrics.sink.MetricsServlet","*.sink.servlet.path":"/metrics/json","applications.sink.servlet.path":"/metrics/applications/json","master.sink.servlet.path":"/metrics/master/json"},"Classpath Entries":{"/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-autoscaling-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/scala-xml_2.12-2.1.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/scala-library-2.12.18.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jcl-over-slf4j-2.0.7.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/breeze_2.12-2.1.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-common-4.1.96.Final.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/javolution-5.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hk2-locator-2.6.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jersey-common-2.40.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/audience-annotations-0.5.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/snakeyaml-engine-2.6.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/log4j-api-2.20.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/osgi-resource-locator-1.0.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/parquet-common-1.13.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-collections4-4.4.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jdo-api-3.0.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-node-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/JLargeArrays-1.5.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-certificates-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/json4s-ast_2.12-3.7.0-M11.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/arpack_combined_all-0.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jpam-1.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/zookeeper-jute-3.6.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/dropwizard-metrics-hadoop-metrics2-reporter-0.1.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/antlr-runtime-3.5.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/RoaringBitmap-0.9.45.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-logging-1.1.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/xbean-asm9-shaded-4.23.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/json4s-jackson_2.12-3.7.0-M11.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/json4s-scalap_2.12-3.7.0-M11.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/leveldbjni-all-1.8.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-codec-1.16.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jta-1.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hive-shims-2.3.9.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/metrics-jmx-4.2.19.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/avro-1.11.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-handler-proxy-4.1.96.Final.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-collections-3.2.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/curator-client-2.13.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-repl_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/zstd-jni-1.5.5-4.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-codec-socks-4.1.96.Final.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/parquet-format-structures-1.13.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-hive-thriftserver_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/snakeyaml-2.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-buffer-4.1.96.Final.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jersey-container-servlet-2.40.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/datasketches-java-3.3.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/py4j-0.10.9.7.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-resolver-4.1.96.Final.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/parquet-hadoop-1.13.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hive-jdbc-2.3.9.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jackson-core-asl-1.9.13.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-all-4.1.96.Final.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/flatbuffers-java-1.12.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-admissionregistration-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/activation-1.1.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/algebra_2.12-2.0.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/super-csv-2.2.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/metrics-graphite-4.2.19.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/zookeeper-3.6.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jersey-server-2.40.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/blas-3.0.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hive-shims-common-2.3.9.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jersey-client-2.40.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/datanucleus-api-jdo-4.2.4.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/log4j-core-2.20.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-metrics-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/curator-recipes-2.13.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/log4j-slf4j2-impl-2.20.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/opencsv-2.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/javax.jdo-3.2.0-m3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-transport-native-unix-common-4.1.96.Final.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jackson-datatype-jsr310-2.15.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-rbac-6.7.2.jar":"System Classpath","file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar":"Added By User","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-graphx_2.12-3.5.1.jar":"System Classpath","file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar":"Added By User","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-transport-4.1.96.Final.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-x86_64.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-network-shuffle_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/cats-kernel_2.12-2.1.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spire-platform_2.12-0.17.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/ST4-4.0.4.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-client-api-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-events-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/rocksdbjni-8.3.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/curator-framework-2.13.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hive-shims-scheduler-2.3.9.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-math3-3.6.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-text-1.10.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/arrow-memory-netty-12.0.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/datanucleus-rdbms-4.1.19.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hk2-api-2.6.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/stax-api-1.0.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-transport-classes-epoll-4.1.96.Final.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/scala-parser-combinators_2.12-2.3.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-common-utils_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spire-macros_2.12-0.17.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-client-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-handler-4.1.96.Final.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/metrics-json-4.2.19.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hive-serde-2.3.9.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jsr305-3.0.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-flowcontrol-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/okhttp-3.12.12.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hive-cli-2.3.9.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-compiler-3.1.9.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/ivy-2.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/objenesis-3.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/metrics-jvm-4.2.19.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-lang3-3.12.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/tink-1.9.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/parquet-jackson-1.13.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jackson-databind-2.15.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/joda-time-2.12.5.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jline-2.14.6.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-kubernetes_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/janino-3.1.9.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/libfb303-0.9.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jackson-dataformat-yaml-2.15.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-hive_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/scala-collection-compat_2.12-2.7.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-catalyst_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/avro-mapred-1.11.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-coordination-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-networking-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/aircompressor-0.26.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jakarta.servlet-api-4.0.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/gson-2.2.4.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/okio-1.15.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/arrow-format-12.0.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-codec-http-4.1.96.Final.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/javassist-3.29.2-GA.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/datanucleus-core-4.1.17.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/compress-lzf-1.1.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jul-to-slf4j-2.0.7.jar":"System Classpath","spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar":"Added By User","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-cli-1.5.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/stream-2.9.6.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jaxb-runtime-2.3.2.jar":"System Classpath","spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar":"Added By User","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jersey-container-servlet-core-2.40.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/slf4j-api-2.0.7.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/libthrift-0.12.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-apps-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-pool-1.5.4.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/derby-10.14.2.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spire-util_2.12-0.17.0.jar":"System Classpath","spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar":"Added By User","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/aopalliance-repackaged-2.6.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/scala-compiler-2.12.18.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hive-beeline-2.3.9.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/istack-commons-runtime-3.0.8.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jakarta.ws.rs-api-2.1.6.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/JTransforms-3.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-aarch_64.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/breeze-macros_2.12-2.1.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/antlr4-runtime-4.9.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/transaction-api-1.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-extensions-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jakarta.xml.bind-api-2.3.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-network-common_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-discovery-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jackson-mapper-asl-1.9.13.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/metrics-core-4.2.19.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/orc-shims-1.9.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/scala-reflect-2.12.18.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/bonecp-0.8.0.RELEASE.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hive-common-2.3.9.jar":"System Classpath","file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar":"Added By User","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-mllib_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/HikariCP-2.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-policy-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-resource-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hadoop-yarn-server-web-proxy-3.3.4.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/arpack-3.0.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/json-1.8.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/pickle-1.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hadoop-client-runtime-3.3.4.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-scheduling-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hive-storage-api-2.8.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-dbcp-1.4.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kryo-shaded-4.0.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jakarta.inject-2.6.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/httpclient-4.5.14.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/shims-0.9.45.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-transport-native-epoll-4.1.96.Final-linux-aarch_64.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/annotations-17.0.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-gatewayapi-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-core-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-sketch_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hadoop-shaded-guava-1.1.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hk2-utils-2.6.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hive-service-rpc-3.1.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/mesos-1.4.3-shaded-protobuf.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/log4j-1.2-api-2.20.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/threeten-extra-1.7.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/parquet-column-1.13.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-mesos_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-yarn_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-common-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-io-2.13.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/arrow-memory-core-12.0.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/datasketches-memory-2.1.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jakarta.validation-api-2.0.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/avro-ipc-1.11.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hive-shims-0.23-2.3.9.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/parquet-encoding-1.13.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-kvstore_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-tags_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/guava-14.0.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/paranamer-2.8.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-storageclass-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-codec-4.1.96.Final.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-sql_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hive-llap-common-2.3.9.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-streaming_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spire_2.12-0.17.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-mllib-local_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hadoop-client-api-3.3.4.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hive-exec-2.3.9-core.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/snappy-java-1.1.10.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-launcher_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/zjsonpatch-0.3.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jodd-core-3.5.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jackson-module-scala_2.12-2.15.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/json4s-core_2.12-3.7.0-M11.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/arrow-vector-12.0.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jackson-annotations-2.15.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-transport-classes-kqueue-4.1.96.Final.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-compress-1.23.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-sql-api_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/xz-1.9.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/oro-2.0.8.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/conf":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-codec-http2-4.1.96.Final.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-lang-2.6.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jersey-hk2-2.40.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/netty-transport-native-epoll-4.1.96.Final-linux-x86_64.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/lz4-java-1.8.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-unsafe_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/hive-metastore-2.3.9.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/spark-core_2.12-3.5.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/orc-core-1.9.2-shaded-protobuf.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/orc-mapreduce-1.9.2-shaded-protobuf.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/lapack-3.0.3.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/chill_2.12-0.10.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-batch-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/chill-java-0.10.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/univocity-parsers-2.9.1.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jackson-core-2.15.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-model-apiextensions-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/commons-crypto-1.1.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/jakarta.annotation-api-1.3.5.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/minlog-1.3.0.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/logging-interceptor-3.12.12.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/kubernetes-httpclient-okhttp-6.7.2.jar":"System Classpath","/home/thiago/.local/lib/python3.10/site-packages/pyspark/jars/httpcore-4.4.16.jar":"System Classpath"}}
{"Event":"SparkListenerApplicationStart","App Name":"PySpark","App ID":"local-1724375737384","Timestamp":1724375736714,"User":"thiago"}
{"Event":"SparkListenerJobStart","Job ID":0,"Submission Time":1724375741598,"Stage Infos":[{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[0],"Properties":{"spark.rdd.scope":"{\"id\":\"2\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375741612,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.rdd.scope":"{\"id\":\"2\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_0_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":40243,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":0,"Stage Attempt ID":0,"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375741937,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":0,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375741937,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375747360,"Failed":false,"Killed":false,"Accumulables":[{"ID":1,"Name":"internal.metrics.executorDeserializeTime","Update":156,"Value":156,"Internal":true,"Count Failed Values":true},{"ID":2,"Name":"internal.metrics.executorDeserializeCpuTime","Update":153382469,"Value":153382469,"Internal":true,"Count Failed Values":true},{"ID":3,"Name":"internal.metrics.executorRunTime","Update":5210,"Value":5210,"Internal":true,"Count Failed Values":true},{"ID":4,"Name":"internal.metrics.executorCpuTime","Update":36355744,"Value":36355744,"Internal":true,"Count Failed Values":true},{"ID":5,"Name":"internal.metrics.resultSize","Update":1154,"Value":1154,"Internal":true,"Count Failed Values":true},{"ID":6,"Name":"internal.metrics.jvmGCTime","Update":74,"Value":74,"Internal":true,"Count Failed Values":true},{"ID":7,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":156,"Executor Deserialize CPU Time":153382469,"Executor Run Time":5210,"Executor CPU Time":36355744,"Peak Execution Memory":0,"Result Size":1154,"JVM GC Time":74,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375741612,"Completion Time":1724375747365,"Accumulables":[{"ID":1,"Name":"internal.metrics.executorDeserializeTime","Value":156,"Internal":true,"Count Failed Values":true},{"ID":2,"Name":"internal.metrics.executorDeserializeCpuTime","Value":153382469,"Internal":true,"Count Failed Values":true},{"ID":3,"Name":"internal.metrics.executorRunTime","Value":5210,"Internal":true,"Count Failed Values":true},{"ID":4,"Name":"internal.metrics.executorCpuTime","Value":36355744,"Internal":true,"Count Failed Values":true},{"ID":5,"Name":"internal.metrics.resultSize","Value":1154,"Internal":true,"Count Failed Values":true},{"ID":6,"Name":"internal.metrics.jvmGCTime","Value":74,"Internal":true,"Count Failed Values":true},{"ID":7,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":0,"Completion Time":1724375747368,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerJobStart","Job ID":1,"Submission Time":1724375750126,"Stage Infos":[{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"5\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[1],"Properties":{"spark.rdd.scope":"{\"id\":\"7\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"5\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375750127,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.rdd.scope":"{\"id\":\"7\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_1_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":40297,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375750138,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375750138,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375751413,"Failed":false,"Killed":false,"Accumulables":[{"ID":36,"Name":"internal.metrics.executorDeserializeTime","Update":8,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":37,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8213169,"Value":8213169,"Internal":true,"Count Failed Values":true},{"ID":38,"Name":"internal.metrics.executorRunTime","Update":1259,"Value":1259,"Internal":true,"Count Failed Values":true},{"ID":39,"Name":"internal.metrics.executorCpuTime","Update":4893681,"Value":4893681,"Internal":true,"Count Failed Values":true},{"ID":40,"Name":"internal.metrics.resultSize","Update":1205,"Value":1205,"Internal":true,"Count Failed Values":true},{"ID":42,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":8,"Executor Deserialize CPU Time":8213169,"Executor Run Time":1259,"Executor CPU Time":4893681,"Peak Execution Memory":0,"Result Size":1205,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"5\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375750127,"Completion Time":1724375751414,"Accumulables":[{"ID":36,"Name":"internal.metrics.executorDeserializeTime","Value":8,"Internal":true,"Count Failed Values":true},{"ID":37,"Name":"internal.metrics.executorDeserializeCpuTime","Value":8213169,"Internal":true,"Count Failed Values":true},{"ID":38,"Name":"internal.metrics.executorRunTime","Value":1259,"Internal":true,"Count Failed Values":true},{"ID":39,"Name":"internal.metrics.executorCpuTime","Value":4893681,"Internal":true,"Count Failed Values":true},{"ID":40,"Name":"internal.metrics.resultSize","Value":1205,"Internal":true,"Count Failed Values":true},{"ID":42,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":1,"Completion Time":1724375751415,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_1_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":40297,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":0,"rootExecutionId":0,"description":"save at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","physicalPlanDescription":"== Physical Plan ==\nExecute SaveIntoDataSourceCommand (1)\n   +- SaveIntoDataSourceCommand (2)\n         +- Project (49)\n            +- Project (48)\n               +- Project (47)\n                  +- Project (46)\n                     +- Project (45)\n                        +- Project (44)\n                           +- Project (43)\n                              +- Project (42)\n                                 +- Project (41)\n                                    +- Project (40)\n                                       +- Project (39)\n                                          +- Project (38)\n                                             +- Project (37)\n                                                +- Project (36)\n                                                   +- Project (35)\n                                                      +- Project (34)\n                                                         +- Project (33)\n                                                            +- Project (32)\n                                                               +- Project (31)\n                                                                  +- Project (30)\n                                                                     +- Project (29)\n                                                                        +- Project (28)\n                                                                           +- Project (27)\n                                                                              +- Project (26)\n                                                                                 +- Project (25)\n                                                                                    +- Project (24)\n                                                                                       +- Project (23)\n                                                                                          +- Project (22)\n                                                                                             +- Project (21)\n                                                                                                +- Project (20)\n                                                                                                   +- Project (19)\n                                                                                                      +- Project (18)\n                                                                                                         +- Project (17)\n                                                                                                            +- Project (16)\n                                                                                                               +- Project (15)\n                                                                                                                  +- Project (14)\n                                                                                                                     +- Project (13)\n                                                                                                                        +- Project (12)\n                                                                                                                           +- Project (11)\n                                                                                                                              +- Project (10)\n                                                                                                                                 +- Project (9)\n                                                                                                                                    +- Project (8)\n                                                                                                                                       +- Deduplicate (7)\n                                                                                                                                          +- Project (6)\n                                                                                                                                             +- Join (5)\n                                                                                                                                                :- LogicalRelation (3)\n                                                                                                                                                +- LogicalRelation (4)\n\n\n(1) Execute SaveIntoDataSourceCommand\nOutput: []\n\n(2) SaveIntoDataSourceCommand\nArguments: org.apache.spark.sql.delta.sources.DeltaDataSource@71cda64a, [path=s3a://datalake-test-thiago/02-silver/delta/store_sales/], Overwrite\n\n(3) LogicalRelation\nArguments: parquet, [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8], false\n\n(4) LogicalRelation\nArguments: parquet, [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27], false\n\n(5) Join\nArguments: LeftOuter, (Store#0 = Store#18)\n\n(6) Project\nArguments: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(7) Deduplicate\nArguments: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\n\n(8) Project\nArguments: [Store#0 AS store#58, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(9) Project\nArguments: [store#58, DayOfWeek#1 AS day_of_week#77, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(10) Project\nArguments: [store#58, day_of_week#77, Date#2 AS date#96, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(11) Project\nArguments: [store#58, day_of_week#77, date#96, Sales#3 AS sales#115, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(12) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, Customers#4 AS customers#134, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(13) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, Open#5 AS open#153, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(14) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, Promo#6 AS promo#172, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(15) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, StateHoliday#7 AS state_holiday#191, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(16) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, SchoolHoliday#8 AS school_holiday#210, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(17) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, StoreType#19 AS store_type#229, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(18) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, Assortment#20 AS assortment#248, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(19) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, CompetitionDistance#21 AS competition_distance#267, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(20) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#267, CompetitionOpenSinceMonth#22 AS competition_open_since_month#286, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(21) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#267, competition_open_since_month#286, CompetitionOpenSinceYear#23 AS competition_open_since_year#305, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(22) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#267, competition_open_since_month#286, competition_open_since_year#305, Promo2#24 AS promo2#324, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(23) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#267, competition_open_since_month#286, competition_open_since_year#305, promo2#324, Promo2SinceWeek#25 AS promo2_since_week#343, Promo2SinceYear#26, PromoInterval#27]\n\n(24) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#267, competition_open_since_month#286, competition_open_since_year#305, promo2#324, promo2_since_week#343, Promo2SinceYear#26 AS promo2_since_year#362, PromoInterval#27]\n\n(25) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#267, competition_open_since_month#286, competition_open_since_year#305, promo2#324, promo2_since_week#343, promo2_since_year#362, PromoInterval#27 AS promo_interval#381]\n\n(26) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, CASE WHEN isnan(cast(competition_distance#267 as double)) THEN 200000.0 ELSE cast(competition_distance#267 as double) END AS competition_distance#400, competition_open_since_month#286, competition_open_since_year#305, promo2#324, promo2_since_week#343, promo2_since_year#362, promo_interval#381]\n\n(27) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, CASE WHEN isnan(cast(competition_open_since_month#286 as double)) THEN month(cast(date#96 as date)) ELSE competition_open_since_month#286 END AS competition_open_since_month#419, competition_open_since_year#305, promo2#324, promo2_since_week#343, promo2_since_year#362, promo_interval#381]\n\n(28) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, CASE WHEN isnan(cast(competition_open_since_year#305 as double)) THEN year(cast(date#96 as date)) ELSE competition_open_since_year#305 END AS competition_open_since_year#438, promo2#324, promo2_since_week#343, promo2_since_year#362, promo_interval#381]\n\n(29) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, CASE WHEN isnan(cast(promo2_since_week#343 as double)) THEN weekofyear(cast(date#96 as date)) ELSE promo2_since_week#343 END AS promo2_since_week#457, promo2_since_year#362, promo_interval#381]\n\n(30) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, CASE WHEN isnan(cast(promo2_since_year#362 as double)) THEN year(cast(date#96 as date)) ELSE promo2_since_year#362 END AS promo2_since_year#476, promo_interval#381]\n\n(31) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#381, CASE WHEN (month(cast(date#96 as date)) = 12) THEN Dec ELSE CASE WHEN (month(cast(date#96 as date)) = 11) THEN Nov ELSE CASE WHEN (month(cast(date#96 as date)) = 10) THEN Out ELSE CASE WHEN (month(cast(date#96 as date)) = 9) THEN Sep ELSE CASE WHEN (month(cast(date#96 as date)) = 8) THEN Aug ELSE CASE WHEN (month(cast(date#96 as date)) = 7) THEN Jul ELSE CASE WHEN (month(cast(date#96 as date)) = 6) THEN Jun ELSE CASE WHEN (month(cast(date#96 as date)) = 5) THEN May ELSE CASE WHEN (month(cast(date#96 as date)) = 4) THEN Apr ELSE CASE WHEN (month(cast(date#96 as date)) = 3) THEN Mar ELSE CASE WHEN (month(cast(date#96 as date)) = 2) THEN Fev ELSE CASE WHEN (month(cast(date#96 as date)) = 1) THEN Jan ELSE cast(cast(CASE WHEN isnotnull(date#96) THEN cast(date#96 as date) END as int) as string) END END END END END END END END END END END END AS month_map#495]\n\n(32) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, CASE WHEN isnull(promo_interval#381) THEN  ELSE promo_interval#381 END AS promo_interval#515, month_map#495]\n\n(33) Project\nArguments: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]\n\n(34) Project\nArguments: [store#58, day_of_week#77, to_date(date#96, Some(yyyy-MM-dd), Some(UTC), false) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(35) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, cast(competition_open_since_month#419 as int) AS competition_open_since_month#577, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(36) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, cast(competition_open_since_year#438 as int) AS competition_open_since_year#598, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(37) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, cast(promo2_since_week#457 as int) AS promo2_since_week#619, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(38) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, cast(promo2_since_year#476 as int) AS promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535]\n\n(39) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661]\n\n(40) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month(date#556) AS month#683]\n\n(41) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, dayofmonth(date#556) AS day#706]\n\n(42) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, weekofyear(date#556) AS week_of_year#730]\n\n(43) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755]\n\n(44) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, make_date(competition_open_since_year#598, competition_open_since_month#577, 1, false) AS competition_since#781]\n\n(45) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / cast(30 as double)) as int) AS competition_time_month#808]\n\n(46) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, date_add(make_date(promo2_since_year#640, 1, 1, false), (((promo2_since_week#619 - 1) * 7) - 1)) AS promo_since#836]\n\n(47) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / cast(7 as double)) as int) AS promo_time_week#865]\n\n(48) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, promo_time_week#865]\n\n(49) Project\nArguments: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, assortment#895, competition_distance#400, competition_open_since_month#577, competition_open_since_year#598, promo2#324, promo2_since_week#619, promo2_since_year#640, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, promo_time_week#865]\n\n","sparkPlanInfo":{"nodeName":"Execute SaveIntoDataSourceCommand","simpleString":"Execute SaveIntoDataSourceCommand","children":[],"metadata":{},"metrics":[]},"time":1724375752704,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":1,"rootExecutionId":0,"description":"$anonfun$submit$1 at FutureTask.java:266","details":"org.apache.spark.sql.delta.util.threads.DeltaThreadPool.$anonfun$submit$1(DeltaThreadPool.scala:39)\njava.util.concurrent.FutureTask.run(FutureTask.java:266)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingRunnable.$anonfun$run$1(SparkThreadLocalForwardingThreadPoolExecutor.scala:116)\nscala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingHelper.runWithCaptured(SparkThreadLocalForwardingThreadPoolExecutor.scala:75)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingHelper.runWithCaptured$(SparkThreadLocalForwardingThreadPoolExecutor.scala:58)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingRunnable.runWithCaptured(SparkThreadLocalForwardingThreadPoolExecutor.scala:113)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingRunnable.run(SparkThreadLocalForwardingThreadPoolExecutor.scala:116)\njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\njava.lang.Thread.run(Thread.java:750)","physicalPlanDescription":"== Physical Plan ==\n* Project (4)\n+- * Filter (3)\n   +- * ColumnarToRow (2)\n      +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [3]: [checkpointMetadata#1033, sidecar#1034, version#1037L]\nBatched: true\nLocation: DeltaLogFileIndex [s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000010.checkpoint.parquet]\nPushedFilters: [Or(IsNotNull(checkpointMetadata.version),IsNotNull(sidecar.path))]\nReadSchema: struct<checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [3]: [checkpointMetadata#1033, sidecar#1034, version#1037L]\n\n(3) Filter [codegen id : 1]\nInput [3]: [checkpointMetadata#1033, sidecar#1034, version#1037L]\nCondition : (isnotnull(checkpointMetadata#1033.version) OR isnotnull(sidecar#1034.path))\n\n(4) Project [codegen id : 1]\nOutput [2]: [checkpointMetadata#1033, sidecar#1034]\nInput [3]: [checkpointMetadata#1033, sidecar#1034, version#1037L]\n\n","sparkPlanInfo":{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [checkpointMetadata#1033, sidecar#1034]","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(checkpointMetadata#1033.version) OR isnotnull(sidecar#1034.path))","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [checkpointMetadata#1033,sidecar#1034,version#1037L] Batched: true, DataFilters: [(isnotnull(checkpointMetadata#1033.version) OR isnotnull(sidecar#1034.path))], Format: Parquet, Location: DeltaLogFileIndex(1 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/0000..., PartitionFilters: [], PushedFilters: [Or(IsNotNull(checkpointMetadata.version),IsNotNull(sidecar.path))], ReadSchema: struct<checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:stri...","children":[],"metadata":{"Location":"DeltaLogFileIndex(1 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000010.checkpoint.parquet]","ReadSchema":"struct<checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[Or(IsNotNull(checkpointMetadata.version),IsNotNull(sidecar.path))]","DataFilters":"[(isnotnull(checkpointMetadata#1033.version) OR isnotnull(sidecar#1034.path))]"},"metrics":[{"name":"number of files read","accumulatorId":77,"metricType":"sum"},{"name":"scan time","accumulatorId":76,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":81,"metricType":"timing"},{"name":"metadata time","accumulatorId":78,"metricType":"timing"},{"name":"size of files read","accumulatorId":79,"metricType":"size"},{"name":"number of output rows","accumulatorId":75,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":80,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":73,"metricType":"sum"},{"name":"number of input batches","accumulatorId":74,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":72,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":71,"metricType":"timing"}]},"time":1724375756463,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":2,"rootExecutionId":0,"description":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog$.recordOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog$.recordDeltaOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.DeltaLog$.createDeltaLog$1(DeltaLog.scala:847)\norg.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$5(DeltaLog.scala:866)\ncom.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4792)\ncom.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)\ncom.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)\ncom.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)\ncom.google.common.cache.LocalCache$Segment.get(LocalCache.java:2257)\ncom.google.common.cache.LocalCache.get(LocalCache.java:4000)\ncom.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4789)\norg.apache.spark.sql.delta.DeltaLog$.getDeltaLogFromCache$1(DeltaLog.scala:865)\norg.apache.spark.sql.delta.DeltaLog$.apply(DeltaLog.scala:875)\norg.apache.spark.sql.delta.DeltaLog$.forTable(DeltaLog.scala:751)","physicalPlanDescription":"== Physical Plan ==\nUnion (8)\n:- * Project (4)\n:  +- * Filter (3)\n:     +- * ColumnarToRow (2)\n:        +- Scan parquet  (1)\n+- * Project (7)\n   +- * Filter (6)\n      +- Scan json  (5)\n\n\n(1) Scan parquet \nOutput [4]: [metaData#1023, protocol#1024, commitInfo#1025, version#1026L]\nBatched: true\nLocation: DeltaLogFileIndex [s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000010.checkpoint.parquet]\nPushedFilters: [Or(IsNotNull(protocol.minReaderVersion),IsNotNull(metaData.id))]\nReadSchema: struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,commitInfo:struct<inCommitTimestamp:bigint>>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [4]: [metaData#1023, protocol#1024, commitInfo#1025, version#1026L]\n\n(3) Filter [codegen id : 1]\nInput [4]: [metaData#1023, protocol#1024, commitInfo#1025, version#1026L]\nCondition : (isnotnull(protocol#1024.minReaderVersion) OR isnotnull(metaData#1023.id))\n\n(4) Project [codegen id : 1]\nOutput [4]: [protocol#1024, metaData#1023, commitInfo#1025.inCommitTimestamp AS inCommitTimestamp#1076L, 10 AS version#1053L]\nInput [4]: [metaData#1023, protocol#1024, commitInfo#1025, version#1026L]\n\n(5) Scan json \nOutput [4]: [metaData#1062, protocol#1063, commitInfo#1064, version#1065L]\nBatched: false\nLocation: DeltaLogFileIndex [s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000011.json, ... 2 entries]\nReadSchema: struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(6) Filter [codegen id : 2]\nInput [4]: [metaData#1062, protocol#1063, commitInfo#1064, version#1065L]\nCondition : ((isnotnull(protocol#1063.minReaderVersion) OR isnotnull(metaData#1062.id)) OR (isnotnull(commitInfo#1064.inCommitTimestamp) AND (version#1065L = 13)))\n\n(7) Project [codegen id : 2]\nOutput [4]: [protocol#1063, metaData#1062, commitInfo#1064.inCommitTimestamp AS inCommitTimestamp#1104L, version#1065L]\nInput [4]: [metaData#1062, protocol#1063, commitInfo#1064, version#1065L]\n\n(8) Union\n\n","sparkPlanInfo":{"nodeName":"Union","simpleString":"Union","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [protocol#1024, metaData#1023, commitInfo#1025.inCommitTimestamp AS inCommitTimestamp#1076L, 10 AS version#1053L]","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(protocol#1024.minReaderVersion) OR isnotnull(metaData#1023.id))","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [metaData#1023,protocol#1024,commitInfo#1025,version#1026L] Batched: true, DataFilters: [(isnotnull(protocol#1024.minReaderVersion) OR isnotnull(metaData#1023.id))], Format: Parquet, Location: DeltaLogFileIndex(1 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/0000..., PartitionFilters: [], PushedFilters: [Or(IsNotNull(protocol.minReaderVersion),IsNotNull(metaData.id))], ReadSchema: struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,opt...","children":[],"metadata":{"Location":"DeltaLogFileIndex(1 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000010.checkpoint.parquet]","ReadSchema":"struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,commitInfo:struct<inCommitTimestamp:bigint>>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[Or(IsNotNull(protocol.minReaderVersion),IsNotNull(metaData.id))]","DataFilters":"[(isnotnull(protocol#1024.minReaderVersion) OR isnotnull(metaData#1023.id))]"},"metrics":[{"name":"number of files read","accumulatorId":88,"metricType":"sum"},{"name":"scan time","accumulatorId":87,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":92,"metricType":"timing"},{"name":"metadata time","accumulatorId":89,"metricType":"timing"},{"name":"size of files read","accumulatorId":90,"metricType":"size"},{"name":"number of output rows","accumulatorId":86,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":91,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":84,"metricType":"sum"},{"name":"number of input batches","accumulatorId":85,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":83,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":82,"metricType":"timing"}]},{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Project","simpleString":"Project [protocol#1063, metaData#1062, commitInfo#1064.inCommitTimestamp AS inCommitTimestamp#1104L, version#1065L]","children":[{"nodeName":"Filter","simpleString":"Filter ((isnotnull(protocol#1063.minReaderVersion) OR isnotnull(metaData#1062.id)) OR (isnotnull(commitInfo#1064.inCommitTimestamp) AND (version#1065L = 13)))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [metaData#1062,protocol#1063,commitInfo#1064,version#1065L] Batched: false, DataFilters: [((isnotnull(protocol#1063.minReaderVersion) OR isnotnull(metaData#1062.id)) OR isnotnull(commitI..., Format: JSON, Location: DeltaLogFileIndex(3 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/0000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,opt...","children":[],"metadata":{"Location":"DeltaLogFileIndex(3 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000011.json, ...]","ReadSchema":"struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[((isnotnull(protocol#1063.minReaderVersion) OR isnotnull(metaData#1062.id)) OR isnotnull(commitInfo#1064.inCommitTimestamp))]"},"metrics":[{"name":"number of files read","accumulatorId":96,"metricType":"sum"},{"name":"dynamic partition pruning time","accumulatorId":100,"metricType":"timing"},{"name":"metadata time","accumulatorId":97,"metricType":"timing"},{"name":"size of files read","accumulatorId":98,"metricType":"size"},{"name":"number of output rows","accumulatorId":95,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":99,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":94,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":93,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1724375756484,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_2_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":38444,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_3_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":38826,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[88,1],[92,0],[89,0],[90,20836],[91,1]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[77,1],[81,0],[78,4],[79,20836],[80,1]]}
{"Event":"SparkListenerJobStart","Job ID":2,"Submission Time":1724375756929,"Stage Infos":[{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"$anonfun$submit$1 at FutureTask.java:266","Number of Tasks":1,"RDD Info":[{"RDD ID":10,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"27\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$submit$1 at FutureTask.java:266","Parent IDs":[9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"FileScanRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$submit$1 at FutureTask.java:266","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$submit$1 at FutureTask.java:266","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$submit$1 at FutureTask.java:266","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.util.threads.DeltaThreadPool.$anonfun$submit$1(DeltaThreadPool.scala:39)\njava.util.concurrent.FutureTask.run(FutureTask.java:266)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingRunnable.$anonfun$run$1(SparkThreadLocalForwardingThreadPoolExecutor.scala:116)\nscala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingHelper.runWithCaptured(SparkThreadLocalForwardingThreadPoolExecutor.scala:75)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingHelper.runWithCaptured$(SparkThreadLocalForwardingThreadPoolExecutor.scala:58)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingRunnable.runWithCaptured(SparkThreadLocalForwardingThreadPoolExecutor.scala:113)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingRunnable.run(SparkThreadLocalForwardingThreadPoolExecutor.scala:116)\njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[2],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"1","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"28\",\"name\":\"collect\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"$anonfun$submit$1 at FutureTask.java:266","Number of Tasks":1,"RDD Info":[{"RDD ID":10,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"27\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$submit$1 at FutureTask.java:266","Parent IDs":[9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"FileScanRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$submit$1 at FutureTask.java:266","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$submit$1 at FutureTask.java:266","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$submit$1 at FutureTask.java:266","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.util.threads.DeltaThreadPool.$anonfun$submit$1(DeltaThreadPool.scala:39)\njava.util.concurrent.FutureTask.run(FutureTask.java:266)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingRunnable.$anonfun$run$1(SparkThreadLocalForwardingThreadPoolExecutor.scala:116)\nscala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingHelper.runWithCaptured(SparkThreadLocalForwardingThreadPoolExecutor.scala:75)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingHelper.runWithCaptured$(SparkThreadLocalForwardingThreadPoolExecutor.scala:58)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingRunnable.runWithCaptured(SparkThreadLocalForwardingThreadPoolExecutor.scala:113)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingRunnable.run(SparkThreadLocalForwardingThreadPoolExecutor.scala:116)\njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375756932,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"1","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"28\",\"name\":\"collect\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_4_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":9023,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375756939,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_5_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":37459,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[96,3],[100,0],[97,0],[98,14574],[99,3]]}
{"Event":"SparkListenerJobStart","Job ID":3,"Submission Time":1724375757057,"Stage Infos":[{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":3,"RDD Info":[{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"30\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"29\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"UnionRDD","Scope":"{\"id\":\"12\",\"name\":\"Union\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[8,13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"FileScanRDD","Scope":"{\"id\":\"29\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"22\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"22\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"13\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog$.recordOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog$.recordDeltaOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.DeltaLog$.createDeltaLog$1(DeltaLog.scala:847)\norg.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$5(DeltaLog.scala:866)\ncom.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4792)\ncom.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)\ncom.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)\ncom.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)\ncom.google.common.cache.LocalCache$Segment.get(LocalCache.java:2257)\ncom.google.common.cache.LocalCache.get(LocalCache.java:4000)\ncom.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4789)\norg.apache.spark.sql.delta.DeltaLog$.getDeltaLogFromCache$1(DeltaLog.scala:865)\norg.apache.spark.sql.delta.DeltaLog$.apply(DeltaLog.scala:875)\norg.apache.spark.sql.delta.DeltaLog$.forTable(DeltaLog.scala:751)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[3],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"2","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"31\",\"name\":\"collect\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":3,"RDD Info":[{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"30\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"29\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"UnionRDD","Scope":"{\"id\":\"12\",\"name\":\"Union\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[8,13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"FileScanRDD","Scope":"{\"id\":\"29\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"22\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"22\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"13\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog$.recordOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog$.recordDeltaOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.DeltaLog$.createDeltaLog$1(DeltaLog.scala:847)\norg.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$5(DeltaLog.scala:866)\ncom.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4792)\ncom.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)\ncom.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)\ncom.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)\ncom.google.common.cache.LocalCache$Segment.get(LocalCache.java:2257)\ncom.google.common.cache.LocalCache.get(LocalCache.java:4000)\ncom.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4789)\norg.apache.spark.sql.delta.DeltaLog$.getDeltaLogFromCache$1(DeltaLog.scala:865)\norg.apache.spark.sql.delta.DeltaLog$.apply(DeltaLog.scala:875)\norg.apache.spark.sql.delta.DeltaLog$.forTable(DeltaLog.scala:751)","Submission Time":1724375757059,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"2","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"31\",\"name\":\"collect\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_6_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":29926,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":3,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375757071,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":4,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1724375757073,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":5,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1724375757073,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":5,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1724375757073,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375758032,"Failed":false,"Killed":false,"Accumulables":[{"ID":93,"Name":"duration","Update":"902","Value":"902","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":95,"Name":"number of output rows","Update":"5","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":136,"Name":"internal.metrics.executorDeserializeTime","Update":8,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":137,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6875093,"Value":6875093,"Internal":true,"Count Failed Values":true},{"ID":138,"Name":"internal.metrics.executorRunTime","Update":940,"Value":940,"Internal":true,"Count Failed Values":true},{"ID":139,"Name":"internal.metrics.executorCpuTime","Update":95855563,"Value":95855563,"Internal":true,"Count Failed Values":true},{"ID":140,"Name":"internal.metrics.resultSize","Update":1775,"Value":1775,"Internal":true,"Count Failed Values":true},{"ID":167,"Name":"internal.metrics.input.bytesRead","Update":4858,"Value":4858,"Internal":true,"Count Failed Values":true},{"ID":168,"Name":"internal.metrics.input.recordsRead","Update":5,"Value":5,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":8,"Executor Deserialize CPU Time":6875093,"Executor Run Time":940,"Executor CPU Time":95855563,"Peak Execution Memory":0,"Result Size":1775,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":4858,"Records Read":5},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":4,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1724375757073,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375758514,"Failed":false,"Killed":false,"Accumulables":[{"ID":93,"Name":"duration","Update":"1388","Value":"2290","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":95,"Name":"number of output rows","Update":"10","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":136,"Name":"internal.metrics.executorDeserializeTime","Update":11,"Value":19,"Internal":true,"Count Failed Values":true},{"ID":137,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9254359,"Value":16129452,"Internal":true,"Count Failed Values":true},{"ID":138,"Name":"internal.metrics.executorRunTime","Update":1425,"Value":2365,"Internal":true,"Count Failed Values":true},{"ID":139,"Name":"internal.metrics.executorCpuTime","Update":107133114,"Value":202988677,"Internal":true,"Count Failed Values":true},{"ID":140,"Name":"internal.metrics.resultSize","Update":1775,"Value":3550,"Internal":true,"Count Failed Values":true},{"ID":167,"Name":"internal.metrics.input.bytesRead","Update":9716,"Value":14574,"Internal":true,"Count Failed Values":true},{"ID":168,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":15,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":11,"Executor Deserialize CPU Time":9254359,"Executor Run Time":1425,"Executor CPU Time":107133114,"Peak Execution Memory":0,"Result Size":1775,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":9716,"Records Read":10},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375756939,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375759018,"Failed":false,"Killed":false,"Accumulables":[{"ID":71,"Name":"duration","Update":"2005","Value":"2005","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":73,"Name":"number of output rows","Update":"14","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":74,"Name":"number of input batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":75,"Name":"number of output rows","Update":"14","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":76,"Name":"scan time","Update":"2002","Value":"2002","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":101,"Name":"internal.metrics.executorDeserializeTime","Update":34,"Value":34,"Internal":true,"Count Failed Values":true},{"ID":102,"Name":"internal.metrics.executorDeserializeCpuTime","Update":32839326,"Value":32839326,"Internal":true,"Count Failed Values":true},{"ID":103,"Name":"internal.metrics.executorRunTime","Update":2038,"Value":2038,"Internal":true,"Count Failed Values":true},{"ID":104,"Name":"internal.metrics.executorCpuTime","Update":197515139,"Value":197515139,"Internal":true,"Count Failed Values":true},{"ID":105,"Name":"internal.metrics.resultSize","Update":1607,"Value":1607,"Internal":true,"Count Failed Values":true},{"ID":132,"Name":"internal.metrics.input.bytesRead","Update":14738,"Value":14738,"Internal":true,"Count Failed Values":true},{"ID":133,"Name":"internal.metrics.input.recordsRead","Update":14,"Value":14,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":34,"Executor Deserialize CPU Time":32839326,"Executor Run Time":2038,"Executor CPU Time":197515139,"Peak Execution Memory":0,"Result Size":1607,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":14738,"Records Read":14},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"$anonfun$submit$1 at FutureTask.java:266","Number of Tasks":1,"RDD Info":[{"RDD ID":10,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"27\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$submit$1 at FutureTask.java:266","Parent IDs":[9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"FileScanRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$submit$1 at FutureTask.java:266","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$submit$1 at FutureTask.java:266","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$submit$1 at FutureTask.java:266","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.util.threads.DeltaThreadPool.$anonfun$submit$1(DeltaThreadPool.scala:39)\njava.util.concurrent.FutureTask.run(FutureTask.java:266)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingRunnable.$anonfun$run$1(SparkThreadLocalForwardingThreadPoolExecutor.scala:116)\nscala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingHelper.runWithCaptured(SparkThreadLocalForwardingThreadPoolExecutor.scala:75)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingHelper.runWithCaptured$(SparkThreadLocalForwardingThreadPoolExecutor.scala:58)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingRunnable.runWithCaptured(SparkThreadLocalForwardingThreadPoolExecutor.scala:113)\norg.apache.spark.sql.delta.util.threads.SparkThreadLocalCapturingRunnable.run(SparkThreadLocalForwardingThreadPoolExecutor.scala:116)\njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375756932,"Completion Time":1724375759018,"Accumulables":[{"ID":71,"Name":"duration","Value":"2005","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":73,"Name":"number of output rows","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":74,"Name":"number of input batches","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":75,"Name":"number of output rows","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":76,"Name":"scan time","Value":"2002","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":101,"Name":"internal.metrics.executorDeserializeTime","Value":34,"Internal":true,"Count Failed Values":true},{"ID":102,"Name":"internal.metrics.executorDeserializeCpuTime","Value":32839326,"Internal":true,"Count Failed Values":true},{"ID":103,"Name":"internal.metrics.executorRunTime","Value":2038,"Internal":true,"Count Failed Values":true},{"ID":104,"Name":"internal.metrics.executorCpuTime","Value":197515139,"Internal":true,"Count Failed Values":true},{"ID":105,"Name":"internal.metrics.resultSize","Value":1607,"Internal":true,"Count Failed Values":true},{"ID":132,"Name":"internal.metrics.input.bytesRead","Value":14738,"Internal":true,"Count Failed Values":true},{"ID":133,"Name":"internal.metrics.input.recordsRead","Value":14,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":2,"Completion Time":1724375759019,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":1,"time":1724375759023,"errorMessage":""}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":3,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375757071,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375759807,"Failed":false,"Killed":false,"Accumulables":[{"ID":82,"Name":"duration","Update":"2669","Value":"2669","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":83,"Name":"number of output rows","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":84,"Name":"number of output rows","Update":"14","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":85,"Name":"number of input batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":86,"Name":"number of output rows","Update":"14","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":87,"Name":"scan time","Update":"2667","Value":"2667","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":136,"Name":"internal.metrics.executorDeserializeTime","Update":12,"Value":31,"Internal":true,"Count Failed Values":true},{"ID":137,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9216340,"Value":25345792,"Internal":true,"Count Failed Values":true},{"ID":138,"Name":"internal.metrics.executorRunTime","Update":2719,"Value":5084,"Internal":true,"Count Failed Values":true},{"ID":139,"Name":"internal.metrics.executorCpuTime","Update":323650390,"Value":526639067,"Internal":true,"Count Failed Values":true},{"ID":140,"Name":"internal.metrics.resultSize","Update":2418,"Value":5968,"Internal":true,"Count Failed Values":true},{"ID":167,"Name":"internal.metrics.input.bytesRead","Update":39988,"Value":54562,"Internal":true,"Count Failed Values":true},{"ID":168,"Name":"internal.metrics.input.recordsRead","Update":14,"Value":29,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":12,"Executor Deserialize CPU Time":9216340,"Executor Run Time":2719,"Executor CPU Time":323650390,"Peak Execution Memory":0,"Result Size":2418,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":39988,"Records Read":14},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":3,"RDD Info":[{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"30\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"29\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"UnionRDD","Scope":"{\"id\":\"12\",\"name\":\"Union\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[8,13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"FileScanRDD","Scope":"{\"id\":\"29\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"22\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"22\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"13\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog$.recordOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog$.recordDeltaOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.DeltaLog$.createDeltaLog$1(DeltaLog.scala:847)\norg.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$5(DeltaLog.scala:866)\ncom.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4792)\ncom.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)\ncom.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)\ncom.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)\ncom.google.common.cache.LocalCache$Segment.get(LocalCache.java:2257)\ncom.google.common.cache.LocalCache.get(LocalCache.java:4000)\ncom.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4789)\norg.apache.spark.sql.delta.DeltaLog$.getDeltaLogFromCache$1(DeltaLog.scala:865)\norg.apache.spark.sql.delta.DeltaLog$.apply(DeltaLog.scala:875)\norg.apache.spark.sql.delta.DeltaLog$.forTable(DeltaLog.scala:751)","Submission Time":1724375757059,"Completion Time":1724375759808,"Accumulables":[{"ID":82,"Name":"duration","Value":"2669","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":83,"Name":"number of output rows","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":84,"Name":"number of output rows","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":85,"Name":"number of input batches","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":86,"Name":"number of output rows","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":87,"Name":"scan time","Value":"2667","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":93,"Name":"duration","Value":"2290","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":95,"Name":"number of output rows","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":136,"Name":"internal.metrics.executorDeserializeTime","Value":31,"Internal":true,"Count Failed Values":true},{"ID":137,"Name":"internal.metrics.executorDeserializeCpuTime","Value":25345792,"Internal":true,"Count Failed Values":true},{"ID":138,"Name":"internal.metrics.executorRunTime","Value":5084,"Internal":true,"Count Failed Values":true},{"ID":139,"Name":"internal.metrics.executorCpuTime","Value":526639067,"Internal":true,"Count Failed Values":true},{"ID":140,"Name":"internal.metrics.resultSize","Value":5968,"Internal":true,"Count Failed Values":true},{"ID":167,"Name":"internal.metrics.input.bytesRead","Value":54562,"Internal":true,"Count Failed Values":true},{"ID":168,"Name":"internal.metrics.input.recordsRead","Value":29,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":3,"Completion Time":1724375759808,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":2,"time":1724375759866,"errorMessage":""}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_0_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":40243,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_2_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":38444,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_4_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":9023,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_6_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":29926,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_7_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":37400,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":3,"rootExecutionId":0,"description":"Delta: Compute snapshot for version: 13","details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (12)\n+- SerializeFromObject (11)\n   +- MapPartitions (10)\n      +- DeserializeToObject (9)\n         +- Project (8)\n            +- Sort (7)\n               +- Exchange (6)\n                  +- Union (5)\n                     :- Project (2)\n                     :  +- Scan parquet  (1)\n                     +- Project (4)\n                        +- Scan json  (3)\n\n\n(1) Scan parquet \nOutput [11]: [txn#1121, add#1122, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L]\nBatched: true\nLocation: DeltaLogFileIndex [s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000010.checkpoint.parquet]\nReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(2) Project\nOutput [23]: [txn#1121, add#1122.path AS _extract_path#1336, add#1122.partitionValues AS _extract_partitionValues#1337, add#1122.size AS _extract_size#1338L, add#1122.modificationTime AS _extract_modificationTime#1339L, add#1122.dataChange AS _extract_dataChange#1340, add#1122.tags AS _extract_tags#1341, add#1122.deletionVector AS _extract_deletionVector#1342, add#1122.baseRowId AS _extract_baseRowId#1343L, add#1122.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1344L, add#1122.clusteringProvider AS _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add#1122.stats AS add_stats_to_use#1176, CASE WHEN isnotnull(add#1122.path) THEN UDF(add#1122.path) END AS add_path_canonical#1190, CASE WHEN isnotnull(remove#1123.path) THEN UDF(remove#1123.path) END AS remove_path_canonical#1209]\nInput [11]: [txn#1121, add#1122, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L]\n\n(3) Scan json \nOutput [11]: [txn#1143, add#1144, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L]\nBatched: false\nLocation: DeltaLogFileIndex [s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000011.json, ... 2 entries]\nReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(4) Project\nOutput [23]: [txn#1143, add#1144.path AS _extract_path#1346, add#1144.partitionValues AS _extract_partitionValues#1347, add#1144.size AS _extract_size#1348L, add#1144.modificationTime AS _extract_modificationTime#1349L, add#1144.dataChange AS _extract_dataChange#1350, add#1144.tags AS _extract_tags#1351, add#1144.deletionVector AS _extract_deletionVector#1352, add#1144.baseRowId AS _extract_baseRowId#1353L, add#1144.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1354L, add#1144.clusteringProvider AS _extract_clusteringProvider#1355, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L, add#1144.stats AS add_stats_to_use#1325, CASE WHEN isnotnull(add#1144.path) THEN UDF(add#1144.path) END AS add_path_canonical#1356, CASE WHEN isnotnull(remove#1145.path) THEN UDF(remove#1145.path) END AS remove_path_canonical#1357]\nInput [11]: [txn#1143, add#1144, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L]\n\n(5) Union\n\n(6) Exchange\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\nArguments: hashpartitioning(coalesce(add_path_canonical#1190, remove_path_canonical#1209), 50), REPARTITION_BY_NUM, [plan_id=84]\n\n(7) Sort\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\nArguments: [version#1131L ASC NULLS FIRST], false, 0\n\n(8) Project\nOutput [10]: [txn#1121, CASE WHEN isnotnull(_extract_path#1336) THEN struct(path, add_path_canonical#1190, partitionValues, _extract_partitionValues#1337, size, _extract_size#1338L, modificationTime, _extract_modificationTime#1339L, dataChange, _extract_dataChange#1340, stats, add_stats_to_use#1176, tags, _extract_tags#1341, deletionVector, _extract_deletionVector#1342, baseRowId, _extract_baseRowId#1343L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1344L, clusteringProvider, _extract_clusteringProvider#1345) END AS add#1231, CASE WHEN isnotnull(remove#1123.path) THEN if (isnull(remove#1123)) null else named_struct(path, remove_path_canonical#1209, deletionTimestamp, remove#1123.deletionTimestamp, dataChange, remove#1123.dataChange, extendedFileMetadata, remove#1123.extendedFileMetadata, partitionValues, remove#1123.partitionValues, size, remove#1123.size, tags, remove#1123.tags, deletionVector, remove#1123.deletionVector, baseRowId, remove#1123.baseRowId, defaultRowCommitVersion, remove#1123.defaultRowCommitVersion, stats, remove#1123.stats) END AS remove#1256, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130]\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\n\n(9) DeserializeToObject\nInput [10]: [txn#1121, add#1231, remove#1256, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1313: org.apache.spark.sql.delta.actions.SingleAction\n\n(10) MapPartitions\nInput [1]: [obj#1313]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$4222/1552743358@40c730df, obj#1314: org.apache.spark.sql.delta.actions.SingleAction\n\n(11) SerializeFromObject\nInput [1]: [obj#1314]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1315, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1316, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1317, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1318, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1319, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1320, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1321, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1322, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1323, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), isBlindAppend, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isBlindAppend), operationMetrics, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationMetrics)), userMetadata, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userMetadata), true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).tags)), engineInfo, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).engineInfo), true, false, true), txnId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).txnId), true, false, true)) AS commitInfo#1324]\n\n(12) AdaptiveSparkPlan\nOutput [10]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"SerializeFromObject","simpleString":"SerializeFromObject [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1315, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1316, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1317, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1318, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1319, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1320, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1321, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1322, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1323, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), isBlindAppend, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isBlindAppend), operationMetrics, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationMetrics)), userMetadata, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userMetadata), true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).tags)), engineInfo, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).engineInfo), true, false, true), txnId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).txnId), true, false, true)) AS commitInfo#1324]","children":[{"nodeName":"MapPartitions","simpleString":"MapPartitions org.apache.spark.sql.delta.Snapshot$$Lambda$4222/1552743358@40c730df, obj#1314: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"DeserializeToObject","simpleString":"DeserializeToObject newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1313: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"Project","simpleString":"Project [txn#1121, CASE WHEN isnotnull(_extract_path#1336) THEN struct(path, add_path_canonical#1190, partitionValues, _extract_partitionValues#1337, size, _extract_size#1338L, modificationTime, _extract_modificationTime#1339L, dataChange, _extract_dataChange#1340, stats, add_stats_to_use#1176, tags, _extract_tags#1341, deletionVector, _extract_deletionVector#1342, baseRowId, _extract_baseRowId#1343L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1344L, clusteringProvider, _extract_clusteringProvider#1345) END AS add#1231, CASE WHEN isnotnull(remove#1123.path) THEN if (isnull(remove#1123)) null else named_struct(path, remove_path_canonical#1209, deletionTimestamp, remove#1123.deletionTimestamp, dataChange, remove#1123.dataChange, extendedFileMetadata, remove#1123.extendedFileMetadata, partitionValues, remove#1123.partitionValues, size, remove#1123.size, tags, remove#1123.tags, deletionVector, remove#1123.deletionVector, baseRowId, remove#1123.baseRowId, defaultRowCommitVersion, remove#1123.defaultRowCommitVersion, stats, remove#1123.stats) END AS remove#1256, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130]","children":[{"nodeName":"Sort","simpleString":"Sort [version#1131L ASC NULLS FIRST], false, 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(coalesce(add_path_canonical#1190, remove_path_canonical#1209), 50), REPARTITION_BY_NUM, [plan_id=84]","children":[{"nodeName":"Union","simpleString":"Union","children":[{"nodeName":"Project","simpleString":"Project [txn#1121, add#1122.path AS _extract_path#1336, add#1122.partitionValues AS _extract_partitionValues#1337, add#1122.size AS _extract_size#1338L, add#1122.modificationTime AS _extract_modificationTime#1339L, add#1122.dataChange AS _extract_dataChange#1340, add#1122.tags AS _extract_tags#1341, add#1122.deletionVector AS _extract_deletionVector#1342, add#1122.baseRowId AS _extract_baseRowId#1343L, add#1122.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1344L, add#1122.clusteringProvider AS _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add#1122.stats AS add_stats_to_use#1176, CASE WHEN isnotnull(add#1122.path) THEN UDF(add#1122.path) END AS add_path_canonical#1190, CASE WHEN isnotnull(remove#1123.path) THEN UDF(remove#1123.path) END AS remove_path_canonical#1209]","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [txn#1121,add#1122,remove#1123,metaData#1124,protocol#1125,cdc#1126,checkpointMetadata#1127,sidecar#1128,domainMetadata#1129,commitInfo#1130,version#1131L] Batched: true, DataFilters: [], Format: Parquet, Location: DeltaLogFileIndex(1 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/0000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitio...","children":[],"metadata":{"Location":"DeltaLogFileIndex(1 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000010.checkpoint.parquet]","ReadSchema":"struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":198,"metricType":"sum"},{"name":"scan time","accumulatorId":197,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":202,"metricType":"timing"},{"name":"metadata time","accumulatorId":199,"metricType":"timing"},{"name":"size of files read","accumulatorId":200,"metricType":"size"},{"name":"number of output rows","accumulatorId":196,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":201,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"Project","simpleString":"Project [txn#1143, add#1144.path AS _extract_path#1346, add#1144.partitionValues AS _extract_partitionValues#1347, add#1144.size AS _extract_size#1348L, add#1144.modificationTime AS _extract_modificationTime#1349L, add#1144.dataChange AS _extract_dataChange#1350, add#1144.tags AS _extract_tags#1351, add#1144.deletionVector AS _extract_deletionVector#1352, add#1144.baseRowId AS _extract_baseRowId#1353L, add#1144.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1354L, add#1144.clusteringProvider AS _extract_clusteringProvider#1355, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L, add#1144.stats AS add_stats_to_use#1325, CASE WHEN isnotnull(add#1144.path) THEN UDF(add#1144.path) END AS add_path_canonical#1356, CASE WHEN isnotnull(remove#1145.path) THEN UDF(remove#1145.path) END AS remove_path_canonical#1357]","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [txn#1143,add#1144,remove#1145,metaData#1146,protocol#1147,cdc#1148,checkpointMetadata#1149,sidecar#1150,domainMetadata#1151,commitInfo#1152,version#1153L] Batched: false, DataFilters: [], Format: JSON, Location: DeltaLogFileIndex(3 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/0000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitio...","children":[],"metadata":{"Location":"DeltaLogFileIndex(3 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000011.json, ...]","ReadSchema":"struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":204,"metricType":"sum"},{"name":"dynamic partition pruning time","accumulatorId":208,"metricType":"timing"},{"name":"metadata time","accumulatorId":205,"metricType":"timing"},{"name":"size of files read","accumulatorId":206,"metricType":"size"},{"name":"number of output rows","accumulatorId":203,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":207,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":194,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":188,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":195,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":189,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":186,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":183,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":192,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":185,"metricType":"sum"},{"name":"records read","accumulatorId":182,"metricType":"sum"},{"name":"local bytes read","accumulatorId":180,"metricType":"size"},{"name":"fetch wait time","accumulatorId":181,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":178,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":184,"metricType":"sum"},{"name":"local blocks read","accumulatorId":177,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":187,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":176,"metricType":"sum"},{"name":"data size","accumulatorId":174,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":190,"metricType":"size"},{"name":"number of partitions","accumulatorId":175,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":191,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":179,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":193,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":171,"metricType":"timing"},{"name":"peak memory","accumulatorId":172,"metricType":"size"},{"name":"spill size","accumulatorId":173,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]},"time":1724375761564,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":3,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (23)\n+- == Current Plan ==\n   SerializeFromObject (13)\n   +- MapPartitions (12)\n      +- DeserializeToObject (11)\n         +- Project (10)\n            +- Sort (9)\n               +- ShuffleQueryStage (8)\n                  +- Exchange (7)\n                     +- Union (6)\n                        :- * Project (3)\n                        :  +- * ColumnarToRow (2)\n                        :     +- Scan parquet  (1)\n                        +- * Project (5)\n                           +- Scan json  (4)\n+- == Initial Plan ==\n   SerializeFromObject (22)\n   +- MapPartitions (21)\n      +- DeserializeToObject (20)\n         +- Project (19)\n            +- Sort (18)\n               +- Exchange (17)\n                  +- Union (16)\n                     :- Project (14)\n                     :  +- Scan parquet  (1)\n                     +- Project (15)\n                        +- Scan json  (4)\n\n\n(1) Scan parquet \nOutput [11]: [txn#1121, add#1122, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L]\nBatched: true\nLocation: DeltaLogFileIndex [s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000010.checkpoint.parquet]\nReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [11]: [txn#1121, add#1122, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L]\n\n(3) Project [codegen id : 1]\nOutput [23]: [txn#1121, add#1122.path AS _extract_path#1336, add#1122.partitionValues AS _extract_partitionValues#1337, add#1122.size AS _extract_size#1338L, add#1122.modificationTime AS _extract_modificationTime#1339L, add#1122.dataChange AS _extract_dataChange#1340, add#1122.tags AS _extract_tags#1341, add#1122.deletionVector AS _extract_deletionVector#1342, add#1122.baseRowId AS _extract_baseRowId#1343L, add#1122.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1344L, add#1122.clusteringProvider AS _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add#1122.stats AS add_stats_to_use#1176, CASE WHEN isnotnull(add#1122.path) THEN UDF(add#1122.path) END AS add_path_canonical#1190, CASE WHEN isnotnull(remove#1123.path) THEN UDF(remove#1123.path) END AS remove_path_canonical#1209]\nInput [11]: [txn#1121, add#1122, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L]\n\n(4) Scan json \nOutput [11]: [txn#1143, add#1144, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L]\nBatched: false\nLocation: DeltaLogFileIndex [s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000011.json, ... 2 entries]\nReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(5) Project [codegen id : 2]\nOutput [23]: [txn#1143, add#1144.path AS _extract_path#1346, add#1144.partitionValues AS _extract_partitionValues#1347, add#1144.size AS _extract_size#1348L, add#1144.modificationTime AS _extract_modificationTime#1349L, add#1144.dataChange AS _extract_dataChange#1350, add#1144.tags AS _extract_tags#1351, add#1144.deletionVector AS _extract_deletionVector#1352, add#1144.baseRowId AS _extract_baseRowId#1353L, add#1144.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1354L, add#1144.clusteringProvider AS _extract_clusteringProvider#1355, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L, add#1144.stats AS add_stats_to_use#1325, CASE WHEN isnotnull(add#1144.path) THEN UDF(add#1144.path) END AS add_path_canonical#1356, CASE WHEN isnotnull(remove#1145.path) THEN UDF(remove#1145.path) END AS remove_path_canonical#1357]\nInput [11]: [txn#1143, add#1144, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L]\n\n(6) Union\n\n(7) Exchange\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\nArguments: hashpartitioning(coalesce(add_path_canonical#1190, remove_path_canonical#1209), 50), REPARTITION_BY_NUM, [plan_id=112]\n\n(8) ShuffleQueryStage\nOutput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\nArguments: 0\n\n(9) Sort\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\nArguments: [version#1131L ASC NULLS FIRST], false, 0\n\n(10) Project\nOutput [10]: [txn#1121, CASE WHEN isnotnull(_extract_path#1336) THEN struct(path, add_path_canonical#1190, partitionValues, _extract_partitionValues#1337, size, _extract_size#1338L, modificationTime, _extract_modificationTime#1339L, dataChange, _extract_dataChange#1340, stats, add_stats_to_use#1176, tags, _extract_tags#1341, deletionVector, _extract_deletionVector#1342, baseRowId, _extract_baseRowId#1343L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1344L, clusteringProvider, _extract_clusteringProvider#1345) END AS add#1231, CASE WHEN isnotnull(remove#1123.path) THEN if (isnull(remove#1123)) null else named_struct(path, remove_path_canonical#1209, deletionTimestamp, remove#1123.deletionTimestamp, dataChange, remove#1123.dataChange, extendedFileMetadata, remove#1123.extendedFileMetadata, partitionValues, remove#1123.partitionValues, size, remove#1123.size, tags, remove#1123.tags, deletionVector, remove#1123.deletionVector, baseRowId, remove#1123.baseRowId, defaultRowCommitVersion, remove#1123.defaultRowCommitVersion, stats, remove#1123.stats) END AS remove#1256, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130]\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\n\n(11) DeserializeToObject\nInput [10]: [txn#1121, add#1231, remove#1256, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1313: org.apache.spark.sql.delta.actions.SingleAction\n\n(12) MapPartitions\nInput [1]: [obj#1313]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$4222/1552743358@40c730df, obj#1314: org.apache.spark.sql.delta.actions.SingleAction\n\n(13) SerializeFromObject\nInput [1]: [obj#1314]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1315, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1316, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1317, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1318, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1319, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1320, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1321, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1322, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1323, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), isBlindAppend, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isBlindAppend), operationMetrics, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationMetrics)), userMetadata, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userMetadata), true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).tags)), engineInfo, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).engineInfo), true, false, true), txnId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).txnId), true, false, true)) AS commitInfo#1324]\n\n(14) Project\nOutput [23]: [txn#1121, add#1122.path AS _extract_path#1336, add#1122.partitionValues AS _extract_partitionValues#1337, add#1122.size AS _extract_size#1338L, add#1122.modificationTime AS _extract_modificationTime#1339L, add#1122.dataChange AS _extract_dataChange#1340, add#1122.tags AS _extract_tags#1341, add#1122.deletionVector AS _extract_deletionVector#1342, add#1122.baseRowId AS _extract_baseRowId#1343L, add#1122.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1344L, add#1122.clusteringProvider AS _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add#1122.stats AS add_stats_to_use#1176, CASE WHEN isnotnull(add#1122.path) THEN UDF(add#1122.path) END AS add_path_canonical#1190, CASE WHEN isnotnull(remove#1123.path) THEN UDF(remove#1123.path) END AS remove_path_canonical#1209]\nInput [11]: [txn#1121, add#1122, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L]\n\n(15) Project\nOutput [23]: [txn#1143, add#1144.path AS _extract_path#1346, add#1144.partitionValues AS _extract_partitionValues#1347, add#1144.size AS _extract_size#1348L, add#1144.modificationTime AS _extract_modificationTime#1349L, add#1144.dataChange AS _extract_dataChange#1350, add#1144.tags AS _extract_tags#1351, add#1144.deletionVector AS _extract_deletionVector#1352, add#1144.baseRowId AS _extract_baseRowId#1353L, add#1144.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1354L, add#1144.clusteringProvider AS _extract_clusteringProvider#1355, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L, add#1144.stats AS add_stats_to_use#1325, CASE WHEN isnotnull(add#1144.path) THEN UDF(add#1144.path) END AS add_path_canonical#1356, CASE WHEN isnotnull(remove#1145.path) THEN UDF(remove#1145.path) END AS remove_path_canonical#1357]\nInput [11]: [txn#1143, add#1144, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L]\n\n(16) Union\n\n(17) Exchange\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\nArguments: hashpartitioning(coalesce(add_path_canonical#1190, remove_path_canonical#1209), 50), REPARTITION_BY_NUM, [plan_id=84]\n\n(18) Sort\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\nArguments: [version#1131L ASC NULLS FIRST], false, 0\n\n(19) Project\nOutput [10]: [txn#1121, CASE WHEN isnotnull(_extract_path#1336) THEN struct(path, add_path_canonical#1190, partitionValues, _extract_partitionValues#1337, size, _extract_size#1338L, modificationTime, _extract_modificationTime#1339L, dataChange, _extract_dataChange#1340, stats, add_stats_to_use#1176, tags, _extract_tags#1341, deletionVector, _extract_deletionVector#1342, baseRowId, _extract_baseRowId#1343L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1344L, clusteringProvider, _extract_clusteringProvider#1345) END AS add#1231, CASE WHEN isnotnull(remove#1123.path) THEN if (isnull(remove#1123)) null else named_struct(path, remove_path_canonical#1209, deletionTimestamp, remove#1123.deletionTimestamp, dataChange, remove#1123.dataChange, extendedFileMetadata, remove#1123.extendedFileMetadata, partitionValues, remove#1123.partitionValues, size, remove#1123.size, tags, remove#1123.tags, deletionVector, remove#1123.deletionVector, baseRowId, remove#1123.baseRowId, defaultRowCommitVersion, remove#1123.defaultRowCommitVersion, stats, remove#1123.stats) END AS remove#1256, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130]\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\n\n(20) DeserializeToObject\nInput [10]: [txn#1121, add#1231, remove#1256, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1313: org.apache.spark.sql.delta.actions.SingleAction\n\n(21) MapPartitions\nInput [1]: [obj#1313]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$4222/1552743358@40c730df, obj#1314: org.apache.spark.sql.delta.actions.SingleAction\n\n(22) SerializeFromObject\nInput [1]: [obj#1314]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1315, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1316, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1317, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1318, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1319, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1320, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1321, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1322, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1323, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), isBlindAppend, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isBlindAppend), operationMetrics, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationMetrics)), userMetadata, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userMetadata), true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).tags)), engineInfo, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).engineInfo), true, false, true), txnId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).txnId), true, false, true)) AS commitInfo#1324]\n\n(23) AdaptiveSparkPlan\nOutput [10]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"SerializeFromObject","simpleString":"SerializeFromObject [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1315, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1316, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1317, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1318, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1319, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1320, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1321, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1322, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1323, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), isBlindAppend, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isBlindAppend), operationMetrics, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationMetrics)), userMetadata, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userMetadata), true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).tags)), engineInfo, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).engineInfo), true, false, true), txnId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).txnId), true, false, true)) AS commitInfo#1324]","children":[{"nodeName":"MapPartitions","simpleString":"MapPartitions org.apache.spark.sql.delta.Snapshot$$Lambda$4222/1552743358@40c730df, obj#1314: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"DeserializeToObject","simpleString":"DeserializeToObject newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1313: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"Project","simpleString":"Project [txn#1121, CASE WHEN isnotnull(_extract_path#1336) THEN struct(path, add_path_canonical#1190, partitionValues, _extract_partitionValues#1337, size, _extract_size#1338L, modificationTime, _extract_modificationTime#1339L, dataChange, _extract_dataChange#1340, stats, add_stats_to_use#1176, tags, _extract_tags#1341, deletionVector, _extract_deletionVector#1342, baseRowId, _extract_baseRowId#1343L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1344L, clusteringProvider, _extract_clusteringProvider#1345) END AS add#1231, CASE WHEN isnotnull(remove#1123.path) THEN if (isnull(remove#1123)) null else named_struct(path, remove_path_canonical#1209, deletionTimestamp, remove#1123.deletionTimestamp, dataChange, remove#1123.dataChange, extendedFileMetadata, remove#1123.extendedFileMetadata, partitionValues, remove#1123.partitionValues, size, remove#1123.size, tags, remove#1123.tags, deletionVector, remove#1123.deletionVector, baseRowId, remove#1123.baseRowId, defaultRowCommitVersion, remove#1123.defaultRowCommitVersion, stats, remove#1123.stats) END AS remove#1256, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130]","children":[{"nodeName":"Sort","simpleString":"Sort [version#1131L ASC NULLS FIRST], false, 0","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(coalesce(add_path_canonical#1190, remove_path_canonical#1209), 50), REPARTITION_BY_NUM, [plan_id=112]","children":[{"nodeName":"Union","simpleString":"Union","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [txn#1121, add#1122.path AS _extract_path#1336, add#1122.partitionValues AS _extract_partitionValues#1337, add#1122.size AS _extract_size#1338L, add#1122.modificationTime AS _extract_modificationTime#1339L, add#1122.dataChange AS _extract_dataChange#1340, add#1122.tags AS _extract_tags#1341, add#1122.deletionVector AS _extract_deletionVector#1342, add#1122.baseRowId AS _extract_baseRowId#1343L, add#1122.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1344L, add#1122.clusteringProvider AS _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add#1122.stats AS add_stats_to_use#1176, CASE WHEN isnotnull(add#1122.path) THEN UDF(add#1122.path) END AS add_path_canonical#1190, CASE WHEN isnotnull(remove#1123.path) THEN UDF(remove#1123.path) END AS remove_path_canonical#1209]","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [txn#1121,add#1122,remove#1123,metaData#1124,protocol#1125,cdc#1126,checkpointMetadata#1127,sidecar#1128,domainMetadata#1129,commitInfo#1130,version#1131L] Batched: true, DataFilters: [], Format: Parquet, Location: DeltaLogFileIndex(1 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/0000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitio...","children":[],"metadata":{"Location":"DeltaLogFileIndex(1 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000010.checkpoint.parquet]","ReadSchema":"struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":198,"metricType":"sum"},{"name":"scan time","accumulatorId":197,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":202,"metricType":"timing"},{"name":"metadata time","accumulatorId":199,"metricType":"timing"},{"name":"size of files read","accumulatorId":200,"metricType":"size"},{"name":"number of output rows","accumulatorId":196,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":201,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":235,"metricType":"sum"},{"name":"number of input batches","accumulatorId":236,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":234,"metricType":"timing"}]},{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Project","simpleString":"Project [txn#1143, add#1144.path AS _extract_path#1346, add#1144.partitionValues AS _extract_partitionValues#1347, add#1144.size AS _extract_size#1348L, add#1144.modificationTime AS _extract_modificationTime#1349L, add#1144.dataChange AS _extract_dataChange#1350, add#1144.tags AS _extract_tags#1351, add#1144.deletionVector AS _extract_deletionVector#1352, add#1144.baseRowId AS _extract_baseRowId#1353L, add#1144.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1354L, add#1144.clusteringProvider AS _extract_clusteringProvider#1355, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L, add#1144.stats AS add_stats_to_use#1325, CASE WHEN isnotnull(add#1144.path) THEN UDF(add#1144.path) END AS add_path_canonical#1356, CASE WHEN isnotnull(remove#1145.path) THEN UDF(remove#1145.path) END AS remove_path_canonical#1357]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [txn#1143,add#1144,remove#1145,metaData#1146,protocol#1147,cdc#1148,checkpointMetadata#1149,sidecar#1150,domainMetadata#1151,commitInfo#1152,version#1153L] Batched: false, DataFilters: [], Format: JSON, Location: DeltaLogFileIndex(3 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/0000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitio...","children":[],"metadata":{"Location":"DeltaLogFileIndex(3 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000011.json, ...]","ReadSchema":"struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":204,"metricType":"sum"},{"name":"dynamic partition pruning time","accumulatorId":208,"metricType":"timing"},{"name":"metadata time","accumulatorId":205,"metricType":"timing"},{"name":"size of files read","accumulatorId":206,"metricType":"size"},{"name":"number of output rows","accumulatorId":203,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":207,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":237,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":232,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":226,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":233,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":227,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":224,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":221,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":230,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":223,"metricType":"sum"},{"name":"records read","accumulatorId":220,"metricType":"sum"},{"name":"local bytes read","accumulatorId":218,"metricType":"size"},{"name":"fetch wait time","accumulatorId":219,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":216,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":222,"metricType":"sum"},{"name":"local blocks read","accumulatorId":215,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":225,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":214,"metricType":"sum"},{"name":"data size","accumulatorId":212,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":228,"metricType":"size"},{"name":"number of partitions","accumulatorId":213,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":229,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":217,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":231,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":209,"metricType":"timing"},{"name":"peak memory","accumulatorId":210,"metricType":"size"},{"name":"spill size","accumulatorId":211,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_8_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":41025,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[198,1],[202,0],[199,0],[200,20836],[201,1]]}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_9_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":37459,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[204,3],[208,0],[205,0],[206,14574],[207,3]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[213,50]]}
{"Event":"SparkListenerJobStart","Job ID":4,"Submission Time":1724375761894,"Stage Infos":[{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":3,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"45\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"FileScanRDD","Scope":"{\"id\":\"55\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"55\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"FileScanRDD","Scope":"{\"id\":\"51\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"51\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"UnionRDD","Scope":"{\"id\":\"46\",\"name\":\"Union\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[18,21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"47\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[4],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"3","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"45\",\"name\":\"Exchange\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.job.description":"Delta: Compute snapshot for version: 13","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":3,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"45\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"FileScanRDD","Scope":"{\"id\":\"55\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"55\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"FileScanRDD","Scope":"{\"id\":\"51\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"51\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"UnionRDD","Scope":"{\"id\":\"46\",\"name\":\"Union\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[18,21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"47\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375761899,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"3","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"45\",\"name\":\"Exchange\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.job.description":"Delta: Compute snapshot for version: 13","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_10_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":63739,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":6,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375761921,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":7,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1724375761922,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":8,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1724375761923,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":8,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1724375761923,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375762630,"Failed":false,"Killed":false,"Accumulables":[{"ID":203,"Name":"number of output rows","Update":"5","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":212,"Name":"data size","Update":"5632","Value":"5632","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":231,"Name":"shuffle bytes written","Update":"2864","Value":"2864","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":232,"Name":"shuffle records written","Update":"5","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"shuffle write time","Update":"14924069","Value":"14924069","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":237,"Name":"duration","Update":"529","Value":"529","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":238,"Name":"internal.metrics.executorDeserializeTime","Update":73,"Value":73,"Internal":true,"Count Failed Values":true},{"ID":239,"Name":"internal.metrics.executorDeserializeCpuTime","Update":30589225,"Value":30589225,"Internal":true,"Count Failed Values":true},{"ID":240,"Name":"internal.metrics.executorRunTime","Update":631,"Value":631,"Internal":true,"Count Failed Values":true},{"ID":241,"Name":"internal.metrics.executorCpuTime","Update":160285852,"Value":160285852,"Internal":true,"Count Failed Values":true},{"ID":242,"Name":"internal.metrics.resultSize","Update":2131,"Value":2131,"Internal":true,"Count Failed Values":true},{"ID":243,"Name":"internal.metrics.jvmGCTime","Update":14,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":266,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":2864,"Value":2864,"Internal":true,"Count Failed Values":true},{"ID":267,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":268,"Name":"internal.metrics.shuffle.write.writeTime","Update":14924069,"Value":14924069,"Internal":true,"Count Failed Values":true},{"ID":269,"Name":"internal.metrics.input.bytesRead","Update":4858,"Value":4858,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.input.recordsRead","Update":5,"Value":5,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":73,"Executor Deserialize CPU Time":30589225,"Executor Run Time":631,"Executor CPU Time":160285852,"Peak Execution Memory":0,"Result Size":2131,"JVM GC Time":14,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":2864,"Shuffle Write Time":14924069,"Shuffle Records Written":5},"Input Metrics":{"Bytes Read":4858,"Records Read":5},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":7,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1724375761922,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375762970,"Failed":false,"Killed":false,"Accumulables":[{"ID":203,"Name":"number of output rows","Update":"10","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":212,"Name":"data size","Update":"11264","Value":"16896","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":231,"Name":"shuffle bytes written","Update":"5111","Value":"7975","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":232,"Name":"shuffle records written","Update":"10","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"shuffle write time","Update":"6488451","Value":"21412520","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":237,"Name":"duration","Update":"879","Value":"1408","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":238,"Name":"internal.metrics.executorDeserializeTime","Update":73,"Value":146,"Internal":true,"Count Failed Values":true},{"ID":239,"Name":"internal.metrics.executorDeserializeCpuTime","Update":38762942,"Value":69352167,"Internal":true,"Count Failed Values":true},{"ID":240,"Name":"internal.metrics.executorRunTime","Update":970,"Value":1601,"Internal":true,"Count Failed Values":true},{"ID":241,"Name":"internal.metrics.executorCpuTime","Update":104199579,"Value":264485431,"Internal":true,"Count Failed Values":true},{"ID":242,"Name":"internal.metrics.resultSize","Update":2131,"Value":4262,"Internal":true,"Count Failed Values":true},{"ID":243,"Name":"internal.metrics.jvmGCTime","Update":14,"Value":28,"Internal":true,"Count Failed Values":true},{"ID":266,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":5111,"Value":7975,"Internal":true,"Count Failed Values":true},{"ID":267,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":10,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":268,"Name":"internal.metrics.shuffle.write.writeTime","Update":6488451,"Value":21412520,"Internal":true,"Count Failed Values":true},{"ID":269,"Name":"internal.metrics.input.bytesRead","Update":9716,"Value":14574,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":15,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":73,"Executor Deserialize CPU Time":38762942,"Executor Run Time":970,"Executor CPU Time":104199579,"Peak Execution Memory":0,"Result Size":2131,"JVM GC Time":14,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":5111,"Shuffle Write Time":6488451,"Shuffle Records Written":10},"Input Metrics":{"Bytes Read":9716,"Records Read":10},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":6,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375761921,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375763847,"Failed":false,"Killed":false,"Accumulables":[{"ID":196,"Name":"number of output rows","Update":"14","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":197,"Name":"scan time","Update":"1727","Value":"1727","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":212,"Name":"data size","Update":"11248","Value":"28144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":231,"Name":"shuffle bytes written","Update":"4551","Value":"12526","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":232,"Name":"shuffle records written","Update":"14","Value":"29","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"shuffle write time","Update":"2422687","Value":"23835207","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":234,"Name":"duration","Update":"1754","Value":"1754","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":235,"Name":"number of output rows","Update":"14","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"number of input batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":238,"Name":"internal.metrics.executorDeserializeTime","Update":73,"Value":219,"Internal":true,"Count Failed Values":true},{"ID":239,"Name":"internal.metrics.executorDeserializeCpuTime","Update":36905222,"Value":106257389,"Internal":true,"Count Failed Values":true},{"ID":240,"Name":"internal.metrics.executorRunTime","Update":1848,"Value":3449,"Internal":true,"Count Failed Values":true},{"ID":241,"Name":"internal.metrics.executorCpuTime","Update":177143879,"Value":441629310,"Internal":true,"Count Failed Values":true},{"ID":242,"Name":"internal.metrics.resultSize","Update":2131,"Value":6393,"Internal":true,"Count Failed Values":true},{"ID":243,"Name":"internal.metrics.jvmGCTime","Update":14,"Value":42,"Internal":true,"Count Failed Values":true},{"ID":266,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":4551,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":267,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":14,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":268,"Name":"internal.metrics.shuffle.write.writeTime","Update":2422687,"Value":23835207,"Internal":true,"Count Failed Values":true},{"ID":269,"Name":"internal.metrics.input.bytesRead","Update":23117,"Value":37691,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.input.recordsRead","Update":14,"Value":29,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":73,"Executor Deserialize CPU Time":36905222,"Executor Run Time":1848,"Executor CPU Time":177143879,"Peak Execution Memory":0,"Result Size":2131,"JVM GC Time":14,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":4551,"Shuffle Write Time":2422687,"Shuffle Records Written":14},"Input Metrics":{"Bytes Read":23117,"Records Read":14},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":3,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"45\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"FileScanRDD","Scope":"{\"id\":\"55\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"55\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"FileScanRDD","Scope":"{\"id\":\"51\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"51\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"UnionRDD","Scope":"{\"id\":\"46\",\"name\":\"Union\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[18,21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"47\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375761899,"Completion Time":1724375763848,"Accumulables":[{"ID":196,"Name":"number of output rows","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":197,"Name":"scan time","Value":"1727","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":203,"Name":"number of output rows","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":212,"Name":"data size","Value":"28144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":231,"Name":"shuffle bytes written","Value":"12526","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":232,"Name":"shuffle records written","Value":"29","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"shuffle write time","Value":"23835207","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":234,"Name":"duration","Value":"1754","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":235,"Name":"number of output rows","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"number of input batches","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":237,"Name":"duration","Value":"1408","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":238,"Name":"internal.metrics.executorDeserializeTime","Value":219,"Internal":true,"Count Failed Values":true},{"ID":239,"Name":"internal.metrics.executorDeserializeCpuTime","Value":106257389,"Internal":true,"Count Failed Values":true},{"ID":240,"Name":"internal.metrics.executorRunTime","Value":3449,"Internal":true,"Count Failed Values":true},{"ID":241,"Name":"internal.metrics.executorCpuTime","Value":441629310,"Internal":true,"Count Failed Values":true},{"ID":242,"Name":"internal.metrics.resultSize","Value":6393,"Internal":true,"Count Failed Values":true},{"ID":243,"Name":"internal.metrics.jvmGCTime","Value":42,"Internal":true,"Count Failed Values":true},{"ID":266,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":12526,"Internal":true,"Count Failed Values":true},{"ID":267,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":29,"Internal":true,"Count Failed Values":true},{"ID":268,"Name":"internal.metrics.shuffle.write.writeTime","Value":23835207,"Internal":true,"Count Failed Values":true},{"ID":269,"Name":"internal.metrics.input.bytesRead","Value":37691,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.input.recordsRead","Value":29,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":4,"Completion Time":1724375763851,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":3,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (23)\n+- == Final Plan ==\n   * SerializeFromObject (13)\n   +- MapPartitions (12)\n      +- DeserializeToObject (11)\n         +- * Project (10)\n            +- * Sort (9)\n               +- ShuffleQueryStage (8), Statistics(sizeInBytes=27.5 KiB, rowCount=29)\n                  +- Exchange (7)\n                     +- Union (6)\n                        :- * Project (3)\n                        :  +- * ColumnarToRow (2)\n                        :     +- Scan parquet  (1)\n                        +- * Project (5)\n                           +- Scan json  (4)\n+- == Initial Plan ==\n   SerializeFromObject (22)\n   +- MapPartitions (21)\n      +- DeserializeToObject (20)\n         +- Project (19)\n            +- Sort (18)\n               +- Exchange (17)\n                  +- Union (16)\n                     :- Project (14)\n                     :  +- Scan parquet  (1)\n                     +- Project (15)\n                        +- Scan json  (4)\n\n\n(1) Scan parquet \nOutput [11]: [txn#1121, add#1122, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L]\nBatched: true\nLocation: DeltaLogFileIndex [s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000010.checkpoint.parquet]\nReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [11]: [txn#1121, add#1122, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L]\n\n(3) Project [codegen id : 1]\nOutput [23]: [txn#1121, add#1122.path AS _extract_path#1336, add#1122.partitionValues AS _extract_partitionValues#1337, add#1122.size AS _extract_size#1338L, add#1122.modificationTime AS _extract_modificationTime#1339L, add#1122.dataChange AS _extract_dataChange#1340, add#1122.tags AS _extract_tags#1341, add#1122.deletionVector AS _extract_deletionVector#1342, add#1122.baseRowId AS _extract_baseRowId#1343L, add#1122.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1344L, add#1122.clusteringProvider AS _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add#1122.stats AS add_stats_to_use#1176, CASE WHEN isnotnull(add#1122.path) THEN UDF(add#1122.path) END AS add_path_canonical#1190, CASE WHEN isnotnull(remove#1123.path) THEN UDF(remove#1123.path) END AS remove_path_canonical#1209]\nInput [11]: [txn#1121, add#1122, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L]\n\n(4) Scan json \nOutput [11]: [txn#1143, add#1144, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L]\nBatched: false\nLocation: DeltaLogFileIndex [s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000011.json, ... 2 entries]\nReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(5) Project [codegen id : 2]\nOutput [23]: [txn#1143, add#1144.path AS _extract_path#1346, add#1144.partitionValues AS _extract_partitionValues#1347, add#1144.size AS _extract_size#1348L, add#1144.modificationTime AS _extract_modificationTime#1349L, add#1144.dataChange AS _extract_dataChange#1350, add#1144.tags AS _extract_tags#1351, add#1144.deletionVector AS _extract_deletionVector#1352, add#1144.baseRowId AS _extract_baseRowId#1353L, add#1144.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1354L, add#1144.clusteringProvider AS _extract_clusteringProvider#1355, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L, add#1144.stats AS add_stats_to_use#1325, CASE WHEN isnotnull(add#1144.path) THEN UDF(add#1144.path) END AS add_path_canonical#1356, CASE WHEN isnotnull(remove#1145.path) THEN UDF(remove#1145.path) END AS remove_path_canonical#1357]\nInput [11]: [txn#1143, add#1144, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L]\n\n(6) Union\n\n(7) Exchange\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\nArguments: hashpartitioning(coalesce(add_path_canonical#1190, remove_path_canonical#1209), 50), REPARTITION_BY_NUM, [plan_id=112]\n\n(8) ShuffleQueryStage\nOutput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\nArguments: 0\n\n(9) Sort [codegen id : 3]\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\nArguments: [version#1131L ASC NULLS FIRST], false, 0\n\n(10) Project [codegen id : 3]\nOutput [10]: [txn#1121, CASE WHEN isnotnull(_extract_path#1336) THEN struct(path, add_path_canonical#1190, partitionValues, _extract_partitionValues#1337, size, _extract_size#1338L, modificationTime, _extract_modificationTime#1339L, dataChange, _extract_dataChange#1340, stats, add_stats_to_use#1176, tags, _extract_tags#1341, deletionVector, _extract_deletionVector#1342, baseRowId, _extract_baseRowId#1343L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1344L, clusteringProvider, _extract_clusteringProvider#1345) END AS add#1231, CASE WHEN isnotnull(remove#1123.path) THEN if (isnull(remove#1123)) null else named_struct(path, remove_path_canonical#1209, deletionTimestamp, remove#1123.deletionTimestamp, dataChange, remove#1123.dataChange, extendedFileMetadata, remove#1123.extendedFileMetadata, partitionValues, remove#1123.partitionValues, size, remove#1123.size, tags, remove#1123.tags, deletionVector, remove#1123.deletionVector, baseRowId, remove#1123.baseRowId, defaultRowCommitVersion, remove#1123.defaultRowCommitVersion, stats, remove#1123.stats) END AS remove#1256, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130]\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\n\n(11) DeserializeToObject\nInput [10]: [txn#1121, add#1231, remove#1256, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1313: org.apache.spark.sql.delta.actions.SingleAction\n\n(12) MapPartitions\nInput [1]: [obj#1313]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$4222/1552743358@40c730df, obj#1314: org.apache.spark.sql.delta.actions.SingleAction\n\n(13) SerializeFromObject [codegen id : 4]\nInput [1]: [obj#1314]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1315, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1316, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1317, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1318, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1319, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1320, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1321, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1322, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1323, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), isBlindAppend, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isBlindAppend), operationMetrics, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationMetrics)), userMetadata, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userMetadata), true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).tags)), engineInfo, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).engineInfo), true, false, true), txnId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).txnId), true, false, true)) AS commitInfo#1324]\n\n(14) Project\nOutput [23]: [txn#1121, add#1122.path AS _extract_path#1336, add#1122.partitionValues AS _extract_partitionValues#1337, add#1122.size AS _extract_size#1338L, add#1122.modificationTime AS _extract_modificationTime#1339L, add#1122.dataChange AS _extract_dataChange#1340, add#1122.tags AS _extract_tags#1341, add#1122.deletionVector AS _extract_deletionVector#1342, add#1122.baseRowId AS _extract_baseRowId#1343L, add#1122.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1344L, add#1122.clusteringProvider AS _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add#1122.stats AS add_stats_to_use#1176, CASE WHEN isnotnull(add#1122.path) THEN UDF(add#1122.path) END AS add_path_canonical#1190, CASE WHEN isnotnull(remove#1123.path) THEN UDF(remove#1123.path) END AS remove_path_canonical#1209]\nInput [11]: [txn#1121, add#1122, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L]\n\n(15) Project\nOutput [23]: [txn#1143, add#1144.path AS _extract_path#1346, add#1144.partitionValues AS _extract_partitionValues#1347, add#1144.size AS _extract_size#1348L, add#1144.modificationTime AS _extract_modificationTime#1349L, add#1144.dataChange AS _extract_dataChange#1350, add#1144.tags AS _extract_tags#1351, add#1144.deletionVector AS _extract_deletionVector#1352, add#1144.baseRowId AS _extract_baseRowId#1353L, add#1144.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1354L, add#1144.clusteringProvider AS _extract_clusteringProvider#1355, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L, add#1144.stats AS add_stats_to_use#1325, CASE WHEN isnotnull(add#1144.path) THEN UDF(add#1144.path) END AS add_path_canonical#1356, CASE WHEN isnotnull(remove#1145.path) THEN UDF(remove#1145.path) END AS remove_path_canonical#1357]\nInput [11]: [txn#1143, add#1144, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L]\n\n(16) Union\n\n(17) Exchange\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\nArguments: hashpartitioning(coalesce(add_path_canonical#1190, remove_path_canonical#1209), 50), REPARTITION_BY_NUM, [plan_id=84]\n\n(18) Sort\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\nArguments: [version#1131L ASC NULLS FIRST], false, 0\n\n(19) Project\nOutput [10]: [txn#1121, CASE WHEN isnotnull(_extract_path#1336) THEN struct(path, add_path_canonical#1190, partitionValues, _extract_partitionValues#1337, size, _extract_size#1338L, modificationTime, _extract_modificationTime#1339L, dataChange, _extract_dataChange#1340, stats, add_stats_to_use#1176, tags, _extract_tags#1341, deletionVector, _extract_deletionVector#1342, baseRowId, _extract_baseRowId#1343L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1344L, clusteringProvider, _extract_clusteringProvider#1345) END AS add#1231, CASE WHEN isnotnull(remove#1123.path) THEN if (isnull(remove#1123)) null else named_struct(path, remove_path_canonical#1209, deletionTimestamp, remove#1123.deletionTimestamp, dataChange, remove#1123.dataChange, extendedFileMetadata, remove#1123.extendedFileMetadata, partitionValues, remove#1123.partitionValues, size, remove#1123.size, tags, remove#1123.tags, deletionVector, remove#1123.deletionVector, baseRowId, remove#1123.baseRowId, defaultRowCommitVersion, remove#1123.defaultRowCommitVersion, stats, remove#1123.stats) END AS remove#1256, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130]\nInput [23]: [txn#1121, _extract_path#1336, _extract_partitionValues#1337, _extract_size#1338L, _extract_modificationTime#1339L, _extract_dataChange#1340, _extract_tags#1341, _extract_deletionVector#1342, _extract_baseRowId#1343L, _extract_defaultRowCommitVersion#1344L, _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add_stats_to_use#1176, add_path_canonical#1190, remove_path_canonical#1209]\n\n(20) DeserializeToObject\nInput [10]: [txn#1121, add#1231, remove#1256, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1313: org.apache.spark.sql.delta.actions.SingleAction\n\n(21) MapPartitions\nInput [1]: [obj#1313]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$4222/1552743358@40c730df, obj#1314: org.apache.spark.sql.delta.actions.SingleAction\n\n(22) SerializeFromObject\nInput [1]: [obj#1314]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1315, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1316, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1317, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1318, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1319, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1320, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1321, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1322, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1323, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), isBlindAppend, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isBlindAppend), operationMetrics, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationMetrics)), userMetadata, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userMetadata), true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).tags)), engineInfo, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).engineInfo), true, false, true), txnId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).txnId), true, false, true)) AS commitInfo#1324]\n\n(23) AdaptiveSparkPlan\nOutput [10]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (4)","simpleString":"WholeStageCodegen (4)","children":[{"nodeName":"SerializeFromObject","simpleString":"SerializeFromObject [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1315, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1316, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1317, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1318, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1319, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1320, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1321, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1322, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1323, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), isBlindAppend, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isBlindAppend), operationMetrics, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -26), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -27), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationMetrics)), userMetadata, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userMetadata), true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -28), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -29), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Map), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).tags)), engineInfo, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).engineInfo), true, false, true), txnId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).txnId), true, false, true)) AS commitInfo#1324]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MapPartitions","simpleString":"MapPartitions org.apache.spark.sql.delta.Snapshot$$Lambda$4222/1552743358@40c730df, obj#1314: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"DeserializeToObject","simpleString":"DeserializeToObject newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1313: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"WholeStageCodegen (3)","simpleString":"WholeStageCodegen (3)","children":[{"nodeName":"Project","simpleString":"Project [txn#1121, CASE WHEN isnotnull(_extract_path#1336) THEN struct(path, add_path_canonical#1190, partitionValues, _extract_partitionValues#1337, size, _extract_size#1338L, modificationTime, _extract_modificationTime#1339L, dataChange, _extract_dataChange#1340, stats, add_stats_to_use#1176, tags, _extract_tags#1341, deletionVector, _extract_deletionVector#1342, baseRowId, _extract_baseRowId#1343L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1344L, clusteringProvider, _extract_clusteringProvider#1345) END AS add#1231, CASE WHEN isnotnull(remove#1123.path) THEN if (isnull(remove#1123)) null else named_struct(path, remove_path_canonical#1209, deletionTimestamp, remove#1123.deletionTimestamp, dataChange, remove#1123.dataChange, extendedFileMetadata, remove#1123.extendedFileMetadata, partitionValues, remove#1123.partitionValues, size, remove#1123.size, tags, remove#1123.tags, deletionVector, remove#1123.deletionVector, baseRowId, remove#1123.baseRowId, defaultRowCommitVersion, remove#1123.defaultRowCommitVersion, stats, remove#1123.stats) END AS remove#1256, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130]","children":[{"nodeName":"Sort","simpleString":"Sort [version#1131L ASC NULLS FIRST], false, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(coalesce(add_path_canonical#1190, remove_path_canonical#1209), 50), REPARTITION_BY_NUM, [plan_id=112]","children":[{"nodeName":"Union","simpleString":"Union","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [txn#1121, add#1122.path AS _extract_path#1336, add#1122.partitionValues AS _extract_partitionValues#1337, add#1122.size AS _extract_size#1338L, add#1122.modificationTime AS _extract_modificationTime#1339L, add#1122.dataChange AS _extract_dataChange#1340, add#1122.tags AS _extract_tags#1341, add#1122.deletionVector AS _extract_deletionVector#1342, add#1122.baseRowId AS _extract_baseRowId#1343L, add#1122.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1344L, add#1122.clusteringProvider AS _extract_clusteringProvider#1345, remove#1123, metaData#1124, protocol#1125, cdc#1126, checkpointMetadata#1127, sidecar#1128, domainMetadata#1129, commitInfo#1130, version#1131L, add#1122.stats AS add_stats_to_use#1176, CASE WHEN isnotnull(add#1122.path) THEN UDF(add#1122.path) END AS add_path_canonical#1190, CASE WHEN isnotnull(remove#1123.path) THEN UDF(remove#1123.path) END AS remove_path_canonical#1209]","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [txn#1121,add#1122,remove#1123,metaData#1124,protocol#1125,cdc#1126,checkpointMetadata#1127,sidecar#1128,domainMetadata#1129,commitInfo#1130,version#1131L] Batched: true, DataFilters: [], Format: Parquet, Location: DeltaLogFileIndex(1 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/0000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitio...","children":[],"metadata":{"Location":"DeltaLogFileIndex(1 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000010.checkpoint.parquet]","ReadSchema":"struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":198,"metricType":"sum"},{"name":"scan time","accumulatorId":197,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":202,"metricType":"timing"},{"name":"metadata time","accumulatorId":199,"metricType":"timing"},{"name":"size of files read","accumulatorId":200,"metricType":"size"},{"name":"number of output rows","accumulatorId":196,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":201,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":235,"metricType":"sum"},{"name":"number of input batches","accumulatorId":236,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":234,"metricType":"timing"}]},{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Project","simpleString":"Project [txn#1143, add#1144.path AS _extract_path#1346, add#1144.partitionValues AS _extract_partitionValues#1347, add#1144.size AS _extract_size#1348L, add#1144.modificationTime AS _extract_modificationTime#1349L, add#1144.dataChange AS _extract_dataChange#1350, add#1144.tags AS _extract_tags#1351, add#1144.deletionVector AS _extract_deletionVector#1352, add#1144.baseRowId AS _extract_baseRowId#1353L, add#1144.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1354L, add#1144.clusteringProvider AS _extract_clusteringProvider#1355, remove#1145, metaData#1146, protocol#1147, cdc#1148, checkpointMetadata#1149, sidecar#1150, domainMetadata#1151, commitInfo#1152, version#1153L, add#1144.stats AS add_stats_to_use#1325, CASE WHEN isnotnull(add#1144.path) THEN UDF(add#1144.path) END AS add_path_canonical#1356, CASE WHEN isnotnull(remove#1145.path) THEN UDF(remove#1145.path) END AS remove_path_canonical#1357]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [txn#1143,add#1144,remove#1145,metaData#1146,protocol#1147,cdc#1148,checkpointMetadata#1149,sidecar#1150,domainMetadata#1151,commitInfo#1152,version#1153L] Batched: false, DataFilters: [], Format: JSON, Location: DeltaLogFileIndex(3 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/0000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitio...","children":[],"metadata":{"Location":"DeltaLogFileIndex(3 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000011.json, ...]","ReadSchema":"struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":204,"metricType":"sum"},{"name":"dynamic partition pruning time","accumulatorId":208,"metricType":"timing"},{"name":"metadata time","accumulatorId":205,"metricType":"timing"},{"name":"size of files read","accumulatorId":206,"metricType":"size"},{"name":"number of output rows","accumulatorId":203,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":207,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":237,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":232,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":226,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":233,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":227,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":224,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":221,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":230,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":223,"metricType":"sum"},{"name":"records read","accumulatorId":220,"metricType":"sum"},{"name":"local bytes read","accumulatorId":218,"metricType":"size"},{"name":"fetch wait time","accumulatorId":219,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":216,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":222,"metricType":"sum"},{"name":"local blocks read","accumulatorId":215,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":225,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":214,"metricType":"sum"},{"name":"data size","accumulatorId":212,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":228,"metricType":"size"},{"name":"number of partitions","accumulatorId":213,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":229,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":217,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":231,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":275,"metricType":"timing"},{"name":"peak memory","accumulatorId":276,"metricType":"size"},{"name":"spill size","accumulatorId":277,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":274,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":273,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_10_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":63739,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":3,"time":1724375764314,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":4,"rootExecutionId":0,"description":"Delta: Compute snapshot for version: 13","details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (6)\n+- ObjectHashAggregate (5)\n   +- Exchange (4)\n      +- ObjectHashAggregate (3)\n         +- Project (2)\n            +- Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log (1)\n\n\n(1) Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log\nOutput [10]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324]\nArguments: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324], Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log MapPartitionsRDD[30] at save at NativeMethodAccessorImpl.java:0, ExistingRDD, UnknownPartitioning(0)\n\n(2) Project\nOutput [6]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, domainMetadata#1323]\nInput [10]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324]\n\n(3) ObjectHashAggregate\nInput [6]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, domainMetadata#1323]\nKeys: []\nFunctions [10]: [partial_collect_set(domainMetadata#1323, 0, 0), partial_collect_set(txn#1315, 0, 0), partial_count(protocol#1319), partial_sum(add#1316.size), partial_last(metaData#1318, true), partial_count(metaData#1318), partial_last(protocol#1319, true), partial_count(remove#1317), partial_count(add#1316), partial_count(txn#1315)]\nAggregate Attributes [12]: [buf#1461, buf#1462, count#1463L, sum#1464L, last#1465, valueSet#1466, count#1467L, last#1468, valueSet#1469, count#1470L, count#1471L, count#1472L]\nResults [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\n\n(4) Exchange\nInput [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=171]\n\n(5) ObjectHashAggregate\nInput [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\nKeys: []\nFunctions [10]: [collect_set(domainMetadata#1323, 0, 0), collect_set(txn#1315, 0, 0), count(protocol#1319), sum(add#1316.size), last(metaData#1318, true), count(metaData#1318), last(protocol#1319, true), count(remove#1317), count(add#1316), count(txn#1315)]\nAggregate Attributes [10]: [collect_set(domainMetadata#1323, 0, 0)#1386, collect_set(txn#1315, 0, 0)#1385, count(protocol#1319)#1384L, sum(add#1316.size)#1379L, last(metaData#1318) ignore nulls#1387, count(metaData#1318)#1383L, last(protocol#1319) ignore nulls#1388, count(remove#1317)#1382L, count(add#1316)#1381L, count(txn#1315)#1380L]\nResults [11]: [collect_set(domainMetadata#1323, 0, 0)#1386 AS domainMetadata#1392, null AS fileSizeHistogram#1393, collect_set(txn#1315, 0, 0)#1385 AS setTransactions#1394, count(protocol#1319)#1384L AS numOfProtocol#1395L, coalesce(sum(add#1316.size)#1379L, 0) AS sizeInBytes#1396L, last(metaData#1318) ignore nulls#1387 AS metadata#1397, count(metaData#1318)#1383L AS numOfMetadata#1398L, last(protocol#1319) ignore nulls#1388 AS protocol#1399, count(remove#1317)#1382L AS numOfRemoves#1400L, count(add#1316)#1381L AS numOfFiles#1401L, count(txn#1315)#1380L AS numOfSetTransactions#1402L]\n\n(6) AdaptiveSparkPlan\nOutput [11]: [domainMetadata#1392, fileSizeHistogram#1393, setTransactions#1394, numOfProtocol#1395L, sizeInBytes#1396L, metadata#1397, numOfMetadata#1398L, protocol#1399, numOfRemoves#1400L, numOfFiles#1401L, numOfSetTransactions#1402L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"ObjectHashAggregate","simpleString":"ObjectHashAggregate(keys=[], functions=[collect_set(domainMetadata#1323, 0, 0), collect_set(txn#1315, 0, 0), count(protocol#1319), sum(add#1316.size), last(metaData#1318, true), count(metaData#1318), last(protocol#1319, true), count(remove#1317), count(add#1316), count(txn#1315)])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=171]","children":[{"nodeName":"ObjectHashAggregate","simpleString":"ObjectHashAggregate(keys=[], functions=[partial_collect_set(domainMetadata#1323, 0, 0), partial_collect_set(txn#1315, 0, 0), partial_count(protocol#1319), partial_sum(add#1316.size), partial_last(metaData#1318, true), partial_count(metaData#1318), partial_last(protocol#1319, true), partial_count(remove#1317), partial_count(add#1316), partial_count(txn#1315)])","children":[{"nodeName":"Project","simpleString":"Project [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, domainMetadata#1323]","children":[{"nodeName":"Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log","simpleString":"Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log[txn#1315,add#1316,remove#1317,metaData#1318,protocol#1319,cdc#1320,checkpointMetadata#1321,sidecar#1322,domainMetadata#1323,commitInfo#1324]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":308,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":304,"metricType":"sum"},{"name":"time in aggregation build","accumulatorId":305,"metricType":"timing"},{"name":"spill size","accumulatorId":306,"metricType":"size"},{"name":"number of sort fallback tasks","accumulatorId":307,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":302,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":296,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":303,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":297,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":294,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":291,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":300,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":293,"metricType":"sum"},{"name":"records read","accumulatorId":290,"metricType":"sum"},{"name":"local bytes read","accumulatorId":288,"metricType":"size"},{"name":"fetch wait time","accumulatorId":289,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":286,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":292,"metricType":"sum"},{"name":"local blocks read","accumulatorId":285,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":295,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":284,"metricType":"sum"},{"name":"data size","accumulatorId":282,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":298,"metricType":"size"},{"name":"number of partitions","accumulatorId":283,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":299,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":287,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":301,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":278,"metricType":"sum"},{"name":"time in aggregation build","accumulatorId":279,"metricType":"timing"},{"name":"spill size","accumulatorId":280,"metricType":"size"},{"name":"number of sort fallback tasks","accumulatorId":281,"metricType":"sum"}]}],"metadata":{},"metrics":[]},"time":1724375764497,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":4,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Current Plan ==\n   ObjectHashAggregate (6)\n   +- ShuffleQueryStage (5)\n      +- Exchange (4)\n         +- ObjectHashAggregate (3)\n            +- * Project (2)\n               +- * Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log (1)\n+- == Initial Plan ==\n   ObjectHashAggregate (9)\n   +- Exchange (8)\n      +- ObjectHashAggregate (7)\n         +- Project (2)\n            +- Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log (1)\n\n\n(1) Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log [codegen id : 1]\nOutput [10]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324]\nArguments: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324], Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log MapPartitionsRDD[30] at save at NativeMethodAccessorImpl.java:0, ExistingRDD, UnknownPartitioning(0)\n\n(2) Project [codegen id : 1]\nOutput [6]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, domainMetadata#1323]\nInput [10]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324]\n\n(3) ObjectHashAggregate\nInput [6]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, domainMetadata#1323]\nKeys: []\nFunctions [10]: [partial_collect_set(domainMetadata#1323, 0, 0), partial_collect_set(txn#1315, 0, 0), partial_count(protocol#1319), partial_sum(add#1316.size), partial_last(metaData#1318, true), partial_count(metaData#1318), partial_last(protocol#1319, true), partial_count(remove#1317), partial_count(add#1316), partial_count(txn#1315)]\nAggregate Attributes [12]: [buf#1461, buf#1462, count#1463L, sum#1464L, last#1465, valueSet#1466, count#1467L, last#1468, valueSet#1469, count#1470L, count#1471L, count#1472L]\nResults [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\n\n(4) Exchange\nInput [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=181]\n\n(5) ShuffleQueryStage\nOutput [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\nArguments: 0\n\n(6) ObjectHashAggregate\nInput [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\nKeys: []\nFunctions [10]: [collect_set(domainMetadata#1323, 0, 0), collect_set(txn#1315, 0, 0), count(protocol#1319), sum(add#1316.size), last(metaData#1318, true), count(metaData#1318), last(protocol#1319, true), count(remove#1317), count(add#1316), count(txn#1315)]\nAggregate Attributes [10]: [collect_set(domainMetadata#1323, 0, 0)#1386, collect_set(txn#1315, 0, 0)#1385, count(protocol#1319)#1384L, sum(add#1316.size)#1379L, last(metaData#1318) ignore nulls#1387, count(metaData#1318)#1383L, last(protocol#1319) ignore nulls#1388, count(remove#1317)#1382L, count(add#1316)#1381L, count(txn#1315)#1380L]\nResults [11]: [collect_set(domainMetadata#1323, 0, 0)#1386 AS domainMetadata#1392, null AS fileSizeHistogram#1393, collect_set(txn#1315, 0, 0)#1385 AS setTransactions#1394, count(protocol#1319)#1384L AS numOfProtocol#1395L, coalesce(sum(add#1316.size)#1379L, 0) AS sizeInBytes#1396L, last(metaData#1318) ignore nulls#1387 AS metadata#1397, count(metaData#1318)#1383L AS numOfMetadata#1398L, last(protocol#1319) ignore nulls#1388 AS protocol#1399, count(remove#1317)#1382L AS numOfRemoves#1400L, count(add#1316)#1381L AS numOfFiles#1401L, count(txn#1315)#1380L AS numOfSetTransactions#1402L]\n\n(7) ObjectHashAggregate\nInput [6]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, domainMetadata#1323]\nKeys: []\nFunctions [10]: [partial_collect_set(domainMetadata#1323, 0, 0), partial_collect_set(txn#1315, 0, 0), partial_count(protocol#1319), partial_sum(add#1316.size), partial_last(metaData#1318, true), partial_count(metaData#1318), partial_last(protocol#1319, true), partial_count(remove#1317), partial_count(add#1316), partial_count(txn#1315)]\nAggregate Attributes [12]: [buf#1461, buf#1462, count#1463L, sum#1464L, last#1465, valueSet#1466, count#1467L, last#1468, valueSet#1469, count#1470L, count#1471L, count#1472L]\nResults [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\n\n(8) Exchange\nInput [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=171]\n\n(9) ObjectHashAggregate\nInput [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\nKeys: []\nFunctions [10]: [collect_set(domainMetadata#1323, 0, 0), collect_set(txn#1315, 0, 0), count(protocol#1319), sum(add#1316.size), last(metaData#1318, true), count(metaData#1318), last(protocol#1319, true), count(remove#1317), count(add#1316), count(txn#1315)]\nAggregate Attributes [10]: [collect_set(domainMetadata#1323, 0, 0)#1386, collect_set(txn#1315, 0, 0)#1385, count(protocol#1319)#1384L, sum(add#1316.size)#1379L, last(metaData#1318) ignore nulls#1387, count(metaData#1318)#1383L, last(protocol#1319) ignore nulls#1388, count(remove#1317)#1382L, count(add#1316)#1381L, count(txn#1315)#1380L]\nResults [11]: [collect_set(domainMetadata#1323, 0, 0)#1386 AS domainMetadata#1392, null AS fileSizeHistogram#1393, collect_set(txn#1315, 0, 0)#1385 AS setTransactions#1394, count(protocol#1319)#1384L AS numOfProtocol#1395L, coalesce(sum(add#1316.size)#1379L, 0) AS sizeInBytes#1396L, last(metaData#1318) ignore nulls#1387 AS metadata#1397, count(metaData#1318)#1383L AS numOfMetadata#1398L, last(protocol#1319) ignore nulls#1388 AS protocol#1399, count(remove#1317)#1382L AS numOfRemoves#1400L, count(add#1316)#1381L AS numOfFiles#1401L, count(txn#1315)#1380L AS numOfSetTransactions#1402L]\n\n(10) AdaptiveSparkPlan\nOutput [11]: [domainMetadata#1392, fileSizeHistogram#1393, setTransactions#1394, numOfProtocol#1395L, sizeInBytes#1396L, metadata#1397, numOfMetadata#1398L, protocol#1399, numOfRemoves#1400L, numOfFiles#1401L, numOfSetTransactions#1402L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"ObjectHashAggregate","simpleString":"ObjectHashAggregate(keys=[], functions=[collect_set(domainMetadata#1323, 0, 0), collect_set(txn#1315, 0, 0), count(protocol#1319), sum(add#1316.size), last(metaData#1318, true), count(metaData#1318), last(protocol#1319, true), count(remove#1317), count(add#1316), count(txn#1315)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=181]","children":[{"nodeName":"ObjectHashAggregate","simpleString":"ObjectHashAggregate(keys=[], functions=[partial_collect_set(domainMetadata#1323, 0, 0), partial_collect_set(txn#1315, 0, 0), partial_count(protocol#1319), partial_sum(add#1316.size), partial_last(metaData#1318, true), partial_count(metaData#1318), partial_last(protocol#1319, true), partial_count(remove#1317), partial_count(add#1316), partial_count(txn#1315)])","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, domainMetadata#1323]","children":[{"nodeName":"Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log","simpleString":"Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log[txn#1315,add#1316,remove#1317,metaData#1318,protocol#1319,cdc#1320,checkpointMetadata#1321,sidecar#1322,domainMetadata#1323,commitInfo#1324]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":308,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":339,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":335,"metricType":"sum"},{"name":"time in aggregation build","accumulatorId":336,"metricType":"timing"},{"name":"spill size","accumulatorId":337,"metricType":"size"},{"name":"number of sort fallback tasks","accumulatorId":338,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":333,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":327,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":334,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":328,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":325,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":322,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":331,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":324,"metricType":"sum"},{"name":"records read","accumulatorId":321,"metricType":"sum"},{"name":"local bytes read","accumulatorId":319,"metricType":"size"},{"name":"fetch wait time","accumulatorId":320,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":317,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":323,"metricType":"sum"},{"name":"local blocks read","accumulatorId":316,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":326,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":315,"metricType":"sum"},{"name":"data size","accumulatorId":313,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":329,"metricType":"size"},{"name":"number of partitions","accumulatorId":314,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":330,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":318,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":332,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":309,"metricType":"sum"},{"name":"time in aggregation build","accumulatorId":310,"metricType":"timing"},{"name":"spill size","accumulatorId":311,"metricType":"size"},{"name":"number of sort fallback tasks","accumulatorId":312,"metricType":"sum"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":4,"accumUpdates":[[314,1]]}
{"Event":"SparkListenerJobStart","Job ID":5,"Submission Time":1724375764574,"Stage Infos":[{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":3,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"45\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"FileScanRDD","Scope":"{\"id\":\"55\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"55\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"FileScanRDD","Scope":"{\"id\":\"51\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"51\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"UnionRDD","Scope":"{\"id\":\"46\",\"name\":\"Union\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[18,21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"47\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":50,"RDD Info":[{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"68\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"MapPartitions\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"69\",\"name\":\"ObjectHashAggregate\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"60\",\"name\":\"DeserializeToObject\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"66\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log","Scope":"{\"id\":\"67\",\"name\":\"map\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"SQLExecutionRDD","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"56\",\"name\":\"WholeStageCodegen (4)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"61\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[5],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[5,6],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"4","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"68\",\"name\":\"Exchange\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.job.description":"Delta: Compute snapshot for version: 13","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":50,"RDD Info":[{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"68\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"MapPartitions\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"69\",\"name\":\"ObjectHashAggregate\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"60\",\"name\":\"DeserializeToObject\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"66\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log","Scope":"{\"id\":\"67\",\"name\":\"map\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"SQLExecutionRDD","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"56\",\"name\":\"WholeStageCodegen (4)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"61\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[5],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375764585,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"4","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"68\",\"name\":\"Exchange\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.job.description":"Delta: Compute snapshot for version: 13","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_11_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":148205,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":9,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1724375764643,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":10,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1724375764645,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":11,"Index":6,"Attempt":0,"Partition ID":6,"Launch Time":1724375764645,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":12,"Index":9,"Attempt":0,"Partition ID":9,"Launch Time":1724375764645,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":13,"Index":14,"Attempt":0,"Partition ID":14,"Launch Time":1724375764645,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":14,"Index":21,"Attempt":0,"Partition ID":21,"Launch Time":1724375764646,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":15,"Index":22,"Attempt":0,"Partition ID":22,"Launch Time":1724375764646,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":16,"Index":25,"Attempt":0,"Partition ID":25,"Launch Time":1724375764646,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_14","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":1019,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_21","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":254,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_25","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":202,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_9","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":263,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_6","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":263,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_3","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":203,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_22","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":203,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_4","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":203,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":17,"Index":26,"Attempt":0,"Partition ID":26,"Launch Time":1724375765271,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":18,"Index":30,"Attempt":0,"Partition ID":30,"Launch Time":1724375765272,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":19,"Index":38,"Attempt":0,"Partition ID":38,"Launch Time":1724375765273,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":20,"Index":41,"Attempt":0,"Partition ID":41,"Launch Time":1724375765273,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":21,"Index":42,"Attempt":0,"Partition ID":42,"Launch Time":1724375765274,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":22,"Index":45,"Attempt":0,"Partition ID":45,"Launch Time":1724375765277,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":23,"Index":49,"Attempt":0,"Partition ID":49,"Launch Time":1724375765278,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":24,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375765279,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":12,"Index":9,"Attempt":0,"Partition ID":9,"Launch Time":1724375764645,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765281,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"1304","Value":"1304","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"14","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"209","Value":"209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"16842752","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"152","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"90","Value":"90","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"251188","Value":"251188","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"96","Value":"96","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"93","Value":"93","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":59,"Value":59,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":23004157,"Value":23004157,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":562,"Value":562,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":210059365,"Value":210059365,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":5878,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":17,"Value":17,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":16842752,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1304,"Value":1304,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":90,"Value":90,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":251188,"Value":251188,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":59,"Executor Deserialize CPU Time":23004157,"Executor Run Time":562,"Executor CPU Time":210059365,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":17,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1304,"Total Records Read":3,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":90,"Shuffle Write Time":251188,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":13,"Index":14,"Attempt":0,"Partition ID":14,"Launch Time":1724375764645,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765281,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"1016","Value":"2320","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"3","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"208","Value":"417","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"33685504","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"304","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"99","Value":"189","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"311779","Value":"562967","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"96","Value":"192","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"93","Value":"186","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":59,"Value":118,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":23479283,"Value":46483440,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":560,"Value":1122,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":246965148,"Value":457024513,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":11756,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":17,"Value":34,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":33685504,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1016,"Value":2320,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":99,"Value":189,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":311779,"Value":562967,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":59,"Executor Deserialize CPU Time":23479283,"Executor Run Time":560,"Executor CPU Time":246965148,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":17,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1016,"Total Records Read":1,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":99,"Shuffle Write Time":311779,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":10,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1724375764645,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765282,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"209","Value":"2529","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"20","Value":"37","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"208","Value":"625","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"50528256","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"456","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"90","Value":"279","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"278338","Value":"841305","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"96","Value":"288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"93","Value":"279","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":57,"Value":175,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":20216709,"Value":66700149,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":566,"Value":1688,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":108105232,"Value":565129745,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":17634,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":17,"Value":51,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":50528256,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":209,"Value":2529,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":90,"Value":279,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":278338,"Value":841305,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":57,"Executor Deserialize CPU Time":20216709,"Executor Run Time":566,"Executor CPU Time":108105232,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":17,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":209,"Total Records Read":1,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":90,"Shuffle Write Time":278338,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":15,"Index":22,"Attempt":0,"Partition ID":22,"Launch Time":1724375764646,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765283,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"209","Value":"2738","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"18","Value":"55","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"209","Value":"834","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"67371008","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"608","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"90","Value":"369","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"1281815","Value":"2123120","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"95","Value":"383","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"93","Value":"372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":55,"Value":230,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":21371659,"Value":88071808,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":566,"Value":2254,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":161619703,"Value":726749448,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":23512,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":17,"Value":68,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":67371008,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":209,"Value":2738,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":90,"Value":369,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":1281815,"Value":2123120,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":55,"Executor Deserialize CPU Time":21371659,"Executor Run Time":566,"Executor CPU Time":161619703,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":17,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":209,"Total Records Read":1,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":90,"Shuffle Write Time":1281815,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":16,"Index":25,"Attempt":0,"Partition ID":25,"Launch Time":1724375764646,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765287,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"1079","Value":"3817","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"2","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"11","Value":"66","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"209","Value":"1043","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"84213760","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"760","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"90","Value":"459","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"619909","Value":"2743029","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"96","Value":"479","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"93","Value":"465","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":54,"Value":284,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":23039192,"Value":111111000,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":567,"Value":2821,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":104258070,"Value":831007518,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":29390,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":17,"Value":85,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":84213760,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1079,"Value":3817,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":90,"Value":459,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":619909,"Value":2743029,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":54,"Executor Deserialize CPU Time":23039192,"Executor Run Time":567,"Executor CPU Time":104258070,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":17,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1079,"Total Records Read":2,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":90,"Shuffle Write Time":619909,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":11,"Index":6,"Attempt":0,"Partition ID":6,"Launch Time":1724375764645,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765287,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"1","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"272","Value":"4089","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"2","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"15","Value":"81","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"209","Value":"1252","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"101056512","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"2","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"912","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"90","Value":"549","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"183679","Value":"2926708","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"96","Value":"575","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"92","Value":"557","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":58,"Value":342,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":20676707,"Value":131787707,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":565,"Value":3386,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":115868518,"Value":946876036,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":35268,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":17,"Value":102,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":101056512,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":272,"Value":4089,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":90,"Value":549,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":183679,"Value":2926708,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":58,"Executor Deserialize CPU Time":20676707,"Executor Run Time":565,"Executor CPU Time":115868518,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":17,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":272,"Total Records Read":2,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":90,"Shuffle Write Time":183679,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":9,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1724375764643,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765287,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"2","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"1226","Value":"5315","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"2","Value":"12","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"15","Value":"96","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"209","Value":"1461","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"1","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"117899264","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"1","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"1064","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"90","Value":"639","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"178040","Value":"3104748","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"96","Value":"671","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"93","Value":"650","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":56,"Value":398,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":25281097,"Value":157068804,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":565,"Value":3951,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":125954859,"Value":1072830895,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":41146,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":17,"Value":119,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":117899264,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1226,"Value":5315,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":90,"Value":639,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":178040,"Value":3104748,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":56,"Executor Deserialize CPU Time":25281097,"Executor Run Time":565,"Executor CPU Time":125954859,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":17,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1226,"Total Records Read":2,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":90,"Shuffle Write Time":178040,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":14,"Index":21,"Attempt":0,"Partition ID":21,"Launch Time":1724375764646,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765287,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"2","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"1320","Value":"6635","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"3","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"10","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"209","Value":"1670","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"1","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"134742016","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"2","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"1216","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"90","Value":"729","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"1017335","Value":"4122083","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"96","Value":"767","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"93","Value":"743","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":54,"Value":452,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":21646135,"Value":178714939,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":568,"Value":4519,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":101498862,"Value":1174329757,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":47024,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":17,"Value":136,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":134742016,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1320,"Value":6635,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":3,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":90,"Value":729,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":1017335,"Value":4122083,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":54,"Executor Deserialize CPU Time":21646135,"Executor Run Time":568,"Executor CPU Time":101498862,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":17,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1320,"Total Records Read":3,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":90,"Shuffle Write Time":1017335,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_30","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":203,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_45","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":203,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_38","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":1008,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_49","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":263,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_26","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":202,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":25,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1724375765397,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":23,"Index":49,"Attempt":0,"Partition ID":49,"Launch Time":1724375765278,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765398,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"3","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"1419","Value":"8054","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"3","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"53","Value":"1723","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"151584768","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"2","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"1368","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"90","Value":"819","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"412367","Value":"4534450","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"17","Value":"784","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"17","Value":"760","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":32,"Value":484,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14732999,"Value":193447938,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":81,"Value":4600,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":56091237,"Value":1230420994,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":52902,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":11,"Value":147,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":151584768,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":3,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1419,"Value":8054,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":3,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":90,"Value":819,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":412367,"Value":4534450,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":32,"Executor Deserialize CPU Time":14732999,"Executor Run Time":81,"Executor CPU Time":56091237,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":11,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":3,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1419,"Total Records Read":3,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":90,"Shuffle Write Time":412367,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":26,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1724375765400,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_41","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":202,"Disk Size":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":22,"Index":45,"Attempt":0,"Partition ID":45,"Launch Time":1724375765277,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765401,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"1","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"209","Value":"8263","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"1","Value":"19","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"53","Value":"1776","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"168427520","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"1","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"1520","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"90","Value":"909","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"429414","Value":"4963864","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"19","Value":"803","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"19","Value":"779","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":20,"Value":504,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14359527,"Value":207807465,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":89,"Value":4689,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":60335954,"Value":1290756948,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":58780,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":11,"Value":158,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":168427520,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":209,"Value":8263,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1,"Value":19,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":90,"Value":909,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":429414,"Value":4963864,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":20,"Executor Deserialize CPU Time":14359527,"Executor Run Time":89,"Executor CPU Time":60335954,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":11,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":209,"Total Records Read":1,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":90,"Shuffle Write Time":429414,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":27,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1724375765409,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":28,"Index":7,"Attempt":0,"Partition ID":7,"Launch Time":1724375765413,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":19,"Index":38,"Attempt":0,"Partition ID":38,"Launch Time":1724375765273,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765414,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"1","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"1003","Value":"9266","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"1","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"35","Value":"1811","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"185270272","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"1","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"1672","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"99","Value":"1008","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"383507","Value":"5347371","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"28","Value":"831","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"28","Value":"807","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":39,"Value":543,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14651101,"Value":222458566,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":96,"Value":4785,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":55761479,"Value":1346518427,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":64658,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":11,"Value":169,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":185270272,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1003,"Value":9266,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":99,"Value":1008,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":383507,"Value":5347371,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":39,"Executor Deserialize CPU Time":14651101,"Executor Run Time":96,"Executor CPU Time":55761479,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":11,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1003,"Total Records Read":1,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":99,"Shuffle Write Time":383507,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":18,"Index":30,"Attempt":0,"Partition ID":30,"Launch Time":1724375765272,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765415,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"2","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"1223","Value":"10489","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"2","Value":"22","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"48","Value":"1859","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"202113024","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"1","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"1824","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"90","Value":"1098","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"12","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"374621","Value":"5721992","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"12","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"29","Value":"860","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"29","Value":"836","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":32,"Value":575,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":15842322,"Value":238300888,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":90,"Value":4875,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":58448269,"Value":1404966696,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":70536,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":11,"Value":180,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":202113024,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1223,"Value":10489,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":90,"Value":1098,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":374621,"Value":5721992,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":32,"Executor Deserialize CPU Time":15842322,"Executor Run Time":90,"Executor CPU Time":58448269,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":11,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1223,"Total Records Read":2,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":90,"Shuffle Write Time":374621,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":29,"Index":8,"Attempt":0,"Partition ID":8,"Launch Time":1724375765421,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":17,"Index":26,"Attempt":0,"Partition ID":26,"Launch Time":1724375765271,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765423,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"1","Value":"19","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"207","Value":"10696","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"1","Value":"23","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"51","Value":"1910","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"218955776","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"1","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"1976","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"90","Value":"1188","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"415567","Value":"6137559","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"23","Value":"883","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"23","Value":"859","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":47,"Value":622,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":15883625,"Value":254184513,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":98,"Value":4973,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":56882629,"Value":1461849325,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":76414,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":11,"Value":191,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":218955776,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":19,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":207,"Value":10696,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":90,"Value":1188,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":415567,"Value":6137559,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":47,"Executor Deserialize CPU Time":15883625,"Executor Run Time":98,"Executor CPU Time":56882629,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":11,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":207,"Total Records Read":1,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":90,"Shuffle Write Time":415567,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":30,"Index":10,"Attempt":0,"Partition ID":10,"Launch Time":1724375765437,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":24,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375765279,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765442,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"80","Value":"1990","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"219021312","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"2128","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"1273","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"364141","Value":"6501700","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"31","Value":"914","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"29","Value":"888","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":28,"Value":650,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14399159,"Value":268583672,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":125,"Value":5098,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":57825502,"Value":1519674827,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":82292,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":11,"Value":202,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":219021312,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":19,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":10696,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":1273,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":364141,"Value":6501700,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":28,"Executor Deserialize CPU Time":14399159,"Executor Run Time":125,"Executor CPU Time":57825502,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":11,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":364141,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":31,"Index":11,"Attempt":0,"Partition ID":11,"Launch Time":1724375765464,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":20,"Index":41,"Attempt":0,"Partition ID":41,"Launch Time":1724375765273,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765467,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"1","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"207","Value":"10903","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"1","Value":"24","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"63","Value":"2053","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"235864064","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"1","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"2280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"90","Value":"1363","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"473208","Value":"6974908","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"43","Value":"957","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"43","Value":"931","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":41,"Value":691,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14436816,"Value":283020488,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":144,"Value":5242,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":55850300,"Value":1575525127,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":88170,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":11,"Value":213,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":235864064,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":207,"Value":10903,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":90,"Value":1363,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":473208,"Value":6974908,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":41,"Executor Deserialize CPU Time":14436816,"Executor Run Time":144,"Executor CPU Time":55850300,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":11,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":207,"Total Records Read":1,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":90,"Shuffle Write Time":473208,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_1","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":25,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1724375765397,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765500,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"32","Value":"2085","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"235929600","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"2432","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"1448","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"347593","Value":"7322501","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"21","Value":"978","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"19","Value":"950","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":36,"Value":727,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":13384957,"Value":296405445,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":62,"Value":5304,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":57345960,"Value":1632871087,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5835,"Value":94005,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":235929600,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":10903,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":1448,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":347593,"Value":7322501,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":36,"Executor Deserialize CPU Time":13384957,"Executor Run Time":62,"Executor CPU Time":57345960,"Peak Execution Memory":65536,"Result Size":5835,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":347593,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_8","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":32,"Index":12,"Attempt":0,"Partition ID":12,"Launch Time":1724375765502,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_2","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_7","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_5","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_10","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_42","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":701,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":33,"Index":13,"Attempt":0,"Partition ID":13,"Launch Time":1724375765558,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_11","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":29,"Index":8,"Attempt":0,"Partition ID":8,"Launch Time":1724375765421,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765562,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"47","Value":"2132","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"235995136","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"2584","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"1533","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"390829","Value":"7713330","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"30","Value":"1008","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"25","Value":"975","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":26,"Value":753,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":13691474,"Value":310096919,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":108,"Value":5412,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":58007340,"Value":1690878427,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":99883,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":228,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":235995136,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":10903,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":1533,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":17,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":390829,"Value":7713330,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":26,"Executor Deserialize CPU Time":13691474,"Executor Run Time":108,"Executor CPU Time":58007340,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":390829,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":34,"Index":15,"Attempt":0,"Partition ID":15,"Launch Time":1724375765572,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":27,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1724375765409,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765573,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"84","Value":"2216","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"236060672","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"2736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"1618","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"395251","Value":"8108581","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"30","Value":"1038","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"24","Value":"999","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":26,"Value":779,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":13159618,"Value":323256537,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":128,"Value":5540,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":54456998,"Value":1745335425,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":105761,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":243,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":236060672,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":10903,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":1618,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":395251,"Value":8108581,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":26,"Executor Deserialize CPU Time":13159618,"Executor Run Time":128,"Executor CPU Time":54456998,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":395251,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":35,"Index":16,"Attempt":0,"Partition ID":16,"Launch Time":1724375765577,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":36,"Index":17,"Attempt":0,"Partition ID":17,"Launch Time":1724375765577,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":26,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1724375765400,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765578,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"79","Value":"2295","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"236126208","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"2888","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"1703","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"19","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"406908","Value":"8515489","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"19","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"41","Value":"1079","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"39","Value":"1038","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":31,"Value":810,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12757164,"Value":336013701,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":142,"Value":5682,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":55683093,"Value":1801018518,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":111639,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":258,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":236126208,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":10903,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":1703,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":19,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":406908,"Value":8515489,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":31,"Executor Deserialize CPU Time":12757164,"Executor Run Time":142,"Executor CPU Time":55683093,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":406908,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":28,"Index":7,"Attempt":0,"Partition ID":7,"Launch Time":1724375765413,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765579,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"78","Value":"2373","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"236191744","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"3040","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"1788","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"4601932","Value":"13117421","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"35","Value":"1114","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"33","Value":"1071","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":22,"Value":832,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":13388781,"Value":349402482,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":137,"Value":5819,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":56555028,"Value":1857573546,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":117517,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":273,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":236191744,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":10903,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":1788,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":4601932,"Value":13117421,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":22,"Executor Deserialize CPU Time":13388781,"Executor Run Time":137,"Executor CPU Time":56555028,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":4601932,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":37,"Index":18,"Attempt":0,"Partition ID":18,"Launch Time":1724375765597,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":38,"Index":19,"Attempt":0,"Partition ID":19,"Launch Time":1724375765598,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":30,"Index":10,"Attempt":0,"Partition ID":10,"Launch Time":1724375765437,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765600,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"74","Value":"2447","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"236257280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"3192","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"1873","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"349551","Value":"13466972","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"37","Value":"1151","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"34","Value":"1105","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":21,"Value":853,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":11846507,"Value":361248989,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":128,"Value":5947,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":57551415,"Value":1915124961,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":123395,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":288,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":236257280,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":10903,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":1873,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":21,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":349551,"Value":13466972,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":21,"Executor Deserialize CPU Time":11846507,"Executor Run Time":128,"Executor CPU Time":57551415,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":349551,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":21,"Index":42,"Attempt":0,"Partition ID":42,"Launch Time":1724375765274,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765600,"Failed":false,"Killed":false,"Accumulables":[{"ID":215,"Name":"local blocks read","Update":"3","Value":"23","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Update":"1623","Value":"12526","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Update":"5","Value":"29","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"237","Value":"2684","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"16842752","Value":"253100032","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Update":"2","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"2456","Value":"5648","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"699","Value":"2572","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"22","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"390682","Value":"13857654","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"22","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"29","Value":"1180","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"29","Value":"1134","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":33,"Value":886,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":13245299,"Value":374494288,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":285,"Value":6232,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":148237508,"Value":2063362469,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":129273,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":26,"Value":314,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":16842752,"Value":253100032,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":3,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1623,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":699,"Value":2572,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":390682,"Value":13857654,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":33,"Executor Deserialize CPU Time":13245299,"Executor Run Time":285,"Executor CPU Time":148237508,"Peak Execution Memory":16842752,"Result Size":5878,"JVM GC Time":26,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":3,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1623,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":699,"Shuffle Write Time":390682,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":39,"Index":20,"Attempt":0,"Partition ID":20,"Launch Time":1724375765603,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":31,"Index":11,"Attempt":0,"Partition ID":11,"Launch Time":1724375765464,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765604,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"52","Value":"2736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"253165568","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"5800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"2657","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"23","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"258544","Value":"14116198","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"23","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"33","Value":"1213","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"32","Value":"1166","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":34,"Value":920,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":13435501,"Value":387929789,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":99,"Value":6331,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":54991672,"Value":2118354141,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":135151,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":329,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":253165568,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":2657,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":258544,"Value":14116198,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":34,"Executor Deserialize CPU Time":13435501,"Executor Run Time":99,"Executor CPU Time":54991672,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":258544,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_12","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_13","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_15","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_17","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":40,"Index":23,"Attempt":0,"Partition ID":23,"Launch Time":1724375765665,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":41,"Index":24,"Attempt":0,"Partition ID":24,"Launch Time":1724375765669,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":34,"Index":15,"Attempt":0,"Partition ID":15,"Launch Time":1724375765572,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765670,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"49","Value":"2785","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"253231104","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"5952","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"2742","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"24","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"404316","Value":"14520514","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"24","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"20","Value":"1233","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"18","Value":"1184","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":17,"Value":937,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":11535613,"Value":399465402,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":77,"Value":6408,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":54866594,"Value":2173220735,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5835,"Value":140986,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":253231104,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":2742,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":404316,"Value":14520514,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":17,"Executor Deserialize CPU Time":11535613,"Executor Run Time":77,"Executor CPU Time":54866594,"Peak Execution Memory":65536,"Result Size":5835,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":404316,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":32,"Index":12,"Attempt":0,"Partition ID":12,"Launch Time":1724375765502,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765673,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"66","Value":"2851","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"253296640","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"6104","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"2827","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"25","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"412627","Value":"14933141","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"25","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"32","Value":"1265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"27","Value":"1211","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":43,"Value":980,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":11413163,"Value":410878565,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":112,"Value":6520,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":56945620,"Value":2230166355,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":146864,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":344,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":253296640,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":2827,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":25,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":412627,"Value":14933141,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":43,"Executor Deserialize CPU Time":11413163,"Executor Run Time":112,"Executor CPU Time":56945620,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":412627,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_16","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":42,"Index":27,"Attempt":0,"Partition ID":27,"Launch Time":1724375765683,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":33,"Index":13,"Attempt":0,"Partition ID":13,"Launch Time":1724375765558,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765684,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"57","Value":"2908","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"253362176","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"6256","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"2912","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"26","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"353295","Value":"15286436","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"26","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"36","Value":"1301","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"30","Value":"1241","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":11,"Value":991,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":11883077,"Value":422761642,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":104,"Value":6624,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":55856649,"Value":2286023004,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5835,"Value":152699,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":253362176,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":2912,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":26,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":353295,"Value":15286436,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":11,"Executor Deserialize CPU Time":11883077,"Executor Run Time":104,"Executor CPU Time":55856649,"Peak Execution Memory":65536,"Result Size":5835,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":353295,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":43,"Index":28,"Attempt":0,"Partition ID":28,"Launch Time":1724375765686,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_20","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":36,"Index":17,"Attempt":0,"Partition ID":17,"Launch Time":1724375765577,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765687,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"45","Value":"2953","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"253427712","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"6408","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"2997","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"27","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"367068","Value":"15653504","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"27","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"21","Value":"1322","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"19","Value":"1260","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":21,"Value":1012,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12308983,"Value":435070625,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":82,"Value":6706,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":54332157,"Value":2340355161,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5835,"Value":158534,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":253427712,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":2997,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":27,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":367068,"Value":15653504,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":21,"Executor Deserialize CPU Time":12308983,"Executor Run Time":82,"Executor CPU Time":54332157,"Peak Execution Memory":65536,"Result Size":5835,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":367068,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_19","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_18","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":35,"Index":16,"Attempt":0,"Partition ID":16,"Launch Time":1724375765577,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765738,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"64","Value":"3017","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"253493248","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"6560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"3082","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"28","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"409137","Value":"16062641","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"28","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"57","Value":"1379","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"31","Value":"1291","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":25,"Value":1037,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12740533,"Value":447811158,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":131,"Value":6837,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":56152957,"Value":2396508118,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":164412,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":19,"Value":363,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":253493248,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":3082,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":28,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":409137,"Value":16062641,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":25,"Executor Deserialize CPU Time":12740533,"Executor Run Time":131,"Executor CPU Time":56152957,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":19,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":409137,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":44,"Index":29,"Attempt":0,"Partition ID":29,"Launch Time":1724375765739,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":45,"Index":31,"Attempt":0,"Partition ID":31,"Launch Time":1724375765751,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":39,"Index":20,"Attempt":0,"Partition ID":20,"Launch Time":1724375765603,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765752,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"55","Value":"3072","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"253558784","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"6712","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"3167","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"29","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"421273","Value":"16483914","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"29","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"54","Value":"1433","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"52","Value":"1343","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":24,"Value":1061,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12768788,"Value":460579946,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":120,"Value":6957,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":53524797,"Value":2450032915,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":170290,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":19,"Value":382,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":253558784,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":3167,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":421273,"Value":16483914,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":24,"Executor Deserialize CPU Time":12768788,"Executor Run Time":120,"Executor CPU Time":53524797,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":19,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":421273,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_23","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":46,"Index":32,"Attempt":0,"Partition ID":32,"Launch Time":1724375765763,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_24","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":37,"Index":18,"Attempt":0,"Partition ID":18,"Launch Time":1724375765597,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765764,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"63","Value":"3135","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"253624320","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"6864","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"3252","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"30","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"392876","Value":"16876790","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"30","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"50","Value":"1483","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"45","Value":"1388","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":23,"Value":1084,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12875397,"Value":473455343,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":137,"Value":7094,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":53873819,"Value":2503906734,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":176168,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":19,"Value":401,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":253624320,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":3252,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":30,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":392876,"Value":16876790,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":23,"Executor Deserialize CPU Time":12875397,"Executor Run Time":137,"Executor CPU Time":53873819,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":19,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":392876,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":47,"Index":33,"Attempt":0,"Partition ID":33,"Launch Time":1724375765771,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":38,"Index":19,"Attempt":0,"Partition ID":19,"Launch Time":1724375765598,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765772,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"69","Value":"3204","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"253689856","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"7016","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"3337","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"31","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"368423","Value":"17245213","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"31","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"60","Value":"1543","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"53","Value":"1441","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":25,"Value":1109,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12733705,"Value":486189048,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":139,"Value":7233,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":55550510,"Value":2559457244,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":182046,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":19,"Value":420,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":253689856,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":3337,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":31,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":368423,"Value":17245213,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":25,"Executor Deserialize CPU Time":12733705,"Executor Run Time":139,"Executor CPU Time":55550510,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":19,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":368423,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_28","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_27","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":48,"Index":34,"Attempt":0,"Partition ID":34,"Launch Time":1724375765812,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_31","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":40,"Index":23,"Attempt":0,"Partition ID":23,"Launch Time":1724375765665,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765813,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"60","Value":"3264","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"253755392","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"7168","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"3422","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"1465908","Value":"18711121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"41","Value":"1584","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"36","Value":"1477","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":23,"Value":1132,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12993749,"Value":499182797,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":115,"Value":7348,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":53115139,"Value":2612572383,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":187924,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":19,"Value":439,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":253755392,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":3422,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":32,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":1465908,"Value":18711121,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":23,"Executor Deserialize CPU Time":12993749,"Executor Run Time":115,"Executor CPU Time":53115139,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":19,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":1465908,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":41,"Index":24,"Attempt":0,"Partition ID":24,"Launch Time":1724375765669,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765815,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"63","Value":"3327","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"253820928","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"7320","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"3507","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"352764","Value":"19063885","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"30","Value":"1614","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"25","Value":"1502","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":21,"Value":1153,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12586043,"Value":511768840,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":110,"Value":7458,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":53122316,"Value":2665694699,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":193802,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":19,"Value":458,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":253820928,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":3507,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":33,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":352764,"Value":19063885,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":21,"Executor Deserialize CPU Time":12586043,"Executor Run Time":110,"Executor CPU Time":53122316,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":19,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":352764,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":49,"Index":35,"Attempt":0,"Partition ID":35,"Launch Time":1724375765815,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":50,"Index":36,"Attempt":0,"Partition ID":36,"Launch Time":1724375765827,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":51,"Index":37,"Attempt":0,"Partition ID":37,"Launch Time":1724375765828,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":42,"Index":27,"Attempt":0,"Partition ID":27,"Launch Time":1724375765683,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765828,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"48","Value":"3375","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"253886464","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"7472","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"3592","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"34","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"330630","Value":"19394515","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"34","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"29","Value":"1643","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"18","Value":"1520","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":18,"Value":1171,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12714536,"Value":524483376,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":119,"Value":7577,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":51908923,"Value":2717603622,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":199680,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":19,"Value":477,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":253886464,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":3592,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":34,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":330630,"Value":19394515,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":18,"Executor Deserialize CPU Time":12714536,"Executor Run Time":119,"Executor CPU Time":51908923,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":19,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":330630,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":43,"Index":28,"Attempt":0,"Partition ID":28,"Launch Time":1724375765686,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765828,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"34","Value":"3409","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"253952000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"7624","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"3677","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"35","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"350322","Value":"19744837","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"35","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"26","Value":"1669","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"24","Value":"1544","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":46,"Value":1217,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":11978853,"Value":536462229,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":82,"Value":7659,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":51797715,"Value":2769401337,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":205558,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":19,"Value":496,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":253952000,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":3677,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":35,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":350322,"Value":19744837,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":46,"Executor Deserialize CPU Time":11978853,"Executor Run Time":82,"Executor CPU Time":51797715,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":19,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":350322,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_29","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":52,"Index":39,"Attempt":0,"Partition ID":39,"Launch Time":1724375765839,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":45,"Index":31,"Attempt":0,"Partition ID":31,"Launch Time":1724375765751,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765840,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"32","Value":"3441","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254017536","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"7776","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"3762","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"36","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"360019","Value":"20104856","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"36","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"20","Value":"1689","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"18","Value":"1562","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":21,"Value":1238,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":11609811,"Value":548072040,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":64,"Value":7723,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":53100560,"Value":2822501897,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5835,"Value":211393,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254017536,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":3762,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":36,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":360019,"Value":20104856,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":21,"Executor Deserialize CPU Time":11609811,"Executor Run Time":64,"Executor CPU Time":53100560,"Peak Execution Memory":65536,"Result Size":5835,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":360019,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_32","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_33","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":53,"Index":40,"Attempt":0,"Partition ID":40,"Launch Time":1724375765870,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":46,"Index":32,"Attempt":0,"Partition ID":32,"Launch Time":1724375765763,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765871,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"51","Value":"3492","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254083072","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"7928","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"3847","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"37","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"387790","Value":"20492646","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"37","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"17","Value":"1706","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"14","Value":"1576","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":22,"Value":1260,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":11938018,"Value":560010058,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":80,"Value":7803,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":51902133,"Value":2874404030,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5835,"Value":217228,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254083072,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":3847,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":37,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":387790,"Value":20492646,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":22,"Executor Deserialize CPU Time":11938018,"Executor Run Time":80,"Executor CPU Time":51902133,"Peak Execution Memory":65536,"Result Size":5835,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":387790,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":54,"Index":43,"Attempt":0,"Partition ID":43,"Launch Time":1724375765878,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":44,"Index":29,"Attempt":0,"Partition ID":29,"Launch Time":1724375765739,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765882,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"61","Value":"3553","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254148608","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"8080","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"3932","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"38","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"482628","Value":"20975274","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"38","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"34","Value":"1740","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"32","Value":"1608","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":22,"Value":1282,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":11352321,"Value":571362379,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":109,"Value":7912,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":53483697,"Value":2927887727,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5835,"Value":223063,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254148608,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":3932,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":38,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":482628,"Value":20975274,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":22,"Executor Deserialize CPU Time":11352321,"Executor Run Time":109,"Executor CPU Time":53483697,"Peak Execution Memory":65536,"Result Size":5835,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":482628,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_35","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_37","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_39","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":55,"Index":44,"Attempt":0,"Partition ID":44,"Launch Time":1724375765913,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":56,"Index":46,"Attempt":0,"Partition ID":46,"Launch Time":1724375765917,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":47,"Index":33,"Attempt":0,"Partition ID":33,"Launch Time":1724375765771,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765918,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"51","Value":"3604","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254214144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"8232","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"4017","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"39","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"368914","Value":"21344188","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"39","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"34","Value":"1774","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"30","Value":"1638","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":29,"Value":1311,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12811195,"Value":584173574,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":101,"Value":8013,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":53270883,"Value":2981158610,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5835,"Value":228898,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254214144,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":4017,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":39,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":368914,"Value":21344188,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":29,"Executor Deserialize CPU Time":12811195,"Executor Run Time":101,"Executor CPU Time":53270883,"Peak Execution Memory":65536,"Result Size":5835,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":368914,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":49,"Index":35,"Attempt":0,"Partition ID":35,"Launch Time":1724375765815,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765918,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"51","Value":"3655","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254279680","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"8384","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"4102","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"448571","Value":"21792759","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"23","Value":"1797","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"21","Value":"1659","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":14,"Value":1325,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":10355245,"Value":594528819,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":84,"Value":8097,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":51703149,"Value":3032861759,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5835,"Value":234733,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254279680,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":4102,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":40,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":448571,"Value":21792759,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":14,"Executor Deserialize CPU Time":10355245,"Executor Run Time":84,"Executor CPU Time":51703149,"Peak Execution Memory":65536,"Result Size":5835,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":448571,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":51,"Index":37,"Attempt":0,"Partition ID":37,"Launch Time":1724375765828,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765921,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"38","Value":"3693","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254345216","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"8536","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"4187","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"41","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"401129","Value":"22193888","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"41","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"24","Value":"1821","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"22","Value":"1681","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":12,"Value":1337,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":10919195,"Value":605448014,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":78,"Value":8175,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":53330244,"Value":3086192003,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5835,"Value":240568,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254345216,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":4187,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":41,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":401129,"Value":22193888,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":12,"Executor Deserialize CPU Time":10919195,"Executor Run Time":78,"Executor CPU Time":53330244,"Peak Execution Memory":65536,"Result Size":5835,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":401129,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":57,"Index":47,"Attempt":0,"Partition ID":47,"Launch Time":1724375765922,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_34","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_40","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_36","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":58,"Index":48,"Attempt":0,"Partition ID":48,"Launch Time":1724375765967,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_43","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":52,"Index":39,"Attempt":0,"Partition ID":39,"Launch Time":1724375765839,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765969,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"42","Value":"3735","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254410752","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"8688","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"4272","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"42","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"1058169","Value":"23252057","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"42","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"57","Value":"1878","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"55","Value":"1736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":12,"Value":1349,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":10691801,"Value":616139815,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":111,"Value":8286,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":60348558,"Value":3146540561,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":246446,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":508,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254410752,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":4272,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":42,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":1058169,"Value":23252057,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":12,"Executor Deserialize CPU Time":10691801,"Executor Run Time":111,"Executor CPU Time":60348558,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":12,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":1058169,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":48,"Index":34,"Attempt":0,"Partition ID":34,"Launch Time":1724375765812,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765976,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"75","Value":"3810","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254476288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"8840","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"4357","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"43","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"340492","Value":"23592549","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"43","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"41","Value":"1919","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"39","Value":"1775","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":27,"Value":1376,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12268791,"Value":628408606,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":127,"Value":8413,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":63085476,"Value":3209626037,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":252324,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":520,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254476288,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":4357,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":43,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":340492,"Value":23592549,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":27,"Executor Deserialize CPU Time":12268791,"Executor Run Time":127,"Executor CPU Time":63085476,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":12,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":340492,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":53,"Index":40,"Attempt":0,"Partition ID":40,"Launch Time":1724375765870,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765985,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"36","Value":"3846","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254541824","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"8992","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"4442","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"44","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"396040","Value":"23988589","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"44","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"50","Value":"1969","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"49","Value":"1824","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":16,"Value":1392,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":11127022,"Value":639535628,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":94,"Value":8507,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":60982414,"Value":3270608451,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":258202,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":532,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254541824,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":4442,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":44,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":396040,"Value":23988589,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":16,"Executor Deserialize CPU Time":11127022,"Executor Run Time":94,"Executor CPU Time":60982414,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":12,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":396040,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":50,"Index":36,"Attempt":0,"Partition ID":36,"Launch Time":1724375765827,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375765987,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"71","Value":"3917","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254607360","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"9144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"4527","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"45","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"234780","Value":"24223369","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"45","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"50","Value":"2019","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"49","Value":"1873","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":20,"Value":1412,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":10980549,"Value":650516177,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":134,"Value":8641,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":54510465,"Value":3325118916,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5921,"Value":264123,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":544,"Internal":true,"Count Failed Values":true},{"ID":346,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254607360,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":4527,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":45,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":234780,"Value":24223369,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":20,"Executor Deserialize CPU Time":10980549,"Executor Run Time":134,"Executor CPU Time":54510465,"Peak Execution Memory":65536,"Result Size":5921,"JVM GC Time":12,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":234780,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_47","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_44","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":54,"Index":43,"Attempt":0,"Partition ID":43,"Launch Time":1724375765878,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375766001,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"66","Value":"3983","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254672896","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"9296","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"4612","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"46","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"346560","Value":"24569929","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"46","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"24","Value":"2043","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"22","Value":"1895","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":13,"Value":1425,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":11125150,"Value":661641327,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":103,"Value":8744,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":60498825,"Value":3385617741,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":270001,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":556,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254672896,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":4612,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":46,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":346560,"Value":24569929,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":13,"Executor Deserialize CPU Time":11125150,"Executor Run Time":103,"Executor CPU Time":60498825,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":12,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":346560,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_46","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":57,"Index":47,"Attempt":0,"Partition ID":47,"Launch Time":1724375765922,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375766014,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"29","Value":"4012","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254738432","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"9448","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"4697","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"47","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"372119","Value":"24942048","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"47","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"17","Value":"2060","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"15","Value":"1910","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":36,"Value":1461,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":23378752,"Value":685020079,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":52,"Value":8796,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":47516529,"Value":3433134270,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":275879,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":568,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254738432,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":4697,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":47,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":372119,"Value":24942048,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":36,"Executor Deserialize CPU Time":23378752,"Executor Run Time":52,"Executor CPU Time":47516529,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":12,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":372119,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"rdd_30_48","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":21,"Disk Size":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":55,"Index":44,"Attempt":0,"Partition ID":44,"Launch Time":1724375765913,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375766018,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"29","Value":"4041","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254803968","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"9600","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"4782","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"48","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"398052","Value":"25340100","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"48","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"16","Value":"2076","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"14","Value":"1924","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":46,"Value":1507,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":17935036,"Value":702955115,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":55,"Value":8851,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":47545380,"Value":3480679650,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":281757,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":580,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254803968,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":4782,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":48,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":398052,"Value":25340100,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":46,"Executor Deserialize CPU Time":17935036,"Executor Run Time":55,"Executor CPU Time":47545380,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":12,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":398052,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":56,"Index":46,"Attempt":0,"Partition ID":46,"Launch Time":1724375765917,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375766033,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"40","Value":"4081","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254869504","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"9752","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"4867","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"49","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"385458","Value":"25725558","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"49","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"16","Value":"2092","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"14","Value":"1938","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":45,"Value":1552,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":13631540,"Value":716586655,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":65,"Value":8916,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":48942601,"Value":3529622251,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5878,"Value":287635,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":592,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254869504,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":4867,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":49,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":385458,"Value":25725558,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":45,"Executor Deserialize CPU Time":13631540,"Executor Run Time":65,"Executor CPU Time":48942601,"Peak Execution Memory":65536,"Result Size":5878,"JVM GC Time":12,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":385458,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":58,"Index":48,"Attempt":0,"Partition ID":48,"Launch Time":1724375765967,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375766035,"Failed":false,"Killed":false,"Accumulables":[{"ID":273,"Name":"duration","Update":"0","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Update":"29","Value":"4110","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Update":"0","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Update":"65536","Value":"254935040","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Update":"152","Value":"9904","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Update":"85","Value":"4952","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Update":"1","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Update":"267083","Value":"25992641","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"1","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Update":"15","Value":"2107","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Update":"14","Value":"1952","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Update":13,"Value":1565,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Update":10240116,"Value":726826771,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Update":51,"Value":8967,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Update":48708715,"Value":3578330966,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Update":5835,"Value":293470,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":254935040,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":85,"Value":4952,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":50,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Update":267083,"Value":25992641,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":13,"Executor Deserialize CPU Time":10240116,"Executor Run Time":51,"Executor CPU Time":48708715,"Peak Execution Memory":65536,"Result Size":5835,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":85,"Shuffle Write Time":267083,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":50,"RDD Info":[{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"68\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"MapPartitions\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"69\",\"name\":\"ObjectHashAggregate\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"60\",\"name\":\"DeserializeToObject\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"66\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log","Scope":"{\"id\":\"67\",\"name\":\"map\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"SQLExecutionRDD","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"56\",\"name\":\"WholeStageCodegen (4)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"61\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[5],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375764585,"Completion Time":1724375766036,"Accumulables":[{"ID":215,"Name":"local blocks read","Value":"23","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"local bytes read","Value":"12526","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":219,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"records read","Value":"29","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"duration","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"duration","Value":"4110","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"sort time","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"peak memory","Value":"254935040","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"number of output rows","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"data size","Value":"9904","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":332,"Name":"shuffle bytes written","Value":"4952","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":333,"Name":"shuffle records written","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"shuffle write time","Value":"25992641","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"time in aggregation build","Value":"2107","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":339,"Name":"duration","Value":"1952","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":340,"Name":"internal.metrics.executorDeserializeTime","Value":1565,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.executorDeserializeCpuTime","Value":726826771,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.executorRunTime","Value":8967,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.executorCpuTime","Value":3578330966,"Internal":true,"Count Failed Values":true},{"ID":344,"Name":"internal.metrics.resultSize","Value":293470,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.jvmGCTime","Value":592,"Internal":true,"Count Failed Values":true},{"ID":346,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":349,"Name":"internal.metrics.peakExecutionMemory","Value":254935040,"Internal":true,"Count Failed Values":true},{"ID":351,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":23,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":12526,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.recordsRead","Value":29,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":4952,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":50,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.write.writeTime","Value":25992641,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":5,"Completion Time":1724375766037,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":4,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Final Plan ==\n   ObjectHashAggregate (6)\n   +- ShuffleQueryStage (5), Statistics(sizeInBytes=9.7 KiB, rowCount=50)\n      +- Exchange (4)\n         +- ObjectHashAggregate (3)\n            +- * Project (2)\n               +- * Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log (1)\n+- == Initial Plan ==\n   ObjectHashAggregate (9)\n   +- Exchange (8)\n      +- ObjectHashAggregate (7)\n         +- Project (2)\n            +- Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log (1)\n\n\n(1) Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log [codegen id : 1]\nOutput [10]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324]\nArguments: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324], Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log MapPartitionsRDD[30] at save at NativeMethodAccessorImpl.java:0, ExistingRDD, UnknownPartitioning(0)\n\n(2) Project [codegen id : 1]\nOutput [6]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, domainMetadata#1323]\nInput [10]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324]\n\n(3) ObjectHashAggregate\nInput [6]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, domainMetadata#1323]\nKeys: []\nFunctions [10]: [partial_collect_set(domainMetadata#1323, 0, 0), partial_collect_set(txn#1315, 0, 0), partial_count(protocol#1319), partial_sum(add#1316.size), partial_last(metaData#1318, true), partial_count(metaData#1318), partial_last(protocol#1319, true), partial_count(remove#1317), partial_count(add#1316), partial_count(txn#1315)]\nAggregate Attributes [12]: [buf#1461, buf#1462, count#1463L, sum#1464L, last#1465, valueSet#1466, count#1467L, last#1468, valueSet#1469, count#1470L, count#1471L, count#1472L]\nResults [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\n\n(4) Exchange\nInput [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=181]\n\n(5) ShuffleQueryStage\nOutput [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\nArguments: 0\n\n(6) ObjectHashAggregate\nInput [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\nKeys: []\nFunctions [10]: [collect_set(domainMetadata#1323, 0, 0), collect_set(txn#1315, 0, 0), count(protocol#1319), sum(add#1316.size), last(metaData#1318, true), count(metaData#1318), last(protocol#1319, true), count(remove#1317), count(add#1316), count(txn#1315)]\nAggregate Attributes [10]: [collect_set(domainMetadata#1323, 0, 0)#1386, collect_set(txn#1315, 0, 0)#1385, count(protocol#1319)#1384L, sum(add#1316.size)#1379L, last(metaData#1318) ignore nulls#1387, count(metaData#1318)#1383L, last(protocol#1319) ignore nulls#1388, count(remove#1317)#1382L, count(add#1316)#1381L, count(txn#1315)#1380L]\nResults [11]: [collect_set(domainMetadata#1323, 0, 0)#1386 AS domainMetadata#1392, null AS fileSizeHistogram#1393, collect_set(txn#1315, 0, 0)#1385 AS setTransactions#1394, count(protocol#1319)#1384L AS numOfProtocol#1395L, coalesce(sum(add#1316.size)#1379L, 0) AS sizeInBytes#1396L, last(metaData#1318) ignore nulls#1387 AS metadata#1397, count(metaData#1318)#1383L AS numOfMetadata#1398L, last(protocol#1319) ignore nulls#1388 AS protocol#1399, count(remove#1317)#1382L AS numOfRemoves#1400L, count(add#1316)#1381L AS numOfFiles#1401L, count(txn#1315)#1380L AS numOfSetTransactions#1402L]\n\n(7) ObjectHashAggregate\nInput [6]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, domainMetadata#1323]\nKeys: []\nFunctions [10]: [partial_collect_set(domainMetadata#1323, 0, 0), partial_collect_set(txn#1315, 0, 0), partial_count(protocol#1319), partial_sum(add#1316.size), partial_last(metaData#1318, true), partial_count(metaData#1318), partial_last(protocol#1319, true), partial_count(remove#1317), partial_count(add#1316), partial_count(txn#1315)]\nAggregate Attributes [12]: [buf#1461, buf#1462, count#1463L, sum#1464L, last#1465, valueSet#1466, count#1467L, last#1468, valueSet#1469, count#1470L, count#1471L, count#1472L]\nResults [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\n\n(8) Exchange\nInput [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=171]\n\n(9) ObjectHashAggregate\nInput [12]: [buf#1473, buf#1474, count#1475L, sum#1476L, last#1477, valueSet#1478, count#1479L, last#1480, valueSet#1481, count#1482L, count#1483L, count#1484L]\nKeys: []\nFunctions [10]: [collect_set(domainMetadata#1323, 0, 0), collect_set(txn#1315, 0, 0), count(protocol#1319), sum(add#1316.size), last(metaData#1318, true), count(metaData#1318), last(protocol#1319, true), count(remove#1317), count(add#1316), count(txn#1315)]\nAggregate Attributes [10]: [collect_set(domainMetadata#1323, 0, 0)#1386, collect_set(txn#1315, 0, 0)#1385, count(protocol#1319)#1384L, sum(add#1316.size)#1379L, last(metaData#1318) ignore nulls#1387, count(metaData#1318)#1383L, last(protocol#1319) ignore nulls#1388, count(remove#1317)#1382L, count(add#1316)#1381L, count(txn#1315)#1380L]\nResults [11]: [collect_set(domainMetadata#1323, 0, 0)#1386 AS domainMetadata#1392, null AS fileSizeHistogram#1393, collect_set(txn#1315, 0, 0)#1385 AS setTransactions#1394, count(protocol#1319)#1384L AS numOfProtocol#1395L, coalesce(sum(add#1316.size)#1379L, 0) AS sizeInBytes#1396L, last(metaData#1318) ignore nulls#1387 AS metadata#1397, count(metaData#1318)#1383L AS numOfMetadata#1398L, last(protocol#1319) ignore nulls#1388 AS protocol#1399, count(remove#1317)#1382L AS numOfRemoves#1400L, count(add#1316)#1381L AS numOfFiles#1401L, count(txn#1315)#1380L AS numOfSetTransactions#1402L]\n\n(10) AdaptiveSparkPlan\nOutput [11]: [domainMetadata#1392, fileSizeHistogram#1393, setTransactions#1394, numOfProtocol#1395L, sizeInBytes#1396L, metadata#1397, numOfMetadata#1398L, protocol#1399, numOfRemoves#1400L, numOfFiles#1401L, numOfSetTransactions#1402L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"ObjectHashAggregate","simpleString":"ObjectHashAggregate(keys=[], functions=[collect_set(domainMetadata#1323, 0, 0), collect_set(txn#1315, 0, 0), count(protocol#1319), sum(add#1316.size), last(metaData#1318, true), count(metaData#1318), last(protocol#1319, true), count(remove#1317), count(add#1316), count(txn#1315)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=181]","children":[{"nodeName":"ObjectHashAggregate","simpleString":"ObjectHashAggregate(keys=[], functions=[partial_collect_set(domainMetadata#1323, 0, 0), partial_collect_set(txn#1315, 0, 0), partial_count(protocol#1319), partial_sum(add#1316.size), partial_last(metaData#1318, true), partial_count(metaData#1318), partial_last(protocol#1319, true), partial_count(remove#1317), partial_count(add#1316), partial_count(txn#1315)])","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, domainMetadata#1323]","children":[{"nodeName":"Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log","simpleString":"Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log[txn#1315,add#1316,remove#1317,metaData#1318,protocol#1319,cdc#1320,checkpointMetadata#1321,sidecar#1322,domainMetadata#1323,commitInfo#1324]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":308,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":339,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":335,"metricType":"sum"},{"name":"time in aggregation build","accumulatorId":336,"metricType":"timing"},{"name":"spill size","accumulatorId":337,"metricType":"size"},{"name":"number of sort fallback tasks","accumulatorId":338,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":333,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":327,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":334,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":328,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":325,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":322,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":331,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":324,"metricType":"sum"},{"name":"records read","accumulatorId":321,"metricType":"sum"},{"name":"local bytes read","accumulatorId":319,"metricType":"size"},{"name":"fetch wait time","accumulatorId":320,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":317,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":323,"metricType":"sum"},{"name":"local blocks read","accumulatorId":316,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":326,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":315,"metricType":"sum"},{"name":"data size","accumulatorId":313,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":329,"metricType":"size"},{"name":"number of partitions","accumulatorId":314,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":330,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":318,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":332,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":309,"metricType":"sum"},{"name":"time in aggregation build","accumulatorId":310,"metricType":"timing"},{"name":"spill size","accumulatorId":311,"metricType":"size"},{"name":"number of sort fallback tasks","accumulatorId":312,"metricType":"sum"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":6,"Submission Time":1724375766056,"Stage Infos":[{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"76\",\"name\":\"mapPartitionsInternal\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":34,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"75\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"73\",\"name\":\"ObjectHashAggregate\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[8],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":3,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"45\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"FileScanRDD","Scope":"{\"id\":\"55\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"55\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"FileScanRDD","Scope":"{\"id\":\"51\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"51\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"UnionRDD","Scope":"{\"id\":\"46\",\"name\":\"Union\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[18,21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"47\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":50,"RDD Info":[{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"68\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"MapPartitions\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"69\",\"name\":\"ObjectHashAggregate\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"60\",\"name\":\"DeserializeToObject\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"66\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log","Scope":"{\"id\":\"67\",\"name\":\"map\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"SQLExecutionRDD","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"56\",\"name\":\"WholeStageCodegen (4)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"61\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[7],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[9,7,8],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"4","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"77\",\"name\":\"collect\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.job.description":"Delta: Compute snapshot for version: 13","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"76\",\"name\":\"mapPartitionsInternal\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":34,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"75\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"73\",\"name\":\"ObjectHashAggregate\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[8],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375766057,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"4","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"77\",\"name\":\"collect\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.job.description":"Delta: Compute snapshot for version: 13","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_12_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":130979,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":59,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375766067,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":59,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375766067,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375766106,"Failed":false,"Killed":false,"Accumulables":[{"ID":309,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":310,"Name":"time in aggregation build","Update":"27","Value":"27","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":311,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":316,"Name":"local blocks read","Update":"50","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":319,"Name":"local bytes read","Update":"4952","Value":"4952","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":320,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":321,"Name":"records read","Update":"50","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":375,"Name":"internal.metrics.executorDeserializeTime","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":376,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6002631,"Value":6002631,"Internal":true,"Count Failed Values":true},{"ID":377,"Name":"internal.metrics.executorRunTime","Update":31,"Value":31,"Internal":true,"Count Failed Values":true},{"ID":378,"Name":"internal.metrics.executorCpuTime","Update":31057176,"Value":31057176,"Internal":true,"Count Failed Values":true},{"ID":379,"Name":"internal.metrics.resultSize","Update":7628,"Value":7628,"Internal":true,"Count Failed Values":true},{"ID":386,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":387,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":50,"Value":50,"Internal":true,"Count Failed Values":true},{"ID":388,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":389,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":390,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":4952,"Value":4952,"Internal":true,"Count Failed Values":true},{"ID":391,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":392,"Name":"internal.metrics.shuffle.read.recordsRead","Update":50,"Value":50,"Internal":true,"Count Failed Values":true},{"ID":393,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":394,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":395,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":396,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":397,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":398,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":399,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":400,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":401,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":402,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":5,"Executor Deserialize CPU Time":6002631,"Executor Run Time":31,"Executor CPU Time":31057176,"Peak Execution Memory":0,"Result Size":7628,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":50,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":4952,"Total Records Read":50,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"76\",\"name\":\"mapPartitionsInternal\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":34,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"75\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"73\",\"name\":\"ObjectHashAggregate\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[8],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375766057,"Completion Time":1724375766107,"Accumulables":[{"ID":309,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":310,"Name":"time in aggregation build","Value":"27","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":311,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":316,"Name":"local blocks read","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":319,"Name":"local bytes read","Value":"4952","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":320,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":321,"Name":"records read","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":375,"Name":"internal.metrics.executorDeserializeTime","Value":5,"Internal":true,"Count Failed Values":true},{"ID":376,"Name":"internal.metrics.executorDeserializeCpuTime","Value":6002631,"Internal":true,"Count Failed Values":true},{"ID":377,"Name":"internal.metrics.executorRunTime","Value":31,"Internal":true,"Count Failed Values":true},{"ID":378,"Name":"internal.metrics.executorCpuTime","Value":31057176,"Internal":true,"Count Failed Values":true},{"ID":379,"Name":"internal.metrics.resultSize","Value":7628,"Internal":true,"Count Failed Values":true},{"ID":386,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":387,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":50,"Internal":true,"Count Failed Values":true},{"ID":388,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":389,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":390,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":4952,"Internal":true,"Count Failed Values":true},{"ID":391,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":392,"Name":"internal.metrics.shuffle.read.recordsRead","Value":50,"Internal":true,"Count Failed Values":true},{"ID":393,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":394,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":395,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":396,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":397,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":398,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":399,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":400,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":401,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":402,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":6,"Completion Time":1724375766108,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":4,"time":1724375766134,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":5,"rootExecutionId":0,"description":"save at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (16)\n+- Project (15)\n   +- Project (14)\n      +- Project (13)\n         +- Project (12)\n            +- HashAggregate (11)\n               +- HashAggregate (10)\n                  +- Project (9)\n                     +- SortMergeJoin LeftOuter (8)\n                        :- Sort (3)\n                        :  +- Exchange (2)\n                        :     +- Scan parquet  (1)\n                        +- Sort (7)\n                           +- Exchange (6)\n                              +- Filter (5)\n                                 +- Scan parquet  (4)\n\n\n(1) Scan parquet \nOutput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nBatched: true\nLocation: InMemoryFileIndex [s3a://datalake-test-thiago/01-bronze/spark/train]\nReadSchema: struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHoliday:string,SchoolHoliday:int>\n\n(2) Exchange\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=241]\n\n(3) Sort\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: [Store#0 ASC NULLS FIRST], false, 0\n\n(4) Scan parquet \nOutput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nBatched: true\nLocation: InMemoryFileIndex [s3a://datalake-test-thiago/01-bronze/spark/store]\nPushedFilters: [IsNotNull(Store)]\nReadSchema: struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceMonth:int,CompetitionOpenSinceYear:int,Promo2:int,Promo2SinceWeek:int,Promo2SinceYear:int,PromoInterval:string>\n\n(5) Filter\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nCondition : isnotnull(Store#18)\n\n(6) Exchange\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=242]\n\n(7) Sort\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: [Store#18 ASC NULLS FIRST], false, 0\n\n(8) SortMergeJoin\nLeft keys [1]: [Store#0]\nRight keys [1]: [Store#18]\nJoin type: LeftOuter\nJoin condition: None\n\n(9) Project\nOutput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nInput [19]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(10) HashAggregate\nInput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\n\n(11) HashAggregate\nInput [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [19]: [Store#0 AS store#58, DayOfWeek#1 AS day_of_week#77, Date#2 AS date#96, Sales#3 AS sales#115, Customers#4 AS customers#134, Open#5 AS open#153, Promo#6 AS promo#172, StateHoliday#7 AS state_holiday#191, SchoolHoliday#8 AS school_holiday#210, StoreType#19 AS store_type#229, Assortment#20 AS assortment#248, CASE WHEN isnan(cast(CompetitionDistance#21 as double)) THEN 200000.0 ELSE cast(CompetitionDistance#21 as double) END AS competition_distance#400, CASE WHEN isnan(cast(CompetitionOpenSinceMonth#22 as double)) THEN month(cast(Date#2 as date)) ELSE CompetitionOpenSinceMonth#22 END AS competition_open_since_month#419, CASE WHEN isnan(cast(CompetitionOpenSinceYear#23 as double)) THEN year(cast(Date#2 as date)) ELSE CompetitionOpenSinceYear#23 END AS competition_open_since_year#438, Promo2#24 AS promo2#324, CASE WHEN isnan(cast(Promo2SinceWeek#25 as double)) THEN weekofyear(cast(Date#2 as date)) ELSE Promo2SinceWeek#25 END AS promo2_since_week#457, CASE WHEN isnan(cast(Promo2SinceYear#26 as double)) THEN year(cast(Date#2 as date)) ELSE Promo2SinceYear#26 END AS promo2_since_year#476, CASE WHEN isnull(PromoInterval#27) THEN  ELSE PromoInterval#27 END AS promo_interval#515, CASE WHEN (month(cast(Date#2 as date)) = 12) THEN Dec ELSE CASE WHEN (month(cast(Date#2 as date)) = 11) THEN Nov ELSE CASE WHEN (month(cast(Date#2 as date)) = 10) THEN Out ELSE CASE WHEN (month(cast(Date#2 as date)) = 9) THEN Sep ELSE CASE WHEN (month(cast(Date#2 as date)) = 8) THEN Aug ELSE CASE WHEN (month(cast(Date#2 as date)) = 7) THEN Jul ELSE CASE WHEN (month(cast(Date#2 as date)) = 6) THEN Jun ELSE CASE WHEN (month(cast(Date#2 as date)) = 5) THEN May ELSE CASE WHEN (month(cast(Date#2 as date)) = 4) THEN Apr ELSE CASE WHEN (month(cast(Date#2 as date)) = 3) THEN Mar ELSE CASE WHEN (month(cast(Date#2 as date)) = 2) THEN Fev ELSE CASE WHEN (month(cast(Date#2 as date)) = 1) THEN Jan ELSE CASE WHEN isnotnull(Date#2) THEN cast(cast(cast(Date#2 as date) as int) as string) END END END END END END END END END END END END END AS month_map#495]\n\n(12) Project\nOutput [20]: [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]\nInput [19]: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495]\n\n(13) Project\nOutput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]\nInput [20]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(14) Project\nOutput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]\nInput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781]\n\n(15) Project\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]\nInput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836]\n\n(16) AdaptiveSparkPlan\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#925, school_holiday#210, store_type#229, assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, promo_time_week#865]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0], functions=[])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0], functions=[])","children":[{"nodeName":"Project","simpleString":"Project [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]","children":[{"nodeName":"SortMergeJoin","simpleString":"SortMergeJoin [Store#0], [Store#18], LeftOuter","children":[{"nodeName":"Sort","simpleString":"Sort [Store#0 ASC NULLS FIRST], false, 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=241]","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [Store#0,DayOfWeek#1,Date#2,Sales#3,Customers#4,Open#5,Promo#6,StateHoliday#7,SchoolHoliday#8] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/train], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHolida...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/train]","ReadSchema":"struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHoliday:string,SchoolHoliday:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":451,"metricType":"sum"},{"name":"scan time","accumulatorId":450,"metricType":"timing"},{"name":"metadata time","accumulatorId":452,"metricType":"timing"},{"name":"size of files read","accumulatorId":453,"metricType":"size"},{"name":"number of output rows","accumulatorId":449,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":447,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":441,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":448,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":442,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":439,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":436,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":445,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":438,"metricType":"sum"},{"name":"records read","accumulatorId":435,"metricType":"sum"},{"name":"local bytes read","accumulatorId":433,"metricType":"size"},{"name":"fetch wait time","accumulatorId":434,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":431,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":437,"metricType":"sum"},{"name":"local blocks read","accumulatorId":430,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":440,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":429,"metricType":"sum"},{"name":"data size","accumulatorId":427,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":443,"metricType":"size"},{"name":"number of partitions","accumulatorId":428,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":444,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":432,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":446,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":424,"metricType":"timing"},{"name":"peak memory","accumulatorId":425,"metricType":"size"},{"name":"spill size","accumulatorId":426,"metricType":"size"}]},{"nodeName":"Sort","simpleString":"Sort [Store#18 ASC NULLS FIRST], false, 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=242]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(Store#18)","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [Store#18,StoreType#19,Assortment#20,CompetitionDistance#21,CompetitionOpenSinceMonth#22,CompetitionOpenSinceYear#23,Promo2#24,Promo2SinceWeek#25,Promo2SinceYear#26,PromoInterval#27] Batched: true, DataFilters: [isnotnull(Store#18)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/store], PartitionFilters: [], PushedFilters: [IsNotNull(Store)], ReadSchema: struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceM...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/store]","ReadSchema":"struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceMonth:int,CompetitionOpenSinceYear:int,Promo2:int,Promo2SinceWeek:int,Promo2SinceYear:int,PromoInterval:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(Store)]","DataFilters":"[isnotnull(Store#18)]"},"metrics":[{"name":"number of files read","accumulatorId":482,"metricType":"sum"},{"name":"scan time","accumulatorId":481,"metricType":"timing"},{"name":"metadata time","accumulatorId":483,"metricType":"timing"},{"name":"size of files read","accumulatorId":484,"metricType":"size"},{"name":"number of output rows","accumulatorId":480,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":479,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":477,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":471,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":478,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":472,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":469,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":466,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":475,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":468,"metricType":"sum"},{"name":"records read","accumulatorId":465,"metricType":"sum"},{"name":"local bytes read","accumulatorId":463,"metricType":"size"},{"name":"fetch wait time","accumulatorId":464,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":461,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":467,"metricType":"sum"},{"name":"local blocks read","accumulatorId":460,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":470,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":459,"metricType":"sum"},{"name":"data size","accumulatorId":457,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":473,"metricType":"size"},{"name":"number of partitions","accumulatorId":458,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":474,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":462,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":476,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":454,"metricType":"timing"},{"name":"peak memory","accumulatorId":455,"metricType":"size"},{"name":"spill size","accumulatorId":456,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":422,"metricType":"sum"},{"name":"spill size","accumulatorId":423,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":418,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":419,"metricType":"timing"},{"name":"peak memory","accumulatorId":417,"metricType":"size"},{"name":"number of output rows","accumulatorId":416,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":421,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":420,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":412,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":413,"metricType":"timing"},{"name":"peak memory","accumulatorId":411,"metricType":"size"},{"name":"number of output rows","accumulatorId":410,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":415,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":414,"metricType":"average"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]},"time":1724375766399,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":5,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (33)\n+- == Current Plan ==\n   Project (19)\n   +- Project (18)\n      +- Project (17)\n         +- Project (16)\n            +- HashAggregate (15)\n               +- HashAggregate (14)\n                  +- Project (13)\n                     +- SortMergeJoin LeftOuter (12)\n                        :- Sort (5)\n                        :  +- ShuffleQueryStage (4)\n                        :     +- Exchange (3)\n                        :        +- * ColumnarToRow (2)\n                        :           +- Scan parquet  (1)\n                        +- Sort (11)\n                           +- ShuffleQueryStage (10)\n                              +- Exchange (9)\n                                 +- * Filter (8)\n                                    +- * ColumnarToRow (7)\n                                       +- Scan parquet  (6)\n+- == Initial Plan ==\n   Project (32)\n   +- Project (31)\n      +- Project (30)\n         +- Project (29)\n            +- HashAggregate (28)\n               +- HashAggregate (27)\n                  +- Project (26)\n                     +- SortMergeJoin LeftOuter (25)\n                        :- Sort (21)\n                        :  +- Exchange (20)\n                        :     +- Scan parquet  (1)\n                        +- Sort (24)\n                           +- Exchange (23)\n                              +- Filter (22)\n                                 +- Scan parquet  (6)\n\n\n(1) Scan parquet \nOutput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nBatched: true\nLocation: InMemoryFileIndex [s3a://datalake-test-thiago/01-bronze/spark/train]\nReadSchema: struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHoliday:string,SchoolHoliday:int>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\n\n(3) Exchange\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=262]\n\n(4) ShuffleQueryStage\nOutput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: 0\n\n(5) Sort\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: [Store#0 ASC NULLS FIRST], false, 0\n\n(6) Scan parquet \nOutput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nBatched: true\nLocation: InMemoryFileIndex [s3a://datalake-test-thiago/01-bronze/spark/store]\nPushedFilters: [IsNotNull(Store)]\nReadSchema: struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceMonth:int,CompetitionOpenSinceYear:int,Promo2:int,Promo2SinceWeek:int,Promo2SinceYear:int,PromoInterval:string>\n\n(7) ColumnarToRow [codegen id : 2]\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(8) Filter [codegen id : 2]\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nCondition : isnotnull(Store#18)\n\n(9) Exchange\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=282]\n\n(10) ShuffleQueryStage\nOutput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: 1\n\n(11) Sort\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: [Store#18 ASC NULLS FIRST], false, 0\n\n(12) SortMergeJoin\nLeft keys [1]: [Store#0]\nRight keys [1]: [Store#18]\nJoin type: LeftOuter\nJoin condition: None\n\n(13) Project\nOutput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nInput [19]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(14) HashAggregate\nInput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\n\n(15) HashAggregate\nInput [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [19]: [Store#0 AS store#58, DayOfWeek#1 AS day_of_week#77, Date#2 AS date#96, Sales#3 AS sales#115, Customers#4 AS customers#134, Open#5 AS open#153, Promo#6 AS promo#172, StateHoliday#7 AS state_holiday#191, SchoolHoliday#8 AS school_holiday#210, StoreType#19 AS store_type#229, Assortment#20 AS assortment#248, CASE WHEN isnan(cast(CompetitionDistance#21 as double)) THEN 200000.0 ELSE cast(CompetitionDistance#21 as double) END AS competition_distance#400, CASE WHEN isnan(cast(CompetitionOpenSinceMonth#22 as double)) THEN month(cast(Date#2 as date)) ELSE CompetitionOpenSinceMonth#22 END AS competition_open_since_month#419, CASE WHEN isnan(cast(CompetitionOpenSinceYear#23 as double)) THEN year(cast(Date#2 as date)) ELSE CompetitionOpenSinceYear#23 END AS competition_open_since_year#438, Promo2#24 AS promo2#324, CASE WHEN isnan(cast(Promo2SinceWeek#25 as double)) THEN weekofyear(cast(Date#2 as date)) ELSE Promo2SinceWeek#25 END AS promo2_since_week#457, CASE WHEN isnan(cast(Promo2SinceYear#26 as double)) THEN year(cast(Date#2 as date)) ELSE Promo2SinceYear#26 END AS promo2_since_year#476, CASE WHEN isnull(PromoInterval#27) THEN  ELSE PromoInterval#27 END AS promo_interval#515, CASE WHEN (month(cast(Date#2 as date)) = 12) THEN Dec ELSE CASE WHEN (month(cast(Date#2 as date)) = 11) THEN Nov ELSE CASE WHEN (month(cast(Date#2 as date)) = 10) THEN Out ELSE CASE WHEN (month(cast(Date#2 as date)) = 9) THEN Sep ELSE CASE WHEN (month(cast(Date#2 as date)) = 8) THEN Aug ELSE CASE WHEN (month(cast(Date#2 as date)) = 7) THEN Jul ELSE CASE WHEN (month(cast(Date#2 as date)) = 6) THEN Jun ELSE CASE WHEN (month(cast(Date#2 as date)) = 5) THEN May ELSE CASE WHEN (month(cast(Date#2 as date)) = 4) THEN Apr ELSE CASE WHEN (month(cast(Date#2 as date)) = 3) THEN Mar ELSE CASE WHEN (month(cast(Date#2 as date)) = 2) THEN Fev ELSE CASE WHEN (month(cast(Date#2 as date)) = 1) THEN Jan ELSE CASE WHEN isnotnull(Date#2) THEN cast(cast(cast(Date#2 as date) as int) as string) END END END END END END END END END END END END END AS month_map#495]\n\n(16) Project\nOutput [20]: [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]\nInput [19]: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495]\n\n(17) Project\nOutput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]\nInput [20]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(18) Project\nOutput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]\nInput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781]\n\n(19) Project\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]\nInput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836]\n\n(20) Exchange\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=241]\n\n(21) Sort\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: [Store#0 ASC NULLS FIRST], false, 0\n\n(22) Filter\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nCondition : isnotnull(Store#18)\n\n(23) Exchange\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=242]\n\n(24) Sort\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: [Store#18 ASC NULLS FIRST], false, 0\n\n(25) SortMergeJoin\nLeft keys [1]: [Store#0]\nRight keys [1]: [Store#18]\nJoin type: LeftOuter\nJoin condition: None\n\n(26) Project\nOutput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nInput [19]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(27) HashAggregate\nInput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\n\n(28) HashAggregate\nInput [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [19]: [Store#0 AS store#58, DayOfWeek#1 AS day_of_week#77, Date#2 AS date#96, Sales#3 AS sales#115, Customers#4 AS customers#134, Open#5 AS open#153, Promo#6 AS promo#172, StateHoliday#7 AS state_holiday#191, SchoolHoliday#8 AS school_holiday#210, StoreType#19 AS store_type#229, Assortment#20 AS assortment#248, CASE WHEN isnan(cast(CompetitionDistance#21 as double)) THEN 200000.0 ELSE cast(CompetitionDistance#21 as double) END AS competition_distance#400, CASE WHEN isnan(cast(CompetitionOpenSinceMonth#22 as double)) THEN month(cast(Date#2 as date)) ELSE CompetitionOpenSinceMonth#22 END AS competition_open_since_month#419, CASE WHEN isnan(cast(CompetitionOpenSinceYear#23 as double)) THEN year(cast(Date#2 as date)) ELSE CompetitionOpenSinceYear#23 END AS competition_open_since_year#438, Promo2#24 AS promo2#324, CASE WHEN isnan(cast(Promo2SinceWeek#25 as double)) THEN weekofyear(cast(Date#2 as date)) ELSE Promo2SinceWeek#25 END AS promo2_since_week#457, CASE WHEN isnan(cast(Promo2SinceYear#26 as double)) THEN year(cast(Date#2 as date)) ELSE Promo2SinceYear#26 END AS promo2_since_year#476, CASE WHEN isnull(PromoInterval#27) THEN  ELSE PromoInterval#27 END AS promo_interval#515, CASE WHEN (month(cast(Date#2 as date)) = 12) THEN Dec ELSE CASE WHEN (month(cast(Date#2 as date)) = 11) THEN Nov ELSE CASE WHEN (month(cast(Date#2 as date)) = 10) THEN Out ELSE CASE WHEN (month(cast(Date#2 as date)) = 9) THEN Sep ELSE CASE WHEN (month(cast(Date#2 as date)) = 8) THEN Aug ELSE CASE WHEN (month(cast(Date#2 as date)) = 7) THEN Jul ELSE CASE WHEN (month(cast(Date#2 as date)) = 6) THEN Jun ELSE CASE WHEN (month(cast(Date#2 as date)) = 5) THEN May ELSE CASE WHEN (month(cast(Date#2 as date)) = 4) THEN Apr ELSE CASE WHEN (month(cast(Date#2 as date)) = 3) THEN Mar ELSE CASE WHEN (month(cast(Date#2 as date)) = 2) THEN Fev ELSE CASE WHEN (month(cast(Date#2 as date)) = 1) THEN Jan ELSE CASE WHEN isnotnull(Date#2) THEN cast(cast(cast(Date#2 as date) as int) as string) END END END END END END END END END END END END END AS month_map#495]\n\n(29) Project\nOutput [20]: [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]\nInput [19]: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495]\n\n(30) Project\nOutput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]\nInput [20]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(31) Project\nOutput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]\nInput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781]\n\n(32) Project\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]\nInput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836]\n\n(33) AdaptiveSparkPlan\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#925, school_holiday#210, store_type#229, assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, promo_time_week#865]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0], functions=[])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0], functions=[])","children":[{"nodeName":"Project","simpleString":"Project [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]","children":[{"nodeName":"SortMergeJoin","simpleString":"SortMergeJoin [Store#0], [Store#18], LeftOuter","children":[{"nodeName":"Sort","simpleString":"Sort [Store#0 ASC NULLS FIRST], false, 0","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=262]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [Store#0,DayOfWeek#1,Date#2,Sales#3,Customers#4,Open#5,Promo#6,StateHoliday#7,SchoolHoliday#8] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/train], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHolida...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/train]","ReadSchema":"struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHoliday:string,SchoolHoliday:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":451,"metricType":"sum"},{"name":"scan time","accumulatorId":450,"metricType":"timing"},{"name":"metadata time","accumulatorId":452,"metricType":"timing"},{"name":"size of files read","accumulatorId":453,"metricType":"size"},{"name":"number of output rows","accumulatorId":449,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of input batches","accumulatorId":532,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":530,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":528,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":522,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":529,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":523,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":520,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":517,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":526,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":519,"metricType":"sum"},{"name":"records read","accumulatorId":516,"metricType":"sum"},{"name":"local bytes read","accumulatorId":514,"metricType":"size"},{"name":"fetch wait time","accumulatorId":515,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":512,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":518,"metricType":"sum"},{"name":"local blocks read","accumulatorId":511,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":521,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":510,"metricType":"sum"},{"name":"data size","accumulatorId":508,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":524,"metricType":"size"},{"name":"number of partitions","accumulatorId":509,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":525,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":513,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":527,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":505,"metricType":"timing"},{"name":"peak memory","accumulatorId":506,"metricType":"size"},{"name":"spill size","accumulatorId":507,"metricType":"size"}]},{"nodeName":"Sort","simpleString":"Sort [Store#18 ASC NULLS FIRST], false, 0","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 1","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=282]","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(Store#18)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [Store#18,StoreType#19,Assortment#20,CompetitionDistance#21,CompetitionOpenSinceMonth#22,CompetitionOpenSinceYear#23,Promo2#24,Promo2SinceWeek#25,Promo2SinceYear#26,PromoInterval#27] Batched: true, DataFilters: [isnotnull(Store#18)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/store], PartitionFilters: [], PushedFilters: [IsNotNull(Store)], ReadSchema: struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceM...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/store]","ReadSchema":"struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceMonth:int,CompetitionOpenSinceYear:int,Promo2:int,Promo2SinceWeek:int,Promo2SinceYear:int,PromoInterval:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(Store)]","DataFilters":"[isnotnull(Store#18)]"},"metrics":[{"name":"number of files read","accumulatorId":482,"metricType":"sum"},{"name":"scan time","accumulatorId":481,"metricType":"timing"},{"name":"metadata time","accumulatorId":483,"metricType":"timing"},{"name":"size of files read","accumulatorId":484,"metricType":"size"},{"name":"number of output rows","accumulatorId":480,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":560,"metricType":"sum"},{"name":"number of input batches","accumulatorId":561,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":559,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":558,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":556,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":550,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":557,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":551,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":548,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":545,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":554,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":547,"metricType":"sum"},{"name":"records read","accumulatorId":544,"metricType":"sum"},{"name":"local bytes read","accumulatorId":542,"metricType":"size"},{"name":"fetch wait time","accumulatorId":543,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":540,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":546,"metricType":"sum"},{"name":"local blocks read","accumulatorId":539,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":549,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":538,"metricType":"sum"},{"name":"data size","accumulatorId":536,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":552,"metricType":"size"},{"name":"number of partitions","accumulatorId":537,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":553,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":541,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":555,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":533,"metricType":"timing"},{"name":"peak memory","accumulatorId":534,"metricType":"size"},{"name":"spill size","accumulatorId":535,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":503,"metricType":"sum"},{"name":"spill size","accumulatorId":504,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":499,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":500,"metricType":"timing"},{"name":"peak memory","accumulatorId":498,"metricType":"size"},{"name":"number of output rows","accumulatorId":497,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":502,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":501,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":493,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":494,"metricType":"timing"},{"name":"peak memory","accumulatorId":492,"metricType":"size"},{"name":"number of output rows","accumulatorId":491,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":496,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":495,"metricType":"average"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_13_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":38241,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[451,2],[452,2],[453,4600389]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[509,200]]}
{"Event":"SparkListenerJobStart","Job ID":7,"Submission Time":1724375766492,"Stage Infos":[{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"FileScanRDD","Scope":"{\"id\":\"103\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"100\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[37],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[10],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"5","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"99\",\"name\":\"Exchange\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"FileScanRDD","Scope":"{\"id\":\"103\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"100\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[37],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375766493,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"5","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"99\",\"name\":\"Exchange\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_14_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":8726,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":10,"Stage Attempt ID":0,"Task Info":{"Task ID":60,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375766500,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":10,"Stage Attempt ID":0,"Task Info":{"Task ID":61,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1724375766500,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_15_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":38290,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[482,1],[483,0],[484,15181]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[537,200]]}
{"Event":"SparkListenerJobStart","Job ID":8,"Submission Time":1724375766520,"Stage Infos":[{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"104\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"FileScanRDD","Scope":"{\"id\":\"109\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"105\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[11],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"5","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"104\",\"name\":\"Exchange\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"104\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"FileScanRDD","Scope":"{\"id\":\"109\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"105\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375766521,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"5","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"104\",\"name\":\"Exchange\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_16_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":8992,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":11,"Stage Attempt ID":0,"Task Info":{"Task ID":62,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375766525,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":11,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":62,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375766525,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375769580,"Failed":false,"Killed":false,"Accumulables":[{"ID":480,"Name":"number of output rows","Update":"1115","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":481,"Name":"scan time","Update":"2992","Value":"2992","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":536,"Name":"data size","Update":"125096","Value":"125096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":555,"Name":"shuffle bytes written","Update":"64867","Value":"64867","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":556,"Name":"shuffle records written","Update":"1115","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":557,"Name":"shuffle write time","Update":"14260263","Value":"14260263","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":558,"Name":"duration","Update":"3031","Value":"3031","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":559,"Name":"number of output rows","Update":"1115","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":560,"Name":"number of output rows","Update":"1115","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":561,"Name":"number of input batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":597,"Name":"internal.metrics.executorDeserializeTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":598,"Name":"internal.metrics.executorDeserializeCpuTime","Update":1860063,"Value":1860063,"Internal":true,"Count Failed Values":true},{"ID":599,"Name":"internal.metrics.executorRunTime","Update":3051,"Value":3051,"Internal":true,"Count Failed Values":true},{"ID":600,"Name":"internal.metrics.executorCpuTime","Update":108578116,"Value":108578116,"Internal":true,"Count Failed Values":true},{"ID":601,"Name":"internal.metrics.resultSize","Update":2183,"Value":2183,"Internal":true,"Count Failed Values":true},{"ID":625,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":64867,"Value":64867,"Internal":true,"Count Failed Values":true},{"ID":626,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1115,"Value":1115,"Internal":true,"Count Failed Values":true},{"ID":627,"Name":"internal.metrics.shuffle.write.writeTime","Update":14260263,"Value":14260263,"Internal":true,"Count Failed Values":true},{"ID":628,"Name":"internal.metrics.input.bytesRead","Update":22725,"Value":22725,"Internal":true,"Count Failed Values":true},{"ID":629,"Name":"internal.metrics.input.recordsRead","Update":1115,"Value":1115,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":1,"Executor Deserialize CPU Time":1860063,"Executor Run Time":3051,"Executor CPU Time":108578116,"Peak Execution Memory":0,"Result Size":2183,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":64867,"Shuffle Write Time":14260263,"Shuffle Records Written":1115},"Input Metrics":{"Bytes Read":22725,"Records Read":1115},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"104\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"FileScanRDD","Scope":"{\"id\":\"109\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"105\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375766521,"Completion Time":1724375769580,"Accumulables":[{"ID":480,"Name":"number of output rows","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":481,"Name":"scan time","Value":"2992","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":536,"Name":"data size","Value":"125096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":555,"Name":"shuffle bytes written","Value":"64867","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":556,"Name":"shuffle records written","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":557,"Name":"shuffle write time","Value":"14260263","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":558,"Name":"duration","Value":"3031","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":559,"Name":"number of output rows","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":560,"Name":"number of output rows","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":561,"Name":"number of input batches","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":597,"Name":"internal.metrics.executorDeserializeTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":598,"Name":"internal.metrics.executorDeserializeCpuTime","Value":1860063,"Internal":true,"Count Failed Values":true},{"ID":599,"Name":"internal.metrics.executorRunTime","Value":3051,"Internal":true,"Count Failed Values":true},{"ID":600,"Name":"internal.metrics.executorCpuTime","Value":108578116,"Internal":true,"Count Failed Values":true},{"ID":601,"Name":"internal.metrics.resultSize","Value":2183,"Internal":true,"Count Failed Values":true},{"ID":625,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":64867,"Internal":true,"Count Failed Values":true},{"ID":626,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":1115,"Internal":true,"Count Failed Values":true},{"ID":627,"Name":"internal.metrics.shuffle.write.writeTime","Value":14260263,"Internal":true,"Count Failed Values":true},{"ID":628,"Name":"internal.metrics.input.bytesRead","Value":22725,"Internal":true,"Count Failed Values":true},{"ID":629,"Name":"internal.metrics.input.recordsRead","Value":1115,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":8,"Completion Time":1724375769581,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_11_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":148205,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_12_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":130979,"Disk Size":0}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_16_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":8992,"Disk Size":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":10,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":61,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1724375766500,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375776518,"Failed":false,"Killed":false,"Accumulables":[{"ID":449,"Name":"number of output rows","Update":"452680","Value":"452680","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":450,"Name":"scan time","Update":"9731","Value":"9731","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":508,"Name":"data size","Update":"47078720","Value":"47078720","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":527,"Name":"shuffle bytes written","Update":"9894156","Value":"9894156","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":528,"Name":"shuffle records written","Update":"452680","Value":"452680","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":529,"Name":"shuffle write time","Update":"20896800","Value":"20896800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":530,"Name":"duration","Update":"9979","Value":"9979","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":531,"Name":"number of output rows","Update":"452680","Value":"452680","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":532,"Name":"number of input batches","Update":"111","Value":"111","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":562,"Name":"internal.metrics.executorDeserializeTime","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":563,"Name":"internal.metrics.executorDeserializeCpuTime","Update":1923343,"Value":1923343,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.executorRunTime","Update":10012,"Value":10012,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.executorCpuTime","Update":478573932,"Value":478573932,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.resultSize","Update":2170,"Value":2170,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.jvmGCTime","Update":11,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":590,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":9894156,"Value":9894156,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":452680,"Value":452680,"Internal":true,"Count Failed Values":true},{"ID":592,"Name":"internal.metrics.shuffle.write.writeTime","Update":20896800,"Value":20896800,"Internal":true,"Count Failed Values":true},{"ID":593,"Name":"internal.metrics.input.bytesRead","Update":2053530,"Value":2053530,"Internal":true,"Count Failed Values":true},{"ID":594,"Name":"internal.metrics.input.recordsRead","Update":452680,"Value":452680,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":2,"Executor Deserialize CPU Time":1923343,"Executor Run Time":10012,"Executor CPU Time":478573932,"Peak Execution Memory":0,"Result Size":2170,"JVM GC Time":11,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":9894156,"Shuffle Write Time":20896800,"Shuffle Records Written":452680},"Input Metrics":{"Bytes Read":2053530,"Records Read":452680},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":10,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":60,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375766500,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375780387,"Failed":false,"Killed":false,"Accumulables":[{"ID":449,"Name":"number of output rows","Update":"564529","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":450,"Name":"scan time","Update":"13595","Value":"23326","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":508,"Name":"data size","Update":"58711016","Value":"105789736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":527,"Name":"shuffle bytes written","Update":"12305214","Value":"22199370","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":528,"Name":"shuffle records written","Update":"564529","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":529,"Name":"shuffle write time","Update":"20548378","Value":"41445178","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":530,"Name":"duration","Update":"13852","Value":"23831","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":531,"Name":"number of output rows","Update":"564529","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":532,"Name":"number of input batches","Update":"138","Value":"249","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":562,"Name":"internal.metrics.executorDeserializeTime","Update":2,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":563,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2326329,"Value":4249672,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.executorRunTime","Update":13882,"Value":23894,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.executorCpuTime","Update":525401824,"Value":1003975756,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.resultSize","Update":2170,"Value":4340,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.jvmGCTime","Update":11,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":590,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":12305214,"Value":22199370,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":564529,"Value":1017209,"Internal":true,"Count Failed Values":true},{"ID":592,"Name":"internal.metrics.shuffle.write.writeTime","Update":20548378,"Value":41445178,"Internal":true,"Count Failed Values":true},{"ID":593,"Name":"internal.metrics.input.bytesRead","Update":2539930,"Value":4593460,"Internal":true,"Count Failed Values":true},{"ID":594,"Name":"internal.metrics.input.recordsRead","Update":564529,"Value":1017209,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":2,"Executor Deserialize CPU Time":2326329,"Executor Run Time":13882,"Executor CPU Time":525401824,"Peak Execution Memory":0,"Result Size":2170,"JVM GC Time":11,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":12305214,"Shuffle Write Time":20548378,"Shuffle Records Written":564529},"Input Metrics":{"Bytes Read":2539930,"Records Read":564529},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"FileScanRDD","Scope":"{\"id\":\"103\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"100\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[37],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375766493,"Completion Time":1724375780388,"Accumulables":[{"ID":449,"Name":"number of output rows","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":450,"Name":"scan time","Value":"23326","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":508,"Name":"data size","Value":"105789736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":527,"Name":"shuffle bytes written","Value":"22199370","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":528,"Name":"shuffle records written","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":529,"Name":"shuffle write time","Value":"41445178","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":530,"Name":"duration","Value":"23831","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":531,"Name":"number of output rows","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":532,"Name":"number of input batches","Value":"249","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":562,"Name":"internal.metrics.executorDeserializeTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":563,"Name":"internal.metrics.executorDeserializeCpuTime","Value":4249672,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.executorRunTime","Value":23894,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.executorCpuTime","Value":1003975756,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.resultSize","Value":4340,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.jvmGCTime","Value":22,"Internal":true,"Count Failed Values":true},{"ID":590,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":22199370,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":1017209,"Internal":true,"Count Failed Values":true},{"ID":592,"Name":"internal.metrics.shuffle.write.writeTime","Value":41445178,"Internal":true,"Count Failed Values":true},{"ID":593,"Name":"internal.metrics.input.bytesRead","Value":4593460,"Internal":true,"Count Failed Values":true},{"ID":594,"Name":"internal.metrics.input.recordsRead","Value":1017209,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":7,"Completion Time":1724375780388,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":5,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (35)\n+- == Final Plan ==\n   * Project (21)\n   +- * Project (20)\n      +- * Project (19)\n         +- * Project (18)\n            +- * HashAggregate (17)\n               +- * HashAggregate (16)\n                  +- * Project (15)\n                     +- * SortMergeJoin LeftOuter (14)\n                        :- * Sort (6)\n                        :  +- AQEShuffleRead (5)\n                        :     +- ShuffleQueryStage (4), Statistics(sizeInBytes=100.9 MiB, rowCount=1.02E+6)\n                        :        +- Exchange (3)\n                        :           +- * ColumnarToRow (2)\n                        :              +- Scan parquet  (1)\n                        +- * Sort (13)\n                           +- AQEShuffleRead (12)\n                              +- ShuffleQueryStage (11), Statistics(sizeInBytes=122.2 KiB, rowCount=1.12E+3)\n                                 +- Exchange (10)\n                                    +- * Filter (9)\n                                       +- * ColumnarToRow (8)\n                                          +- Scan parquet  (7)\n+- == Initial Plan ==\n   Project (34)\n   +- Project (33)\n      +- Project (32)\n         +- Project (31)\n            +- HashAggregate (30)\n               +- HashAggregate (29)\n                  +- Project (28)\n                     +- SortMergeJoin LeftOuter (27)\n                        :- Sort (23)\n                        :  +- Exchange (22)\n                        :     +- Scan parquet  (1)\n                        +- Sort (26)\n                           +- Exchange (25)\n                              +- Filter (24)\n                                 +- Scan parquet  (7)\n\n\n(1) Scan parquet \nOutput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nBatched: true\nLocation: InMemoryFileIndex [s3a://datalake-test-thiago/01-bronze/spark/train]\nReadSchema: struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHoliday:string,SchoolHoliday:int>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\n\n(3) Exchange\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=262]\n\n(4) ShuffleQueryStage\nOutput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: 0\n\n(5) AQEShuffleRead\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: coalesced\n\n(6) Sort [codegen id : 3]\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: [Store#0 ASC NULLS FIRST], false, 0\n\n(7) Scan parquet \nOutput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nBatched: true\nLocation: InMemoryFileIndex [s3a://datalake-test-thiago/01-bronze/spark/store]\nPushedFilters: [IsNotNull(Store)]\nReadSchema: struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceMonth:int,CompetitionOpenSinceYear:int,Promo2:int,Promo2SinceWeek:int,Promo2SinceYear:int,PromoInterval:string>\n\n(8) ColumnarToRow [codegen id : 2]\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(9) Filter [codegen id : 2]\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nCondition : isnotnull(Store#18)\n\n(10) Exchange\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=282]\n\n(11) ShuffleQueryStage\nOutput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: 1\n\n(12) AQEShuffleRead\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: coalesced\n\n(13) Sort [codegen id : 4]\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: [Store#18 ASC NULLS FIRST], false, 0\n\n(14) SortMergeJoin [codegen id : 5]\nLeft keys [1]: [Store#0]\nRight keys [1]: [Store#18]\nJoin type: LeftOuter\nJoin condition: None\n\n(15) Project [codegen id : 5]\nOutput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nInput [19]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(16) HashAggregate [codegen id : 5]\nInput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\n\n(17) HashAggregate [codegen id : 5]\nInput [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [19]: [Store#0 AS store#58, DayOfWeek#1 AS day_of_week#77, Date#2 AS date#96, Sales#3 AS sales#115, Customers#4 AS customers#134, Open#5 AS open#153, Promo#6 AS promo#172, StateHoliday#7 AS state_holiday#191, SchoolHoliday#8 AS school_holiday#210, StoreType#19 AS store_type#229, Assortment#20 AS assortment#248, CASE WHEN isnan(cast(CompetitionDistance#21 as double)) THEN 200000.0 ELSE cast(CompetitionDistance#21 as double) END AS competition_distance#400, CASE WHEN isnan(cast(CompetitionOpenSinceMonth#22 as double)) THEN month(cast(Date#2 as date)) ELSE CompetitionOpenSinceMonth#22 END AS competition_open_since_month#419, CASE WHEN isnan(cast(CompetitionOpenSinceYear#23 as double)) THEN year(cast(Date#2 as date)) ELSE CompetitionOpenSinceYear#23 END AS competition_open_since_year#438, Promo2#24 AS promo2#324, CASE WHEN isnan(cast(Promo2SinceWeek#25 as double)) THEN weekofyear(cast(Date#2 as date)) ELSE Promo2SinceWeek#25 END AS promo2_since_week#457, CASE WHEN isnan(cast(Promo2SinceYear#26 as double)) THEN year(cast(Date#2 as date)) ELSE Promo2SinceYear#26 END AS promo2_since_year#476, CASE WHEN isnull(PromoInterval#27) THEN  ELSE PromoInterval#27 END AS promo_interval#515, CASE WHEN (month(cast(Date#2 as date)) = 12) THEN Dec ELSE CASE WHEN (month(cast(Date#2 as date)) = 11) THEN Nov ELSE CASE WHEN (month(cast(Date#2 as date)) = 10) THEN Out ELSE CASE WHEN (month(cast(Date#2 as date)) = 9) THEN Sep ELSE CASE WHEN (month(cast(Date#2 as date)) = 8) THEN Aug ELSE CASE WHEN (month(cast(Date#2 as date)) = 7) THEN Jul ELSE CASE WHEN (month(cast(Date#2 as date)) = 6) THEN Jun ELSE CASE WHEN (month(cast(Date#2 as date)) = 5) THEN May ELSE CASE WHEN (month(cast(Date#2 as date)) = 4) THEN Apr ELSE CASE WHEN (month(cast(Date#2 as date)) = 3) THEN Mar ELSE CASE WHEN (month(cast(Date#2 as date)) = 2) THEN Fev ELSE CASE WHEN (month(cast(Date#2 as date)) = 1) THEN Jan ELSE CASE WHEN isnotnull(Date#2) THEN cast(cast(cast(Date#2 as date) as int) as string) END END END END END END END END END END END END END AS month_map#495]\n\n(18) Project [codegen id : 5]\nOutput [20]: [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]\nInput [19]: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495]\n\n(19) Project [codegen id : 5]\nOutput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]\nInput [20]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(20) Project [codegen id : 5]\nOutput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]\nInput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781]\n\n(21) Project [codegen id : 5]\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]\nInput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836]\n\n(22) Exchange\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=241]\n\n(23) Sort\nInput [9]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8]\nArguments: [Store#0 ASC NULLS FIRST], false, 0\n\n(24) Filter\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nCondition : isnotnull(Store#18)\n\n(25) Exchange\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=242]\n\n(26) Sort\nInput [10]: [Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nArguments: [Store#18 ASC NULLS FIRST], false, 0\n\n(27) SortMergeJoin\nLeft keys [1]: [Store#0]\nRight keys [1]: [Store#18]\nJoin type: LeftOuter\nJoin condition: None\n\n(28) Project\nOutput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nInput [19]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, Store#18, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\n\n(29) HashAggregate\nInput [18]: [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\n\n(30) HashAggregate\nInput [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nKeys [18]: [Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0]\nFunctions: []\nAggregate Attributes: []\nResults [19]: [Store#0 AS store#58, DayOfWeek#1 AS day_of_week#77, Date#2 AS date#96, Sales#3 AS sales#115, Customers#4 AS customers#134, Open#5 AS open#153, Promo#6 AS promo#172, StateHoliday#7 AS state_holiday#191, SchoolHoliday#8 AS school_holiday#210, StoreType#19 AS store_type#229, Assortment#20 AS assortment#248, CASE WHEN isnan(cast(CompetitionDistance#21 as double)) THEN 200000.0 ELSE cast(CompetitionDistance#21 as double) END AS competition_distance#400, CASE WHEN isnan(cast(CompetitionOpenSinceMonth#22 as double)) THEN month(cast(Date#2 as date)) ELSE CompetitionOpenSinceMonth#22 END AS competition_open_since_month#419, CASE WHEN isnan(cast(CompetitionOpenSinceYear#23 as double)) THEN year(cast(Date#2 as date)) ELSE CompetitionOpenSinceYear#23 END AS competition_open_since_year#438, Promo2#24 AS promo2#324, CASE WHEN isnan(cast(Promo2SinceWeek#25 as double)) THEN weekofyear(cast(Date#2 as date)) ELSE Promo2SinceWeek#25 END AS promo2_since_week#457, CASE WHEN isnan(cast(Promo2SinceYear#26 as double)) THEN year(cast(Date#2 as date)) ELSE Promo2SinceYear#26 END AS promo2_since_year#476, CASE WHEN isnull(PromoInterval#27) THEN  ELSE PromoInterval#27 END AS promo_interval#515, CASE WHEN (month(cast(Date#2 as date)) = 12) THEN Dec ELSE CASE WHEN (month(cast(Date#2 as date)) = 11) THEN Nov ELSE CASE WHEN (month(cast(Date#2 as date)) = 10) THEN Out ELSE CASE WHEN (month(cast(Date#2 as date)) = 9) THEN Sep ELSE CASE WHEN (month(cast(Date#2 as date)) = 8) THEN Aug ELSE CASE WHEN (month(cast(Date#2 as date)) = 7) THEN Jul ELSE CASE WHEN (month(cast(Date#2 as date)) = 6) THEN Jun ELSE CASE WHEN (month(cast(Date#2 as date)) = 5) THEN May ELSE CASE WHEN (month(cast(Date#2 as date)) = 4) THEN Apr ELSE CASE WHEN (month(cast(Date#2 as date)) = 3) THEN Mar ELSE CASE WHEN (month(cast(Date#2 as date)) = 2) THEN Fev ELSE CASE WHEN (month(cast(Date#2 as date)) = 1) THEN Jan ELSE CASE WHEN isnotnull(Date#2) THEN cast(cast(cast(Date#2 as date) as int) as string) END END END END END END END END END END END END END AS month_map#495]\n\n(31) Project\nOutput [20]: [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]\nInput [19]: [store#58, day_of_week#77, date#96, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495]\n\n(32) Project\nOutput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]\nInput [20]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535]\n\n(33) Project\nOutput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]\nInput [26]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781]\n\n(34) Project\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]\nInput [28]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836]\n\n(35) AdaptiveSparkPlan\nOutput [29]: [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#925, school_holiday#210, store_type#229, assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, promo_time_week#865]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (5)","simpleString":"WholeStageCodegen (5)","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, CASE WHEN (state_holiday#191 = a) THEN public_holiday WHEN (state_holiday#191 = b) THEN easter_holiday WHEN (state_holiday#191 = c) THEN christmas ELSE regular_day END AS state_holiday#925, school_holiday#210, store_type#229, CASE WHEN (assortment#248 = a) THEN basic WHEN (assortment#248 = b) THEN extra ELSE extended END AS assortment#895, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, competition_time_month#808, promo_since#836, cast((cast((cast(date#556 as bigint) - cast(promo_since#836 as bigint)) as double) / 7.0) as int) AS promo_time_week#865]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year#661, month#683, day#706, week_of_year#730, year_week#755, competition_since#781, cast((cast((cast(date#556 as bigint) - cast(competition_since#781 as bigint)) as double) / 30.0) as int) AS competition_time_month#808, date_add(make_date(promo2_since_year#476, 1, 1, false), (((promo2_since_week#457 - 1) * 7) - 1)) AS promo_since#836]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, is_promo#535, year(date#556) AS year#661, month(date#556) AS month#683, dayofmonth(date#556) AS day#706, weekofyear(date#556) AS week_of_year#730, date_format(cast(date#556 as timestamp), yyyy-ww, Some(UTC)) AS year_week#755, make_date(competition_open_since_year#438, competition_open_since_month#419, 1, false) AS competition_since#781]","children":[{"nodeName":"Project","simpleString":"Project [store#58, day_of_week#77, cast(gettimestamp(date#96, yyyy-MM-dd, TimestampType, Some(UTC), false) as date) AS date#556, sales#115, customers#134, open#153, promo#172, state_holiday#191, school_holiday#210, store_type#229, assortment#248, competition_distance#400, competition_open_since_month#419, competition_open_since_year#438, promo2#324, promo2_since_week#457, promo2_since_year#476, promo_interval#515, month_map#495, CASE WHEN (promo_interval#515 = ) THEN 0 ELSE CASE WHEN array_contains(split(promo_interval#515, ,, -1), month_map#495) THEN 1 ELSE 0 END END AS is_promo#535]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0], functions=[])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[Sales#3, CompetitionDistance#21, Assortment#20, StoreType#19, Promo#6, DayOfWeek#1, CompetitionOpenSinceMonth#22, SchoolHoliday#8, Customers#4, Promo2#24, Open#5, PromoInterval#27, Date#2, StateHoliday#7, CompetitionOpenSinceYear#23, Promo2SinceYear#26, Promo2SinceWeek#25, Store#0], functions=[])","children":[{"nodeName":"Project","simpleString":"Project [Store#0, DayOfWeek#1, Date#2, Sales#3, Customers#4, Open#5, Promo#6, StateHoliday#7, SchoolHoliday#8, StoreType#19, Assortment#20, CompetitionDistance#21, CompetitionOpenSinceMonth#22, CompetitionOpenSinceYear#23, Promo2#24, Promo2SinceWeek#25, Promo2SinceYear#26, PromoInterval#27]","children":[{"nodeName":"SortMergeJoin","simpleString":"SortMergeJoin [Store#0], [Store#18], LeftOuter","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"WholeStageCodegen (3)","simpleString":"WholeStageCodegen (3)","children":[{"nodeName":"Sort","simpleString":"Sort [Store#0 ASC NULLS FIRST], false, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(Store#0, 200), ENSURE_REQUIREMENTS, [plan_id=262]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [Store#0,DayOfWeek#1,Date#2,Sales#3,Customers#4,Open#5,Promo#6,StateHoliday#7,SchoolHoliday#8] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/train], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHolida...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/train]","ReadSchema":"struct<Store:int,DayOfWeek:int,Date:string,Sales:int,Customers:int,Open:int,Promo:int,StateHoliday:string,SchoolHoliday:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":451,"metricType":"sum"},{"name":"scan time","accumulatorId":450,"metricType":"timing"},{"name":"metadata time","accumulatorId":452,"metricType":"timing"},{"name":"size of files read","accumulatorId":453,"metricType":"size"},{"name":"number of output rows","accumulatorId":449,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":531,"metricType":"sum"},{"name":"number of input batches","accumulatorId":532,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":530,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":528,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":522,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":529,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":523,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":520,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":517,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":526,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":519,"metricType":"sum"},{"name":"records read","accumulatorId":516,"metricType":"sum"},{"name":"local bytes read","accumulatorId":514,"metricType":"size"},{"name":"fetch wait time","accumulatorId":515,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":512,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":518,"metricType":"sum"},{"name":"local blocks read","accumulatorId":511,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":521,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":510,"metricType":"sum"},{"name":"data size","accumulatorId":508,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":524,"metricType":"size"},{"name":"number of partitions","accumulatorId":509,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":525,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":513,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":527,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":651,"metricType":"sum"},{"name":"partition data size","accumulatorId":652,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":653,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":648,"metricType":"timing"},{"name":"peak memory","accumulatorId":649,"metricType":"size"},{"name":"spill size","accumulatorId":650,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":647,"metricType":"timing"}]}],"metadata":{},"metrics":[]},{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"WholeStageCodegen (4)","simpleString":"WholeStageCodegen (4)","children":[{"nodeName":"Sort","simpleString":"Sort [Store#18 ASC NULLS FIRST], false, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 1","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(Store#18, 200), ENSURE_REQUIREMENTS, [plan_id=282]","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(Store#18)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [Store#18,StoreType#19,Assortment#20,CompetitionDistance#21,CompetitionOpenSinceMonth#22,CompetitionOpenSinceYear#23,Promo2#24,Promo2SinceWeek#25,Promo2SinceYear#26,PromoInterval#27] Batched: true, DataFilters: [isnotnull(Store#18)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/store], PartitionFilters: [], PushedFilters: [IsNotNull(Store)], ReadSchema: struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceM...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://datalake-test-thiago/01-bronze/spark/store]","ReadSchema":"struct<Store:int,StoreType:string,Assortment:string,CompetitionDistance:int,CompetitionOpenSinceMonth:int,CompetitionOpenSinceYear:int,Promo2:int,Promo2SinceWeek:int,Promo2SinceYear:int,PromoInterval:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(Store)]","DataFilters":"[isnotnull(Store#18)]"},"metrics":[{"name":"number of files read","accumulatorId":482,"metricType":"sum"},{"name":"scan time","accumulatorId":481,"metricType":"timing"},{"name":"metadata time","accumulatorId":483,"metricType":"timing"},{"name":"size of files read","accumulatorId":484,"metricType":"size"},{"name":"number of output rows","accumulatorId":480,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":560,"metricType":"sum"},{"name":"number of input batches","accumulatorId":561,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":559,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":558,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":556,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":550,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":557,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":551,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":548,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":545,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":554,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":547,"metricType":"sum"},{"name":"records read","accumulatorId":544,"metricType":"sum"},{"name":"local bytes read","accumulatorId":542,"metricType":"size"},{"name":"fetch wait time","accumulatorId":543,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":540,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":546,"metricType":"sum"},{"name":"local blocks read","accumulatorId":539,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":549,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":538,"metricType":"sum"},{"name":"data size","accumulatorId":536,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":552,"metricType":"size"},{"name":"number of partitions","accumulatorId":537,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":553,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":541,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":555,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":658,"metricType":"sum"},{"name":"partition data size","accumulatorId":659,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":660,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":655,"metricType":"timing"},{"name":"peak memory","accumulatorId":656,"metricType":"size"},{"name":"spill size","accumulatorId":657,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":654,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":645,"metricType":"sum"},{"name":"spill size","accumulatorId":646,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":641,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":642,"metricType":"timing"},{"name":"peak memory","accumulatorId":640,"metricType":"size"},{"name":"number of output rows","accumulatorId":639,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":644,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":643,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":635,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":636,"metricType":"timing"},{"name":"peak memory","accumulatorId":634,"metricType":"size"},{"name":"number of output rows","accumulatorId":633,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":638,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":637,"metricType":"average"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":632,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[651,2],[653,2],[652,11631012],[652,11663275]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[658,2],[660,2],[659,33990],[659,33936]]}
{"Event":"SparkListenerJobStart","Job ID":9,"Submission Time":1724375780660,"Stage Infos":[{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"104\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"FileScanRDD","Scope":"{\"id\":\"109\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"105\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"99\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"FileScanRDD","Scope":"{\"id\":\"103\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"100\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[37],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"112\",\"name\":\"WholeStageCodegen (5)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":47,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"130\",\"name\":\"AQEShuffleRead\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ZippedPartitionsRDD2","Scope":"{\"id\":\"112\",\"name\":\"WholeStageCodegen (5)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[46,48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"125\",\"name\":\"AQEShuffleRead\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"127\",\"name\":\"WholeStageCodegen (4)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"122\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[12,13],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[12,13,14],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"5","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"112\",\"name\":\"WholeStageCodegen (5)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":47,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"130\",\"name\":\"AQEShuffleRead\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ZippedPartitionsRDD2","Scope":"{\"id\":\"112\",\"name\":\"WholeStageCodegen (5)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[46,48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"125\",\"name\":\"AQEShuffleRead\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"127\",\"name\":\"WholeStageCodegen (4)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"122\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[12,13],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375780665,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"5","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_17_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":179429,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":14,"Stage Attempt ID":0,"Task Info":{"Task ID":63,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375780697,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":14,"Stage Attempt ID":0,"Task Info":{"Task ID":64,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1724375780699,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_14_piece0","Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":8726,"Disk Size":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":14,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":63,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375780697,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375788398,"Failed":false,"Killed":false,"Accumulables":[{"ID":489,"Name":"task commit time","Update":"161","Value":"161","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":511,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":514,"Name":"local bytes read","Update":"11055349","Value":"11055349","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":515,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":516,"Name":"records read","Update":"505653","Value":"505653","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":539,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":542,"Name":"local bytes read","Update":"32511","Value":"32511","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":543,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":544,"Name":"records read","Update":"553","Value":"553","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":632,"Name":"duration","Update":"5404","Value":"5404","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":633,"Name":"number of output rows","Update":"505653","Value":"505653","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":634,"Name":"peak memory","Update":"117440512","Value":"117440512","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":636,"Name":"time in aggregation build","Update":"758","Value":"758","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":637,"Name":"avg hash probes per key","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":639,"Name":"number of output rows","Update":"505653","Value":"505653","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":640,"Name":"peak memory","Update":"117440512","Value":"117440512","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":642,"Name":"time in aggregation build","Update":"542","Value":"542","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":643,"Name":"avg hash probes per key","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":645,"Name":"number of output rows","Update":"505653","Value":"505653","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":646,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":647,"Name":"duration","Update":"1489","Value":"1489","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":648,"Name":"sort time","Update":"9","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":649,"Name":"peak memory","Update":"83886080","Value":"83886080","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":650,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":654,"Name":"duration","Update":"1468","Value":"1468","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"sort time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":656,"Name":"peak memory","Update":"16842752","Value":"16842752","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":657,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":661,"Name":"internal.metrics.executorDeserializeTime","Update":42,"Value":42,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.executorDeserializeCpuTime","Update":39428981,"Value":39428981,"Internal":true,"Count Failed Values":true},{"ID":663,"Name":"internal.metrics.executorRunTime","Update":7649,"Value":7649,"Internal":true,"Count Failed Values":true},{"ID":664,"Name":"internal.metrics.executorCpuTime","Update":4868419367,"Value":4868419367,"Internal":true,"Count Failed Values":true},{"ID":665,"Name":"internal.metrics.resultSize","Update":9521,"Value":9521,"Internal":true,"Count Failed Values":true},{"ID":666,"Name":"internal.metrics.jvmGCTime","Update":80,"Value":80,"Internal":true,"Count Failed Values":true},{"ID":670,"Name":"internal.metrics.peakExecutionMemory","Update":335609856,"Value":335609856,"Internal":true,"Count Failed Values":true},{"ID":672,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":673,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":674,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":675,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":676,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":11087860,"Value":11087860,"Internal":true,"Count Failed Values":true},{"ID":677,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":678,"Name":"internal.metrics.shuffle.read.recordsRead","Update":506206,"Value":506206,"Internal":true,"Count Failed Values":true},{"ID":679,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":680,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":681,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":682,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":683,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":684,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":685,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":686,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":687,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":688,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":694,"Name":"internal.metrics.output.bytesWritten","Update":2410749,"Value":2410749,"Internal":true,"Count Failed Values":true},{"ID":695,"Name":"internal.metrics.output.recordsWritten","Update":505653,"Value":505653,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":42,"Executor Deserialize CPU Time":39428981,"Executor Run Time":7649,"Executor CPU Time":4868419367,"Peak Execution Memory":335609856,"Result Size":9521,"JVM GC Time":80,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":3,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":11087860,"Total Records Read":506206,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":2410749,"Records Written":505653},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":14,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":64,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1724375780699,"Executor ID":"driver","Host":"192.168.0.62","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375789839,"Failed":false,"Killed":false,"Accumulables":[{"ID":489,"Name":"task commit time","Update":"204","Value":"365","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":511,"Name":"local blocks read","Update":"2","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":514,"Name":"local bytes read","Update":"11144021","Value":"22199370","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":515,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":516,"Name":"records read","Update":"511556","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":539,"Name":"local blocks read","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":542,"Name":"local bytes read","Update":"32356","Value":"64867","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":543,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":544,"Name":"records read","Update":"562","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":632,"Name":"duration","Update":"5465","Value":"10869","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":633,"Name":"number of output rows","Update":"511556","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":634,"Name":"peak memory","Update":"117440512","Value":"234881024","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":636,"Name":"time in aggregation build","Update":"1219","Value":"1977","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":637,"Name":"avg hash probes per key","Update":"16","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":639,"Name":"number of output rows","Update":"511556","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":640,"Name":"peak memory","Update":"117440512","Value":"234881024","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":642,"Name":"time in aggregation build","Update":"762","Value":"1304","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":643,"Name":"avg hash probes per key","Update":"16","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":645,"Name":"number of output rows","Update":"511556","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":646,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":647,"Name":"duration","Update":"860","Value":"2349","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":648,"Name":"sort time","Update":"22","Value":"31","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":649,"Name":"peak memory","Update":"83886080","Value":"167772160","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":650,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":654,"Name":"duration","Update":"839","Value":"2307","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"sort time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":656,"Name":"peak memory","Update":"16842752","Value":"33685504","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":657,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":661,"Name":"internal.metrics.executorDeserializeTime","Update":43,"Value":85,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.executorDeserializeCpuTime","Update":39369746,"Value":78798727,"Internal":true,"Count Failed Values":true},{"ID":663,"Name":"internal.metrics.executorRunTime","Update":9085,"Value":16734,"Internal":true,"Count Failed Values":true},{"ID":664,"Name":"internal.metrics.executorCpuTime","Update":4833697572,"Value":9702116939,"Internal":true,"Count Failed Values":true},{"ID":665,"Name":"internal.metrics.resultSize","Update":9563,"Value":19084,"Internal":true,"Count Failed Values":true},{"ID":666,"Name":"internal.metrics.jvmGCTime","Update":80,"Value":160,"Internal":true,"Count Failed Values":true},{"ID":667,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":670,"Name":"internal.metrics.peakExecutionMemory","Update":335609856,"Value":671219712,"Internal":true,"Count Failed Values":true},{"ID":672,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":673,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":3,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":674,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":675,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":676,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":11176377,"Value":22264237,"Internal":true,"Count Failed Values":true},{"ID":677,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":678,"Name":"internal.metrics.shuffle.read.recordsRead","Update":512118,"Value":1018324,"Internal":true,"Count Failed Values":true},{"ID":679,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":680,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":681,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":682,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":683,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":684,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":685,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":686,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":687,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":688,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":694,"Name":"internal.metrics.output.bytesWritten","Update":2384284,"Value":4795033,"Internal":true,"Count Failed Values":true},{"ID":695,"Name":"internal.metrics.output.recordsWritten","Update":511556,"Value":1017209,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":43,"Executor Deserialize CPU Time":39369746,"Executor Run Time":9085,"Executor CPU Time":4833697572,"Peak Execution Memory":335609856,"Result Size":9563,"JVM GC Time":80,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":3,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":11176377,"Total Records Read":512118,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":2384284,"Records Written":511556},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"112\",\"name\":\"WholeStageCodegen (5)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":47,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"130\",\"name\":\"AQEShuffleRead\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"ZippedPartitionsRDD2","Scope":"{\"id\":\"112\",\"name\":\"WholeStageCodegen (5)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[46,48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"125\",\"name\":\"AQEShuffleRead\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"127\",\"name\":\"WholeStageCodegen (4)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"122\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[12,13],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1724375780665,"Completion Time":1724375789841,"Accumulables":[{"ID":489,"Name":"task commit time","Value":"365","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":511,"Name":"local blocks read","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":514,"Name":"local bytes read","Value":"22199370","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":515,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":516,"Name":"records read","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":539,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":542,"Name":"local bytes read","Value":"64867","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":543,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":544,"Name":"records read","Value":"1115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":632,"Name":"duration","Value":"10869","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":633,"Name":"number of output rows","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":634,"Name":"peak memory","Value":"234881024","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":636,"Name":"time in aggregation build","Value":"1977","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":637,"Name":"avg hash probes per key","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":639,"Name":"number of output rows","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":640,"Name":"peak memory","Value":"234881024","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":642,"Name":"time in aggregation build","Value":"1304","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":643,"Name":"avg hash probes per key","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":645,"Name":"number of output rows","Value":"1017209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":646,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":647,"Name":"duration","Value":"2349","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":648,"Name":"sort time","Value":"31","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":649,"Name":"peak memory","Value":"167772160","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":650,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":654,"Name":"duration","Value":"2307","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"sort time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":656,"Name":"peak memory","Value":"33685504","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":657,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":661,"Name":"internal.metrics.executorDeserializeTime","Value":85,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.executorDeserializeCpuTime","Value":78798727,"Internal":true,"Count Failed Values":true},{"ID":663,"Name":"internal.metrics.executorRunTime","Value":16734,"Internal":true,"Count Failed Values":true},{"ID":664,"Name":"internal.metrics.executorCpuTime","Value":9702116939,"Internal":true,"Count Failed Values":true},{"ID":665,"Name":"internal.metrics.resultSize","Value":19084,"Internal":true,"Count Failed Values":true},{"ID":666,"Name":"internal.metrics.jvmGCTime","Value":160,"Internal":true,"Count Failed Values":true},{"ID":667,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":670,"Name":"internal.metrics.peakExecutionMemory","Value":671219712,"Internal":true,"Count Failed Values":true},{"ID":672,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":673,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":6,"Internal":true,"Count Failed Values":true},{"ID":674,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":675,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":676,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":22264237,"Internal":true,"Count Failed Values":true},{"ID":677,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":678,"Name":"internal.metrics.shuffle.read.recordsRead","Value":1018324,"Internal":true,"Count Failed Values":true},{"ID":679,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":680,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":681,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":682,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":683,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":684,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":685,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":686,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":687,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":688,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":694,"Name":"internal.metrics.output.bytesWritten","Value":4795033,"Internal":true,"Count Failed Values":true},{"ID":695,"Name":"internal.metrics.output.recordsWritten","Value":1017209,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":9,"Completion Time":1724375789841,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[485,2],[490,1],[487,1017209],[488,0],[486,4795033]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":5,"time":1724375789850,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":6,"rootExecutionId":0,"description":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.Snapshot.recordOperation(Snapshot.scala:75)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.Snapshot.recordDeltaOperation(Snapshot.scala:75)\norg.apache.spark.sql.delta.stats.DataSkippingReaderBase.filesForScan(DataSkippingReader.scala:874)\norg.apache.spark.sql.delta.stats.DataSkippingReaderBase.filesForScan$(DataSkippingReader.scala:871)\norg.apache.spark.sql.delta.Snapshot.filesForScan(Snapshot.scala:75)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles(OptimisticTransaction.scala:808)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles$(OptimisticTransaction.scala:807)\norg.apache.spark.sql.delta.OptimisticTransaction.filterFiles(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles(OptimisticTransaction.scala:804)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles$(OptimisticTransaction.scala:804)\norg.apache.spark.sql.delta.OptimisticTransaction.filterFiles(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.writeAndReturnCommitData(WriteIntoDelta.scala:307)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.$anonfun$run$1(WriteIntoDelta.scala:106)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.$anonfun$run$1$adapted(WriteIntoDelta.scala:101)","physicalPlanDescription":"== Physical Plan ==\n* Project (7)\n+- * SerializeFromObject (6)\n   +- * MapElements (5)\n      +- * DeserializeToObject (4)\n         +- * Project (3)\n            +- * Filter (2)\n               +- * Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log (1)\n\n\n(1) Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log [codegen id : 1]\nOutput [10]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324]\nArguments: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324], Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log MapPartitionsRDD[30] at save at NativeMethodAccessorImpl.java:0, ExistingRDD, UnknownPartitioning(0)\n\n(2) Filter [codegen id : 1]\nInput [10]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324]\nCondition : isnotnull(add#1316)\n\n(3) Project [codegen id : 1]\nOutput [1]: [add#1316]\nInput [10]: [txn#1315, add#1316, remove#1317, metaData#1318, protocol#1319, cdc#1320, checkpointMetadata#1321, sidecar#1322, domainMetadata#1323, commitInfo#1324]\n\n(4) DeserializeToObject [codegen id : 1]\nInput [1]: [add#1316]\nArguments: newInstance(class scala.Tuple1), obj#2467: scala.Tuple1\n\n(5) MapElements [codegen id : 1]\nInput [1]: [obj#2467]\nArguments: org.apache.spark.sql.Dataset$$Lambda$5741/188538618@443ad1c6, obj#2468: org.apache.spark.sql.delta.actions.AddFile\n\n(6) SerializeFromObject [codegen id : 1]\nInput [1]: [obj#2468]\nArguments: [staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).path, true, false, true) AS path#2469, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).partitionValues) AS partitionValues#2470, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).size AS size#2471L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).modificationTime AS modificationTime#2472L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).dataChange AS dataChange#2473, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).tags) AS tags#2475, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).maxRowIndex)) AS deletionVector#2476, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).baseRowId) AS baseRowId#2477L, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).defaultRowCommitVersion) AS defaultRowCommitVersion#2478L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).clusteringProvider), true, false, true) AS clusteringProvider#2479]\n\n(7) Project [codegen id : 1]\nOutput [11]: [path#2469, partitionValues#2470, size#2471L, modificationTime#2472L, dataChange#2473, null AS stats#2492, tags#2475, deletionVector#2476, baseRowId#2477L, defaultRowCommitVersion#2478L, clusteringProvider#2479]\nInput [10]: [path#2469, partitionValues#2470, size#2471L, modificationTime#2472L, dataChange#2473, tags#2475, deletionVector#2476, baseRowId#2477L, defaultRowCommitVersion#2478L, clusteringProvider#2479]\n\n","sparkPlanInfo":{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [path#2469, partitionValues#2470, size#2471L, modificationTime#2472L, dataChange#2473, null AS stats#2492, tags#2475, deletionVector#2476, baseRowId#2477L, defaultRowCommitVersion#2478L, clusteringProvider#2479]","children":[{"nodeName":"SerializeFromObject","simpleString":"SerializeFromObject [staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).path, true, false, true) AS path#2469, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).partitionValues) AS partitionValues#2470, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).size AS size#2471L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).modificationTime AS modificationTime#2472L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).dataChange AS dataChange#2473, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).tags) AS tags#2475, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).maxRowIndex)) AS deletionVector#2476, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).baseRowId) AS baseRowId#2477L, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).defaultRowCommitVersion) AS defaultRowCommitVersion#2478L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).clusteringProvider), true, false, true) AS clusteringProvider#2479]","children":[{"nodeName":"MapElements","simpleString":"MapElements org.apache.spark.sql.Dataset$$Lambda$5741/188538618@443ad1c6, obj#2468: org.apache.spark.sql.delta.actions.AddFile","children":[{"nodeName":"DeserializeToObject","simpleString":"DeserializeToObject newInstance(class scala.Tuple1), obj#2467: scala.Tuple1","children":[{"nodeName":"Project","simpleString":"Project [add#1316]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(add#1316)","children":[{"nodeName":"Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log","simpleString":"Scan ExistingRDD Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log[txn#1315,add#1316,remove#1317,metaData#1318,protocol#1319,cdc#1320,checkpointMetadata#1321,sidecar#1322,domainMetadata#1323,commitInfo#1324]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":698,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":697,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":696,"metricType":"timing"}]},"time":1724375790014,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"SparkListenerJobStart","Job ID":10,"Submission Time":1724375790135,"Stage Infos":[{"Stage ID":15,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":3,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"45\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"FileScanRDD","Scope":"{\"id\":\"55\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"55\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"FileScanRDD","Scope":"{\"id\":\"51\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"51\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"UnionRDD","Scope":"{\"id\":\"46\",\"name\":\"Union\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[18,21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"47\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":16,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":50,"RDD Info":[{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"153\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"MapPartitions\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"145\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"60\",\"name\":\"DeserializeToObject\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"66\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log","Scope":"{\"id\":\"67\",\"name\":\"map\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"SQLExecutionRDD","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"56\",\"name\":\"WholeStageCodegen (4)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"61\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[15],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.Snapshot.recordOperation(Snapshot.scala:75)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.Snapshot.recordDeltaOperation(Snapshot.scala:75)\norg.apache.spark.sql.delta.stats.DataSkippingReaderBase.filesForScan(DataSkippingReader.scala:874)\norg.apache.spark.sql.delta.stats.DataSkippingReaderBase.filesForScan$(DataSkippingReader.scala:871)\norg.apache.spark.sql.delta.Snapshot.filesForScan(Snapshot.scala:75)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles(OptimisticTransaction.scala:808)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles$(OptimisticTransaction.scala:807)\norg.apache.spark.sql.delta.OptimisticTransaction.filterFiles(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles(OptimisticTransaction.scala:804)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles$(OptimisticTransaction.scala:804)\norg.apache.spark.sql.delta.OptimisticTransaction.filterFiles(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.writeAndReturnCommitData(WriteIntoDelta.scala:307)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.$anonfun$run$1(WriteIntoDelta.scala:106)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.$anonfun$run$1$adapted(WriteIntoDelta.scala:101)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[15,16],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"6","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"154\",\"name\":\"collect\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":16,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":50,"RDD Info":[{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"153\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"MapPartitions\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"145\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"60\",\"name\":\"DeserializeToObject\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"66\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log","Scope":"{\"id\":\"67\",\"name\":\"map\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"SQLExecutionRDD","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"56\",\"name\":\"WholeStageCodegen (4)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"61\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[15],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.Snapshot.recordOperation(Snapshot.scala:75)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.Snapshot.recordDeltaOperation(Snapshot.scala:75)\norg.apache.spark.sql.delta.stats.DataSkippingReaderBase.filesForScan(DataSkippingReader.scala:874)\norg.apache.spark.sql.delta.stats.DataSkippingReaderBase.filesForScan$(DataSkippingReader.scala:871)\norg.apache.spark.sql.delta.Snapshot.filesForScan(Snapshot.scala:75)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles(OptimisticTransaction.scala:808)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles$(OptimisticTransaction.scala:807)\norg.apache.spark.sql.delta.OptimisticTransaction.filterFiles(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles(OptimisticTransaction.scala:804)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles$(OptimisticTransaction.scala:804)\norg.apache.spark.sql.delta.OptimisticTransaction.filterFiles(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.writeAndReturnCommitData(WriteIntoDelta.scala:307)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.$anonfun$run$1(WriteIntoDelta.scala:106)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.$anonfun$run$1$adapted(WriteIntoDelta.scala:101)","Submission Time":1724375790136,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"6","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"154\",\"name\":\"collect\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_18_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":165417,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":65,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375790151,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":66,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1724375790152,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":67,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1724375790152,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":68,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1724375790152,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":69,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1724375790152,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":70,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1724375790152,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":71,"Index":6,"Attempt":0,"Partition ID":6,"Launch Time":1724375790152,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":72,"Index":7,"Attempt":0,"Partition ID":7,"Launch Time":1724375790153,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":73,"Index":8,"Attempt":0,"Partition ID":8,"Launch Time":1724375790300,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":74,"Index":9,"Attempt":0,"Partition ID":9,"Launch Time":1724375790301,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":75,"Index":10,"Attempt":0,"Partition ID":10,"Launch Time":1724375790301,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":76,"Index":11,"Attempt":0,"Partition ID":11,"Launch Time":1724375790302,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":77,"Index":12,"Attempt":0,"Partition ID":12,"Launch Time":1724375790302,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":72,"Index":7,"Attempt":0,"Partition ID":7,"Launch Time":1724375790153,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790302,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":66,"Value":66,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":27498532,"Value":27498532,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":75,"Value":75,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":75466295,"Value":75466295,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":4636,"Internal":true,"Count Failed Values":true},{"ID":704,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":21,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":66,"Executor Deserialize CPU Time":27498532,"Executor Run Time":75,"Executor CPU Time":75466295,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":65,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375790151,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790304,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":68,"Value":134,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":26349434,"Value":53847966,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":77,"Value":152,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":2461294,"Value":77927589,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":9272,"Internal":true,"Count Failed Values":true},{"ID":704,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":30,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":42,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":68,"Executor Deserialize CPU Time":26349434,"Executor Run Time":77,"Executor CPU Time":2461294,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":66,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1724375790152,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790304,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":67,"Value":201,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":25758346,"Value":79606312,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":78,"Value":230,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":2694722,"Value":80622311,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":13908,"Internal":true,"Count Failed Values":true},{"ID":704,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":45,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":63,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":67,"Executor Deserialize CPU Time":25758346,"Executor Run Time":78,"Executor CPU Time":2694722,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":70,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1724375790152,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790305,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"2","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":67,"Value":268,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":24521155,"Value":104127467,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":78,"Value":308,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":2209658,"Value":82831969,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":18544,"Internal":true,"Count Failed Values":true},{"ID":704,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":60,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":84,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":67,"Executor Deserialize CPU Time":24521155,"Executor Run Time":78,"Executor CPU Time":2209658,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":78,"Index":13,"Attempt":0,"Partition ID":13,"Launch Time":1724375790306,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":79,"Index":14,"Attempt":0,"Partition ID":14,"Launch Time":1724375790307,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":80,"Index":15,"Attempt":0,"Partition ID":15,"Launch Time":1724375790307,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":68,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1724375790152,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790309,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":67,"Value":335,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":27446445,"Value":131573912,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":76,"Value":384,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":2824845,"Value":85656814,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4679,"Value":23223,"Internal":true,"Count Failed Values":true},{"ID":704,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":75,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":203,"Value":287,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":67,"Executor Deserialize CPU Time":27446445,"Executor Run Time":76,"Executor CPU Time":2824845,"Peak Execution Memory":0,"Result Size":4679,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":203,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":71,"Index":6,"Attempt":0,"Partition ID":6,"Launch Time":1724375790152,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790311,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"2","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":67,"Value":402,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":22365370,"Value":153939282,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":75,"Value":459,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":2373505,"Value":88030319,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4679,"Value":27902,"Internal":true,"Count Failed Values":true},{"ID":704,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":90,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":263,"Value":550,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":2,"Value":3,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":67,"Executor Deserialize CPU Time":22365370,"Executor Run Time":75,"Executor CPU Time":2373505,"Peak Execution Memory":0,"Result Size":4679,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":263,"Records Read":2},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":69,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1724375790152,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790311,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"2","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":64,"Value":466,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":25380080,"Value":179319362,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":77,"Value":536,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":2345225,"Value":90375544,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4679,"Value":32581,"Internal":true,"Count Failed Values":true},{"ID":704,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":105,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":203,"Value":753,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":4,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":64,"Executor Deserialize CPU Time":25380080,"Executor Run Time":77,"Executor CPU Time":2345225,"Peak Execution Memory":0,"Result Size":4679,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":203,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":81,"Index":16,"Attempt":0,"Partition ID":16,"Launch Time":1724375790314,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":67,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1724375790152,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790319,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":67,"Value":533,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":25894329,"Value":205213691,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":76,"Value":612,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":2705255,"Value":93080799,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":37217,"Internal":true,"Count Failed Values":true},{"ID":704,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":120,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":774,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":67,"Executor Deserialize CPU Time":25894329,"Executor Run Time":76,"Executor CPU Time":2705255,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":73,"Index":8,"Attempt":0,"Partition ID":8,"Launch Time":1724375790300,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790319,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":10,"Value":543,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8980297,"Value":214193988,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":613,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1446901,"Value":94527700,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":41810,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":795,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":10,"Executor Deserialize CPU Time":8980297,"Executor Run Time":1,"Executor CPU Time":1446901,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":82,"Index":17,"Attempt":0,"Partition ID":17,"Launch Time":1724375790326,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":83,"Index":18,"Attempt":0,"Partition ID":18,"Launch Time":1724375790327,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":78,"Index":13,"Attempt":0,"Partition ID":13,"Launch Time":1724375790306,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790328,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":8,"Value":551,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8086956,"Value":222280944,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":614,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1342199,"Value":95869899,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":46403,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":816,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":8,"Executor Deserialize CPU Time":8086956,"Executor Run Time":1,"Executor CPU Time":1342199,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":84,"Index":19,"Attempt":0,"Partition ID":19,"Launch Time":1724375790328,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":74,"Index":9,"Attempt":0,"Partition ID":9,"Launch Time":1724375790301,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790329,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"7","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"2","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":14,"Value":565,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8236588,"Value":230517532,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":8,"Value":622,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1486553,"Value":97356452,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":51039,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":263,"Value":1079,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":2,"Value":6,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":14,"Executor Deserialize CPU Time":8236588,"Executor Run Time":8,"Executor CPU Time":1486553,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":263,"Records Read":2},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":76,"Index":11,"Attempt":0,"Partition ID":11,"Launch Time":1724375790302,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790329,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":23,"Value":588,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8598731,"Value":239116263,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":623,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1403237,"Value":98759689,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":55632,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":1100,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":23,"Executor Deserialize CPU Time":8598731,"Executor Run Time":1,"Executor CPU Time":1403237,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":85,"Index":20,"Attempt":0,"Partition ID":20,"Launch Time":1724375790334,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":86,"Index":21,"Attempt":0,"Partition ID":21,"Launch Time":1724375790335,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":75,"Index":10,"Attempt":0,"Partition ID":10,"Launch Time":1724375790301,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790336,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":16,"Value":604,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8603607,"Value":247719870,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":624,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1485310,"Value":100244999,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":60225,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":1121,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":16,"Executor Deserialize CPU Time":8603607,"Executor Run Time":1,"Executor CPU Time":1485310,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":79,"Index":14,"Attempt":0,"Partition ID":14,"Launch Time":1724375790307,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790339,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":697,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"1","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":21,"Value":625,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9560488,"Value":257280358,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":2,"Value":626,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":2066678,"Value":102311677,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4763,"Value":64988,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":1019,"Value":2140,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":7,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":21,"Executor Deserialize CPU Time":9560488,"Executor Run Time":2,"Executor CPU Time":2066678,"Peak Execution Memory":0,"Result Size":4763,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1019,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":87,"Index":22,"Attempt":0,"Partition ID":22,"Launch Time":1724375790340,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":77,"Index":12,"Attempt":0,"Partition ID":12,"Launch Time":1724375790302,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790341,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":19,"Value":644,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8643832,"Value":265924190,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":5,"Value":631,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1407786,"Value":103719463,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":69581,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":2161,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":19,"Executor Deserialize CPU Time":8643832,"Executor Run Time":5,"Executor CPU Time":1407786,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":88,"Index":23,"Attempt":0,"Partition ID":23,"Launch Time":1724375790341,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":80,"Index":15,"Attempt":0,"Partition ID":15,"Launch Time":1724375790307,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790342,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":18,"Value":662,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8993229,"Value":274917419,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":3,"Value":634,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1718241,"Value":105437704,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":74174,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":2182,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":18,"Executor Deserialize CPU Time":8993229,"Executor Run Time":3,"Executor CPU Time":1718241,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":89,"Index":24,"Attempt":0,"Partition ID":24,"Launch Time":1724375790345,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":90,"Index":25,"Attempt":0,"Partition ID":25,"Launch Time":1724375790345,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":91,"Index":26,"Attempt":0,"Partition ID":26,"Launch Time":1724375790346,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":92,"Index":27,"Attempt":0,"Partition ID":27,"Launch Time":1724375790347,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":81,"Index":16,"Attempt":0,"Partition ID":16,"Launch Time":1724375790314,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790348,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":18,"Value":680,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9204039,"Value":284121458,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":635,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1480263,"Value":106917967,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":78810,"Internal":true,"Count Failed Values":true},{"ID":705,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":2203,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":18,"Executor Deserialize CPU Time":9204039,"Executor Run Time":1,"Executor CPU Time":1480263,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":84,"Index":19,"Attempt":0,"Partition ID":19,"Launch Time":1724375790328,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790348,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":15,"Value":695,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8755104,"Value":292876562,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":636,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1411663,"Value":108329630,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":83403,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":2224,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":15,"Executor Deserialize CPU Time":8755104,"Executor Run Time":1,"Executor CPU Time":1411663,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":83,"Index":18,"Attempt":0,"Partition ID":18,"Launch Time":1724375790327,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790348,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":8,"Value":703,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8477241,"Value":301353803,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":637,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1266254,"Value":109595884,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":87996,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":2245,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":8,"Executor Deserialize CPU Time":8477241,"Executor Run Time":1,"Executor CPU Time":1266254,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":93,"Index":28,"Attempt":0,"Partition ID":28,"Launch Time":1724375790354,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":82,"Index":17,"Attempt":0,"Partition ID":17,"Launch Time":1724375790326,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790355,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":15,"Value":718,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9141818,"Value":310495621,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":638,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1473268,"Value":111069152,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":92589,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":2266,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":15,"Executor Deserialize CPU Time":9141818,"Executor Run Time":1,"Executor CPU Time":1473268,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":85,"Index":20,"Attempt":0,"Partition ID":20,"Launch Time":1724375790334,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790355,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":15,"Value":733,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9178608,"Value":319674229,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":2,"Value":640,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1669632,"Value":112738784,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":97182,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":2287,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":15,"Executor Deserialize CPU Time":9178608,"Executor Run Time":2,"Executor CPU Time":1669632,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":94,"Index":29,"Attempt":0,"Partition ID":29,"Launch Time":1724375790364,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":89,"Index":24,"Attempt":0,"Partition ID":24,"Launch Time":1724375790345,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790365,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":11,"Value":744,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8582708,"Value":328256937,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":641,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1449484,"Value":114188268,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":101775,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":2308,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":11,"Executor Deserialize CPU Time":8582708,"Executor Run Time":1,"Executor CPU Time":1449484,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":86,"Index":21,"Attempt":0,"Partition ID":21,"Launch Time":1724375790335,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790367,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"2","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":15,"Value":759,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8931645,"Value":337188582,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":9,"Value":650,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1682575,"Value":115870843,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":106411,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":254,"Value":2562,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":2,"Value":9,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":15,"Executor Deserialize CPU Time":8931645,"Executor Run Time":9,"Executor CPU Time":1682575,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":254,"Records Read":2},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":95,"Index":30,"Attempt":0,"Partition ID":30,"Launch Time":1724375790368,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":96,"Index":31,"Attempt":0,"Partition ID":31,"Launch Time":1724375790369,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":97,"Index":32,"Attempt":0,"Partition ID":32,"Launch Time":1724375790370,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":98,"Index":33,"Attempt":0,"Partition ID":33,"Launch Time":1724375790370,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":99,"Index":34,"Attempt":0,"Partition ID":34,"Launch Time":1724375790374,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":87,"Index":22,"Attempt":0,"Partition ID":22,"Launch Time":1724375790340,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790375,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"1","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":17,"Value":776,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8786731,"Value":345975313,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":4,"Value":654,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1542156,"Value":117412999,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":111047,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":203,"Value":2765,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":10,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":17,"Executor Deserialize CPU Time":8786731,"Executor Run Time":4,"Executor CPU Time":1542156,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":203,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":90,"Index":25,"Attempt":0,"Partition ID":25,"Launch Time":1724375790345,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790375,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"1","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":14,"Value":790,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9060896,"Value":355036209,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":2,"Value":656,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1488836,"Value":118901835,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":115683,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":202,"Value":2967,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":11,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":14,"Executor Deserialize CPU Time":9060896,"Executor Run Time":2,"Executor CPU Time":1488836,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":202,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":93,"Index":28,"Attempt":0,"Partition ID":28,"Launch Time":1724375790354,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790375,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":10,"Value":800,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8664123,"Value":363700332,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":657,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1352888,"Value":120254723,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":120276,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":2988,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":10,"Executor Deserialize CPU Time":8664123,"Executor Run Time":1,"Executor CPU Time":1352888,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":88,"Index":23,"Attempt":0,"Partition ID":23,"Launch Time":1724375790341,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790375,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":13,"Value":813,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8645650,"Value":372345982,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":658,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1591551,"Value":121846274,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":124869,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":3009,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":13,"Executor Deserialize CPU Time":8645650,"Executor Run Time":1,"Executor CPU Time":1591551,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":100,"Index":35,"Attempt":0,"Partition ID":35,"Launch Time":1724375790377,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":101,"Index":36,"Attempt":0,"Partition ID":36,"Launch Time":1724375790378,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":91,"Index":26,"Attempt":0,"Partition ID":26,"Launch Time":1724375790346,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790380,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"1","Value":"12","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":13,"Value":826,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9123625,"Value":381469607,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":9,"Value":667,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1455833,"Value":123302107,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":129505,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":202,"Value":3211,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":12,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":13,"Executor Deserialize CPU Time":9123625,"Executor Run Time":9,"Executor CPU Time":1455833,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":202,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":102,"Index":37,"Attempt":0,"Partition ID":37,"Launch Time":1724375790381,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":92,"Index":27,"Attempt":0,"Partition ID":27,"Launch Time":1724375790347,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790381,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":20,"Value":846,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8576223,"Value":390045830,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":668,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1413571,"Value":124715678,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":134098,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":3232,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":20,"Executor Deserialize CPU Time":8576223,"Executor Run Time":1,"Executor CPU Time":1413571,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":97,"Index":32,"Attempt":0,"Partition ID":32,"Launch Time":1724375790370,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790382,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":8,"Value":854,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8627186,"Value":398673016,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":669,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1325548,"Value":126041226,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":138691,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":3253,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":8,"Executor Deserialize CPU Time":8627186,"Executor Run Time":1,"Executor CPU Time":1325548,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":103,"Index":38,"Attempt":0,"Partition ID":38,"Launch Time":1724375790382,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":95,"Index":30,"Attempt":0,"Partition ID":30,"Launch Time":1724375790368,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790383,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"1","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":8,"Value":862,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8918611,"Value":407591627,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":670,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1592731,"Value":127633957,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":143327,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":203,"Value":3456,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":13,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":8,"Executor Deserialize CPU Time":8918611,"Executor Run Time":1,"Executor CPU Time":1592731,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":203,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":104,"Index":39,"Attempt":0,"Partition ID":39,"Launch Time":1724375790389,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":98,"Index":33,"Attempt":0,"Partition ID":33,"Launch Time":1724375790370,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790390,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":11,"Value":873,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8074374,"Value":415666001,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":4,"Value":674,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1546939,"Value":129180896,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":147920,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":3477,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":11,"Executor Deserialize CPU Time":8074374,"Executor Run Time":4,"Executor CPU Time":1546939,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":105,"Index":40,"Attempt":0,"Partition ID":40,"Launch Time":1724375790391,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":94,"Index":29,"Attempt":0,"Partition ID":29,"Launch Time":1724375790364,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790391,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":18,"Value":891,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8784076,"Value":424450077,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":5,"Value":679,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1676565,"Value":130857461,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":152513,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":3498,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":18,"Executor Deserialize CPU Time":8784076,"Executor Run Time":5,"Executor CPU Time":1676565,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":106,"Index":41,"Attempt":0,"Partition ID":41,"Launch Time":1724375790397,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":107,"Index":42,"Attempt":0,"Partition ID":42,"Launch Time":1724375790398,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":100,"Index":35,"Attempt":0,"Partition ID":35,"Launch Time":1724375790377,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790398,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":12,"Value":903,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8451330,"Value":432901407,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":680,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1774712,"Value":132632173,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":157106,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":3519,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":12,"Executor Deserialize CPU Time":8451330,"Executor Run Time":1,"Executor CPU Time":1774712,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":101,"Index":36,"Attempt":0,"Partition ID":36,"Launch Time":1724375790378,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790398,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":9,"Value":912,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8420116,"Value":441321523,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":5,"Value":685,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1396149,"Value":134028322,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":161699,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":3540,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":9,"Executor Deserialize CPU Time":8420116,"Executor Run Time":5,"Executor CPU Time":1396149,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":108,"Index":43,"Attempt":0,"Partition ID":43,"Launch Time":1724375790405,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":109,"Index":44,"Attempt":0,"Partition ID":44,"Launch Time":1724375790406,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":110,"Index":45,"Attempt":0,"Partition ID":45,"Launch Time":1724375790407,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":96,"Index":31,"Attempt":0,"Partition ID":31,"Launch Time":1724375790369,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790407,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":26,"Value":938,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8997020,"Value":450318543,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":3,"Value":688,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1342757,"Value":135371079,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":166335,"Internal":true,"Count Failed Values":true},{"ID":705,"Name":"internal.metrics.resultSerializationTime","Update":4,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":3561,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":26,"Executor Deserialize CPU Time":8997020,"Executor Run Time":3,"Executor CPU Time":1342757,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":4,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":103,"Index":38,"Attempt":0,"Partition ID":38,"Launch Time":1724375790382,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790407,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":697,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"1","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":13,"Value":951,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8084494,"Value":458403037,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":6,"Value":694,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1556065,"Value":136927144,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4762,"Value":171097,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":1008,"Value":4569,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":14,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":13,"Executor Deserialize CPU Time":8084494,"Executor Run Time":6,"Executor CPU Time":1556065,"Peak Execution Memory":0,"Result Size":4762,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1008,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":102,"Index":37,"Attempt":0,"Partition ID":37,"Launch Time":1724375790381,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790407,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":9,"Value":960,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8188201,"Value":466591238,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":7,"Value":701,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1649278,"Value":138576422,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":175690,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":4590,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":9,"Executor Deserialize CPU Time":8188201,"Executor Run Time":7,"Executor CPU Time":1649278,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":111,"Index":46,"Attempt":0,"Partition ID":46,"Launch Time":1724375790410,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":99,"Index":34,"Attempt":0,"Partition ID":34,"Launch Time":1724375790374,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790411,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":24,"Value":984,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9047735,"Value":475638973,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":702,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1425398,"Value":140001820,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":180326,"Internal":true,"Count Failed Values":true},{"ID":705,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":4611,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":24,"Executor Deserialize CPU Time":9047735,"Executor Run Time":1,"Executor CPU Time":1425398,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":105,"Index":40,"Attempt":0,"Partition ID":40,"Launch Time":1724375790391,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790417,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":19,"Value":1003,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8760494,"Value":484399467,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":4,"Value":706,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1772095,"Value":141773915,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":184919,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":4632,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":19,"Executor Deserialize CPU Time":8760494,"Executor Run Time":4,"Executor CPU Time":1772095,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":112,"Index":47,"Attempt":0,"Partition ID":47,"Launch Time":1724375790417,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":113,"Index":48,"Attempt":0,"Partition ID":48,"Launch Time":1724375790418,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":106,"Index":41,"Attempt":0,"Partition ID":41,"Launch Time":1724375790397,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790419,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"1","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":16,"Value":1019,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9118103,"Value":493517570,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":707,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1480832,"Value":143254747,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":189555,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":202,"Value":4834,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":15,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":16,"Executor Deserialize CPU Time":9118103,"Executor Run Time":1,"Executor CPU Time":1480832,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":202,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":107,"Index":42,"Attempt":0,"Partition ID":42,"Launch Time":1724375790398,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790420,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"2","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":16,"Value":1035,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8997283,"Value":502514853,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":708,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1345658,"Value":144600405,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":194191,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":701,"Value":5535,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":2,"Value":17,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":16,"Executor Deserialize CPU Time":8997283,"Executor Run Time":1,"Executor CPU Time":1345658,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":701,"Records Read":2},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":114,"Index":49,"Attempt":0,"Partition ID":49,"Launch Time":1724375790420,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":104,"Index":39,"Attempt":0,"Partition ID":39,"Launch Time":1724375790389,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790426,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":26,"Value":1061,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8100297,"Value":510615150,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":709,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1405781,"Value":146006186,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":198827,"Internal":true,"Count Failed Values":true},{"ID":705,"Name":"internal.metrics.resultSerializationTime","Update":3,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":5556,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":26,"Executor Deserialize CPU Time":8100297,"Executor Run Time":1,"Executor CPU Time":1405781,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":3,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":109,"Index":44,"Attempt":0,"Partition ID":44,"Launch Time":1724375790406,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790428,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":16,"Value":1077,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8602829,"Value":519217979,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":1,"Value":710,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1467627,"Value":147473813,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":203463,"Internal":true,"Count Failed Values":true},{"ID":705,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":5577,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":16,"Executor Deserialize CPU Time":8602829,"Executor Run Time":1,"Executor CPU Time":1467627,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":110,"Index":45,"Attempt":0,"Partition ID":45,"Launch Time":1724375790407,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790435,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"1","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":24,"Value":1101,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8931651,"Value":528149630,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":2,"Value":712,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1464734,"Value":148938547,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":208099,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":203,"Value":5780,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":18,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":24,"Executor Deserialize CPU Time":8931651,"Executor Run Time":2,"Executor CPU Time":1464734,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":203,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":112,"Index":47,"Attempt":0,"Partition ID":47,"Launch Time":1724375790417,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790437,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":9,"Value":1110,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8134212,"Value":536283842,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":2,"Value":714,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1550116,"Value":150488663,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":212735,"Internal":true,"Count Failed Values":true},{"ID":705,"Name":"internal.metrics.resultSerializationTime","Update":3,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":5801,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":9,"Executor Deserialize CPU Time":8134212,"Executor Run Time":2,"Executor CPU Time":1550116,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":3,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":111,"Index":46,"Attempt":0,"Partition ID":46,"Launch Time":1724375790410,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790437,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":21,"Value":1131,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8944429,"Value":545228271,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":2,"Value":716,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1447702,"Value":151936365,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":217328,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":5822,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":21,"Executor Deserialize CPU Time":8944429,"Executor Run Time":2,"Executor CPU Time":1447702,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":114,"Index":49,"Attempt":0,"Partition ID":49,"Launch Time":1724375790420,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790438,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Update":"2","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":10,"Value":1141,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8870012,"Value":554098283,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":5,"Value":721,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1603428,"Value":153539793,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4636,"Value":221964,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":263,"Value":6085,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Update":2,"Value":20,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":10,"Executor Deserialize CPU Time":8870012,"Executor Run Time":5,"Executor CPU Time":1603428,"Peak Execution Memory":0,"Result Size":4636,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":263,"Records Read":2},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":108,"Index":43,"Attempt":0,"Partition ID":43,"Launch Time":1724375790405,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790439,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"0","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":22,"Value":1163,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9399282,"Value":563497565,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":3,"Value":724,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1779687,"Value":155319480,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":226557,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":6106,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":22,"Executor Deserialize CPU Time":9399282,"Executor Run Time":3,"Executor CPU Time":1779687,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":113,"Index":48,"Attempt":0,"Partition ID":48,"Launch Time":1724375790418,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375790441,"Failed":false,"Killed":false,"Accumulables":[{"ID":696,"Name":"duration","Update":"1","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Update":15,"Value":1178,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9398355,"Value":572895920,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Update":4,"Value":728,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Update":1431657,"Value":156751137,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Update":4593,"Value":231150,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Update":21,"Value":6127,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":15,"Executor Deserialize CPU Time":9398355,"Executor Run Time":4,"Executor CPU Time":1431657,"Peak Execution Memory":0,"Result Size":4593,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":21,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":16,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":50,"RDD Info":[{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"153\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"MapPartitions\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"145\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"60\",\"name\":\"DeserializeToObject\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"66\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"Delta Table State #13 - s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log","Scope":"{\"id\":\"67\",\"name\":\"map\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"SQLExecutionRDD","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"56\",\"name\":\"WholeStageCodegen (4)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"61\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[15],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.Snapshot.recordOperation(Snapshot.scala:75)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.Snapshot.recordDeltaOperation(Snapshot.scala:75)\norg.apache.spark.sql.delta.stats.DataSkippingReaderBase.filesForScan(DataSkippingReader.scala:874)\norg.apache.spark.sql.delta.stats.DataSkippingReaderBase.filesForScan$(DataSkippingReader.scala:871)\norg.apache.spark.sql.delta.Snapshot.filesForScan(Snapshot.scala:75)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles(OptimisticTransaction.scala:808)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles$(OptimisticTransaction.scala:807)\norg.apache.spark.sql.delta.OptimisticTransaction.filterFiles(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles(OptimisticTransaction.scala:804)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.filterFiles$(OptimisticTransaction.scala:804)\norg.apache.spark.sql.delta.OptimisticTransaction.filterFiles(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.writeAndReturnCommitData(WriteIntoDelta.scala:307)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.$anonfun$run$1(WriteIntoDelta.scala:106)\norg.apache.spark.sql.delta.commands.WriteIntoDelta.$anonfun$run$1$adapted(WriteIntoDelta.scala:101)","Submission Time":1724375790136,"Completion Time":1724375790442,"Accumulables":[{"ID":696,"Name":"duration","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":697,"Name":"number of output rows","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":698,"Name":"number of output rows","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":699,"Name":"internal.metrics.executorDeserializeTime","Value":1178,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.executorDeserializeCpuTime","Value":572895920,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.executorRunTime","Value":728,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.executorCpuTime","Value":156751137,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.resultSize","Value":231150,"Internal":true,"Count Failed Values":true},{"ID":704,"Name":"internal.metrics.jvmGCTime","Value":120,"Internal":true,"Count Failed Values":true},{"ID":705,"Name":"internal.metrics.resultSerializationTime","Value":15,"Internal":true,"Count Failed Values":true},{"ID":730,"Name":"internal.metrics.input.bytesRead","Value":6127,"Internal":true,"Count Failed Values":true},{"ID":731,"Name":"internal.metrics.input.recordsRead","Value":20,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":10,"Completion Time":1724375790442,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":6,"time":1724375790457,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":7,"rootExecutionId":0,"description":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.$anonfun$updateAfterCommit$1(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly(SnapshotManagement.scala:78)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly$(SnapshotManagement.scala:75)\norg.apache.spark.sql.delta.DeltaLog.withSnapshotLockInterruptibly(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit$(SnapshotManagement.scala:1120)\norg.apache.spark.sql.delta.DeltaLog.updateAfterCommit(DeltaLog.scala:74)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit(OptimisticTransaction.scala:1941)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit$(OptimisticTransaction.scala:1902)\norg.apache.spark.sql.delta.OptimisticTransaction.doCommit(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.$anonfun$doCommitRetryIteratively$3(OptimisticTransaction.scala:1848)\nscala.collection.immutable.Range.foreach$mVc$sp(Range.scala:158)","physicalPlanDescription":"== Physical Plan ==\nUnion (8)\n:- * Project (4)\n:  +- * Filter (3)\n:     +- * ColumnarToRow (2)\n:        +- Scan parquet  (1)\n+- * Project (7)\n   +- * Filter (6)\n      +- Scan json  (5)\n\n\n(1) Scan parquet \nOutput [4]: [metaData#2538, protocol#2539, commitInfo#2540, version#2541L]\nBatched: true\nLocation: DeltaLogFileIndex [s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000010.checkpoint.parquet]\nPushedFilters: [Or(IsNotNull(protocol.minReaderVersion),IsNotNull(metaData.id))]\nReadSchema: struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,commitInfo:struct<inCommitTimestamp:bigint>>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [4]: [metaData#2538, protocol#2539, commitInfo#2540, version#2541L]\n\n(3) Filter [codegen id : 1]\nInput [4]: [metaData#2538, protocol#2539, commitInfo#2540, version#2541L]\nCondition : (isnotnull(protocol#2539.minReaderVersion) OR isnotnull(metaData#2538.id))\n\n(4) Project [codegen id : 1]\nOutput [4]: [protocol#2539, metaData#2538, commitInfo#2540.inCommitTimestamp AS inCommitTimestamp#2564L, 10 AS version#2546L]\nInput [4]: [metaData#2538, protocol#2539, commitInfo#2540, version#2541L]\n\n(5) Scan json \nOutput [4]: [metaData#2552, protocol#2553, commitInfo#2554, version#2555L]\nBatched: false\nLocation: DeltaLogFileIndex [s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000011.json, ... 3 entries]\nReadSchema: struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(6) Filter [codegen id : 2]\nInput [4]: [metaData#2552, protocol#2553, commitInfo#2554, version#2555L]\nCondition : ((isnotnull(protocol#2553.minReaderVersion) OR isnotnull(metaData#2552.id)) OR (isnotnull(commitInfo#2554.inCommitTimestamp) AND (version#2555L = 14)))\n\n(7) Project [codegen id : 2]\nOutput [4]: [protocol#2553, metaData#2552, commitInfo#2554.inCommitTimestamp AS inCommitTimestamp#2581L, version#2555L]\nInput [4]: [metaData#2552, protocol#2553, commitInfo#2554, version#2555L]\n\n(8) Union\n\n","sparkPlanInfo":{"nodeName":"Union","simpleString":"Union","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [protocol#2539, metaData#2538, commitInfo#2540.inCommitTimestamp AS inCommitTimestamp#2564L, 10 AS version#2546L]","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(protocol#2539.minReaderVersion) OR isnotnull(metaData#2538.id))","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [metaData#2538,protocol#2539,commitInfo#2540,version#2541L] Batched: true, DataFilters: [(isnotnull(protocol#2539.minReaderVersion) OR isnotnull(metaData#2538.id))], Format: Parquet, Location: DeltaLogFileIndex(1 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/0000..., PartitionFilters: [], PushedFilters: [Or(IsNotNull(protocol.minReaderVersion),IsNotNull(metaData.id))], ReadSchema: struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,opt...","children":[],"metadata":{"Location":"DeltaLogFileIndex(1 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000010.checkpoint.parquet]","ReadSchema":"struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,commitInfo:struct<inCommitTimestamp:bigint>>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[Or(IsNotNull(protocol.minReaderVersion),IsNotNull(metaData.id))]","DataFilters":"[(isnotnull(protocol#2539.minReaderVersion) OR isnotnull(metaData#2538.id))]"},"metrics":[{"name":"number of files read","accumulatorId":740,"metricType":"sum"},{"name":"scan time","accumulatorId":739,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":744,"metricType":"timing"},{"name":"metadata time","accumulatorId":741,"metricType":"timing"},{"name":"size of files read","accumulatorId":742,"metricType":"size"},{"name":"number of output rows","accumulatorId":738,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":743,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":736,"metricType":"sum"},{"name":"number of input batches","accumulatorId":737,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":735,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":734,"metricType":"timing"}]},{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Project","simpleString":"Project [protocol#2553, metaData#2552, commitInfo#2554.inCommitTimestamp AS inCommitTimestamp#2581L, version#2555L]","children":[{"nodeName":"Filter","simpleString":"Filter ((isnotnull(protocol#2553.minReaderVersion) OR isnotnull(metaData#2552.id)) OR (isnotnull(commitInfo#2554.inCommitTimestamp) AND (version#2555L = 14)))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [metaData#2552,protocol#2553,commitInfo#2554,version#2555L] Batched: false, DataFilters: [((isnotnull(protocol#2553.minReaderVersion) OR isnotnull(metaData#2552.id)) OR isnotnull(commitI..., Format: JSON, Location: DeltaLogFileIndex(4 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/0000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,opt...","children":[],"metadata":{"Location":"DeltaLogFileIndex(4 paths)[s3a://datalake-test-thiago/02-silver/delta/store_sales/_delta_log/00000000000000000011.json, ...]","ReadSchema":"struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[((isnotnull(protocol#2553.minReaderVersion) OR isnotnull(metaData#2552.id)) OR isnotnull(commitInfo#2554.inCommitTimestamp))]"},"metrics":[{"name":"number of files read","accumulatorId":748,"metricType":"sum"},{"name":"dynamic partition pruning time","accumulatorId":752,"metricType":"timing"},{"name":"metadata time","accumulatorId":749,"metricType":"timing"},{"name":"size of files read","accumulatorId":750,"metricType":"size"},{"name":"number of output rows","accumulatorId":747,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":751,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":746,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":745,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1724375793058,"modifiedConfigs":{"spark.databricks.delta.lastCommitVersionInSession":"14","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_19_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":38911,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":7,"accumUpdates":[[740,1],[744,0],[741,0],[742,20836],[743,1]]}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_20_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":37553,"Disk Size":0}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":7,"accumUpdates":[[748,4],[752,0],[749,0],[750,19432],[751,4]]}
{"Event":"SparkListenerJobStart","Job ID":11,"Submission Time":1724375793130,"Stage Infos":[{"Stage ID":17,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":3,"RDD Info":[{"RDD ID":60,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"170\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[59],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":58,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"165\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[57],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":59,"Name":"UnionRDD","Scope":"{\"id\":\"158\",\"name\":\"Union\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[55,58],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":57,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"169\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"164\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"FileScanRDD","Scope":"{\"id\":\"169\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"159\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"FileScanRDD","Scope":"{\"id\":\"164\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.$anonfun$updateAfterCommit$1(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly(SnapshotManagement.scala:78)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly$(SnapshotManagement.scala:75)\norg.apache.spark.sql.delta.DeltaLog.withSnapshotLockInterruptibly(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit$(SnapshotManagement.scala:1120)\norg.apache.spark.sql.delta.DeltaLog.updateAfterCommit(DeltaLog.scala:74)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit(OptimisticTransaction.scala:1941)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit$(OptimisticTransaction.scala:1902)\norg.apache.spark.sql.delta.OptimisticTransaction.doCommit(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.$anonfun$doCommitRetryIteratively$3(OptimisticTransaction.scala:1848)\nscala.collection.immutable.Range.foreach$mVc$sp(Range.scala:158)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[17],"Properties":{"spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.databricks.delta.lastCommitVersionInSession":"14","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"7","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"171\",\"name\":\"collect\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":17,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":3,"RDD Info":[{"RDD ID":60,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"170\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[59],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":58,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"165\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[57],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":59,"Name":"UnionRDD","Scope":"{\"id\":\"158\",\"name\":\"Union\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[55,58],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":57,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"169\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"164\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"FileScanRDD","Scope":"{\"id\":\"169\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"159\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"FileScanRDD","Scope":"{\"id\":\"164\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.$anonfun$updateAfterCommit$1(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly(SnapshotManagement.scala:78)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly$(SnapshotManagement.scala:75)\norg.apache.spark.sql.delta.DeltaLog.withSnapshotLockInterruptibly(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit$(SnapshotManagement.scala:1120)\norg.apache.spark.sql.delta.DeltaLog.updateAfterCommit(DeltaLog.scala:74)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit(OptimisticTransaction.scala:1941)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit$(OptimisticTransaction.scala:1902)\norg.apache.spark.sql.delta.OptimisticTransaction.doCommit(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.$anonfun$doCommitRetryIteratively$3(OptimisticTransaction.scala:1848)\nscala.collection.immutable.Range.foreach$mVc$sp(Range.scala:158)","Submission Time":1724375793131,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"resource.executor.cores":"4","spark.sql.broadcastTimeout":"300000","spark.driver.port":"43357","spark.databricks.delta.lastCommitVersionInSession":"14","spark.executor.cores":"4","spark.sql.execution.root.id":"0","spark.sql.parquet.datetimeRebaseModeInRead":"LEGACY","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.repl.local.jars":"file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,file:///home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.heartbeatInterval":"100000000","spark.memory.offHeap.size":"4G","spark.logConf":"True","spark.files":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.submit.pyFiles":"/home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,/home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar,/home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar","spark.executor.memory":"12G","spark.executor.id":"driver","spark.app.startTime":"1724375736714","spark.rdd.compress":"True","spark.sql.repl.eagerEval.enabled":"True","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.session.timeZone":"UTC","spark.master":"local[*]","spark.driver.memory":"4G","spark.serializer.objectStreamReset":"100","spark.app.initial.jar.urls":"spark://192.168.0.62:43357/jars/aws-java-sdk-1.7.4.jar,spark://192.168.0.62:43357/jars/jets3t-0.9.4.jar,spark://192.168.0.62:43357/jars/hadoop-aws-2.7.7.jar","spark.driver.bindAddress":"0.0.0.0","spark.ui.showConsoleProgress":"True","spark.sql.autoBroadcastJoinThreshold":"-1","spark.app.initial.file.urls":"file:///home/thiago/.ivy2/jars/io.delta_delta-spark_2.12-3.2.0.jar,file:///home/thiago/.ivy2/jars/org.antlr_antlr4-runtime-4.9.3.jar,file:///home/thiago/.ivy2/jars/io.delta_delta-storage-3.2.0.jar","spark.eventLog.jsonFormat.enabled":"true","spark.driver.host":"192.168.0.62","spark.kryoserializer.buffer.max":"2047","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.submit.deployMode":"client","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.arrow.pyspark.enabled":"True","spark.sql.parquet.int96RebaseModeInWrite":"LEGACY","spark.default.parallelism":"2","spark.sql.execution.id":"7","spark.sql.parquet.compression.codec":"snappy","spark.app.submitTime":"1724375736587","spark.rdd.scope.noOverride":"true","spark.eventLog.enabled":"True","spark.app.name":"PySpark","spark.sql.parquet.fieldId.read.enabled":"true","spark.eventLog.logBlockUpdates.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.timeParserPolicy":"LEGACY","spark.jars.packages":"io.delta:delta-spark_2.12:3.2.0","spark.rdd.scope":"{\"id\":\"171\",\"name\":\"collect\"}","spark.app.id":"local-1724375737384","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"file:/home/thiago/Documentos/GitHub/pipeline_de_dados/spark-warehouse","spark.network.timeout":"100000000","spark.memory.offHeap.enabled":"true","spark.eventLog.dir":"/home/thiago/Documentos/GitHub/pipeline_de_dados/logs/spark-events","spark.sql.debug.maxToStringFields":"1000","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.parquet.datetimeRebaseModeInWrite":"LEGACY","spark.executor.instances":"2","spark.sql.parquet.fieldId.write.enabled":"true","spark.jars":"\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/aws-java-sdk-1.7.4.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/hadoop-aws-2.7.7.jar,\n            /home/thiago/Documentos/GitHub/pipeline_de_dados/utils/spark_jars/jets3t-0.9.4.jar\n            ","spark.sql.parquet.int96RebaseModeInRead":"LEGACY"}}
{"Event":"SparkListenerBlockUpdated","Block Updated Info":{"Block Manager ID":{"Executor ID":"driver","Host":"192.168.0.62","Port":35851},"Block ID":"broadcast_21_piece0","Storage Level":{"Use Disk":false,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Memory Size":29923,"Disk Size":0}}
{"Event":"SparkListenerTaskStart","Stage ID":17,"Stage Attempt ID":0,"Task Info":{"Task ID":115,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375793135,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":17,"Stage Attempt ID":0,"Task Info":{"Task ID":116,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1724375793136,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":17,"Stage Attempt ID":0,"Task Info":{"Task ID":117,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1724375793136,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":17,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":117,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1724375793136,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375793847,"Failed":false,"Killed":false,"Accumulables":[{"ID":745,"Name":"duration","Update":"684","Value":"684","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":747,"Name":"number of output rows","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":753,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2504959,"Value":2504959,"Internal":true,"Count Failed Values":true},{"ID":755,"Name":"internal.metrics.executorRunTime","Update":704,"Value":704,"Internal":true,"Count Failed Values":true},{"ID":756,"Name":"internal.metrics.executorCpuTime","Update":24249728,"Value":24249728,"Internal":true,"Count Failed Values":true},{"ID":757,"Name":"internal.metrics.resultSize","Update":1775,"Value":1775,"Internal":true,"Count Failed Values":true},{"ID":784,"Name":"internal.metrics.input.bytesRead","Update":9716,"Value":9716,"Internal":true,"Count Failed Values":true},{"ID":785,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":10,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":2504959,"Executor Run Time":704,"Executor CPU Time":24249728,"Peak Execution Memory":0,"Result Size":1775,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":9716,"Records Read":10},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":17,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":116,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1724375793136,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375794243,"Failed":false,"Killed":false,"Accumulables":[{"ID":745,"Name":"duration","Update":"1081","Value":"1765","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":747,"Name":"number of output rows","Update":"10","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":753,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2390532,"Value":4895491,"Internal":true,"Count Failed Values":true},{"ID":755,"Name":"internal.metrics.executorRunTime","Update":1101,"Value":1805,"Internal":true,"Count Failed Values":true},{"ID":756,"Name":"internal.metrics.executorCpuTime","Update":65741132,"Value":89990860,"Internal":true,"Count Failed Values":true},{"ID":757,"Name":"internal.metrics.resultSize","Update":1775,"Value":3550,"Internal":true,"Count Failed Values":true},{"ID":784,"Name":"internal.metrics.input.bytesRead","Update":9716,"Value":19432,"Internal":true,"Count Failed Values":true},{"ID":785,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":20,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":2390532,"Executor Run Time":1101,"Executor CPU Time":65741132,"Peak Execution Memory":0,"Result Size":1775,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":9716,"Records Read":10},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":17,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":115,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1724375793135,"Executor ID":"driver","Host":"192.168.0.62","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1724375795623,"Failed":false,"Killed":false,"Accumulables":[{"ID":734,"Name":"duration","Update":"2480","Value":"2480","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":735,"Name":"number of output rows","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":736,"Name":"number of output rows","Update":"14","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":737,"Name":"number of input batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":738,"Name":"number of output rows","Update":"14","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":739,"Name":"scan time","Update":"2479","Value":"2479","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":753,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.executorDeserializeCpuTime","Update":1802259,"Value":6697750,"Internal":true,"Count Failed Values":true},{"ID":755,"Name":"internal.metrics.executorRunTime","Update":2481,"Value":4286,"Internal":true,"Count Failed Values":true},{"ID":756,"Name":"internal.metrics.executorCpuTime","Update":54934503,"Value":144925363,"Internal":true,"Count Failed Values":true},{"ID":757,"Name":"internal.metrics.resultSize","Update":2418,"Value":5968,"Internal":true,"Count Failed Values":true},{"ID":784,"Name":"internal.metrics.input.bytesRead","Update":39470,"Value":58902,"Internal":true,"Count Failed Values":true},{"ID":785,"Name":"internal.metrics.input.recordsRead","Update":14,"Value":34,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":1802259,"Executor Run Time":2481,"Executor CPU Time":54934503,"Peak Execution Memory":0,"Result Size":2418,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":39470,"Records Read":14},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":17,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":3,"RDD Info":[{"RDD ID":60,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"170\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[59],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":58,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"165\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[57],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":59,"Name":"UnionRDD","Scope":"{\"id\":\"158\",\"name\":\"Union\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[55,58],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":3,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":57,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"169\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"164\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"FileScanRDD","Scope":"{\"id\":\"169\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"159\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"FileScanRDD","Scope":"{\"id\":\"164\",\"name\":\"Scan parquet \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.$anonfun$updateAfterCommit$1(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly(SnapshotManagement.scala:78)\norg.apache.spark.sql.delta.SnapshotManagement.withSnapshotLockInterruptibly$(SnapshotManagement.scala:75)\norg.apache.spark.sql.delta.DeltaLog.withSnapshotLockInterruptibly(DeltaLog.scala:74)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit(SnapshotManagement.scala:1125)\norg.apache.spark.sql.delta.SnapshotManagement.updateAfterCommit$(SnapshotManagement.scala:1120)\norg.apache.spark.sql.delta.DeltaLog.updateAfterCommit(DeltaLog.scala:74)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit(OptimisticTransaction.scala:1941)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.doCommit$(OptimisticTransaction.scala:1902)\norg.apache.spark.sql.delta.OptimisticTransaction.doCommit(OptimisticTransaction.scala:147)\norg.apache.spark.sql.delta.OptimisticTransactionImpl.$anonfun$doCommitRetryIteratively$3(OptimisticTransaction.scala:1848)\nscala.collection.immutable.Range.foreach$mVc$sp(Range.scala:158)","Submission Time":1724375793131,"Completion Time":1724375795624,"Accumulables":[{"ID":734,"Name":"duration","Value":"2480","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":735,"Name":"number of output rows","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":736,"Name":"number of output rows","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":737,"Name":"number of input batches","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":738,"Name":"number of output rows","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":739,"Name":"scan time","Value":"2479","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":745,"Name":"duration","Value":"1765","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":747,"Name":"number of output rows","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":753,"Name":"internal.metrics.executorDeserializeTime","Value":9,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.executorDeserializeCpuTime","Value":6697750,"Internal":true,"Count Failed Values":true},{"ID":755,"Name":"internal.metrics.executorRunTime","Value":4286,"Internal":true,"Count Failed Values":true},{"ID":756,"Name":"internal.metrics.executorCpuTime","Value":144925363,"Internal":true,"Count Failed Values":true},{"ID":757,"Name":"internal.metrics.resultSize","Value":5968,"Internal":true,"Count Failed Values":true},{"ID":784,"Name":"internal.metrics.input.bytesRead","Value":58902,"Internal":true,"Count Failed Values":true},{"ID":785,"Name":"internal.metrics.input.recordsRead","Value":34,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":11,"Completion Time":1724375795624,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":7,"time":1724375795632,"errorMessage":""}
{"Event":"SparkListenerUnpersistRDD","RDD ID":30}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":0,"time":1724375795670,"errorMessage":""}
{"Event":"SparkListenerApplicationEnd","Timestamp":1724375795709}
